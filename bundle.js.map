{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 0d1d76869ac9e20d5f7e","webpack:///./src/index.js","webpack:///./~/three/three.js","webpack:///./~/preact/src/vnode.js","webpack:///./~/preact/src/util.js","webpack:///./~/preact/src/options.js","webpack:///./~/preact/src/hooks.js","webpack:///./~/preact/src/h.js","webpack:///./~/preact/src/linked-state.js","webpack:///./~/preact/src/render-queue.js","webpack:///./~/preact/src/vdom/functional-component.js","webpack:///./~/preact/src/dom/index.js","webpack:///./~/preact/src/vdom/index.js","webpack:///./~/preact/src/dom/recycler.js","webpack:///./~/preact/src/vdom/diff.js","webpack:///./~/preact/src/vdom/component-recycler.js","webpack:///./~/preact/src/vdom/component.js","webpack:///./~/preact/src/component.js","webpack:///./~/preact/src/render.js","webpack:///./~/preact/src/constants.js","webpack:///./~/preact/src/preact.js","webpack:///./src/config.js","webpack:///decko.js","webpack:///./~/lodash/isPlainObject.js","webpack:///../src/index.js","webpack:///./~/process/browser.js","webpack:///./~/react-redux/lib/index.js","webpack:///./~/redux/lib/index.js","webpack:///./~/timers-browserify/main.js","webpack:///./src/actions.js","webpack:///./src/components/todo-item.js","webpack:///./src/core/egg.js","webpack:///./src/reducers.js","webpack:///./src/util.js","webpack:///./~/react-redux/lib/utils/storeShape.js","webpack:///./~/react-redux/lib/utils/warning.js","webpack:///./~/redux/lib/compose.js","webpack:///./~/redux/lib/createStore.js","webpack:///./~/redux/lib/utils/warning.js","webpack:///./src/components/app.js","webpack:///./src/components/game.js","webpack:///./src/core/box.js","webpack:///./src/core/chicken.js","webpack:///./src/core/forest.js","webpack:///./src/core/grid.js","webpack:///./src/core/ground.js","webpack:///./src/core/label.js","webpack:///./src/core/loadmodel.js","webpack:///./src/core/logo.js","webpack:///./src/core/traffic.js","webpack:///./src/lib/loaders/MTLLoader.js","webpack:///./src/lib/loaders/OBJMTLLoader.js","webpack:///./src/store.js","webpack:///./~/hoist-non-react-statics/index.js","webpack:///./~/invariant/browser.js","webpack:///./~/lodash/_getPrototype.js","webpack:///./~/lodash/_isHostObject.js","webpack:///./~/lodash/isObjectLike.js","webpack:///./~/papergirl/dist/papergirl.js","webpack:///index.js","webpack:///./~/randomcolor/randomColor.js","webpack:///./~/react-redux/lib/components/Provider.js","webpack:///./~/react-redux/lib/components/connect.js","webpack:///./~/react-redux/lib/utils/shallowEqual.js","webpack:///./~/react-redux/lib/utils/wrapActionCreators.js","webpack:///./~/redux/lib/applyMiddleware.js","webpack:///./~/redux/lib/bindActionCreators.js","webpack:///./~/redux/lib/combineReducers.js","webpack:///./~/symbol-observable/index.js","webpack:///./~/symbol-observable/ponyfill.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_preact","_reactRedux","_store","_store2","_app","_game","_game2","render","h","Provider","store","document","body","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","self","THREE","REVISION","a","undefined","requestAnimationFrame","cancelAnimationFrame","lastTime","vendors","x","length","setTimeout","callback","currTime","Date","now","timeToCall","Math","max","clearTimeout","sign","Function","prototype","name","Object","defineProperty","get","this","toString","match","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","console","error","projectVector","vector","camera","warn","project","unprojectVector","unproject","pickingRay","CanvasRenderer","domElement","createElement","clear","setClearColor","setSize","Color","color","arguments","setRGB","set","constructor","r","g","b","value","copy","setHex","setStyle","hex","floor","setHSL","hue2rgb","q","t","s","l","euclideanModulo","clamp","style","parseAlpha","strAlpha","alpha","parseFloat","exec","components","min","parseInt","size","charAt","ColorKeywords","clone","copyGammaToLinear","gammaFactor","pow","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","slice","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","equals","fromArray","array","toArray","offset","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","y","z","w","_x","_y","_z","_w","onChangeCallback","quaternion","setFromEuler","euler","update","Euler","Error","c1","cos","c2","c3","s1","sin","s2","s3","order","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","v1","EPS","vFrom","vTo","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","v","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","applyQuaternion","slerp","qb","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","onChange","qa","qm","Vector2","setX","setY","setComponent","index","getComponent","addVectors","addScaledVector","sub","subVectors","subScalar","divide","divideScalar","scalar","invScalar","clampScalar","minVal","maxVal","ceil","round","roundToZero","negate","lengthManhattan","distanceTo","distanceToSquared","dx","dy","setLength","oldLength","lerpVectors","v2","fromAttribute","attribute","itemSize","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","e","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","matrix","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","me","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","PI","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","atan2","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","start","end","line","center","result","distanceSq","distance","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","Infinity","setFromPoints","points","makeEmpty","i","il","expandByPoint","setFromCenterAndSize","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","object","scope","updateMatrixWorld","traverse","node","geometry","Geometry","vertices","BufferGeometry","attributes","position","positions","getBoundingSphere","Sphere","radius","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","f","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","target","up","n","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","left","right","bottom","top","near","far","makePerspective","fov","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","split","uuid","Array","rnd","random","join","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","pa","pb","pc","pd","v3","initFromArray","getPoint","k","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","push","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","stop","getElapsedTime","getDelta","newTime","EventDispatcher","apply","addEventListener","hasEventListener","removeEventListener","dispatchEvent","type","listener","_listeners","listeners","indexOf","listenerArray","splice","event","descSort","Raycaster","params","Mesh","Line","LOD","Points","threshold","Sprite","defineProperties","PointCloud","intersectObject","raycaster","intersects","recursive","visible","raycast","children","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","sort","intersectObjects","objects","isArray","Object3D","Object3DIdCount","parent","DefaultUp","rotation","onRotationChange","onQuaternionChange","enumerable","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getChildByName","getObjectByName","getObjectById","getObjectByProperty","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","meta","extractFromCache","cache","values","key","data","metadata","isRootObject","geometries","materials","textures","images","version","generator","JSON","stringify","output","source","parse","Face3","materialIndex","vertexNormals","vertexColors","Face4","BufferAttribute","dynamic","updateRange","count","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","create","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faces","faceVertexUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","fromBufferGeometry","normals","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","setBit","enabled","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","dispose","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","addIndex","setIndex","getIndex","addAttribute","getAttribute","removeAttribute","drawcalls","offsets","addDrawCall","indexOffset","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","bb","isNaN","pA","pB","pC","normalizeNormals","computeOffsets","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","renderer","scene","generateMipmaps","activeCubeFace","setRenderTarget","zoom","updateProjectionMatrix","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","width","height","Light","AmbientLight","DirectionalLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColor","groundColor","PointLight","decay","SpotLight","exponent","shadowCameraFov","Cache","files","file","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","url","parts","pop","initMaterials","texturePath","createMaterial","imageLoader","nearest_pow2","log","LN2","create_texture","where","sourceFile","repeat","wrap","anisotropy","texture","fullPath","loader","Handlers","load","Texture","setCrossOrigin","image","canvas","context","getContext","drawImage","wrapS","wrapT","wrapMap","mirror","rgb2hex","rgb","ImageLoader","mtype","mpars","shading","toLowerCase","blending","transparent","opacity","depthTest","depthWrite","flipSided","side","doubleSided","wireframe","colorDiffuse","DbgColor","colorEmissive","emissive","colorSpecular","specular","specularCoef","shininess","transparency","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAO","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","material","DbgName","handlers","regex","test","XHRLoader","manager","DefaultLoadingManager","onLoad","onProgress","onError","cached","request","XMLHttpRequest","open","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setResponseType","setWithCredentials","src","JSONLoader","statusDomElement","_statusDomElement","text","json","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","bones","animation","animations","parseMorphing","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","typedArray","MaterialLoader","setTextures","getTexture","uniforms","vertexShader","fragmentShader","alphaTest","wireframeLinewidth","sizeAttenuation","map","alphaMap","bumpMap","normalMap","displacementMap","displacementScale","displacementBias","specularMap","envMap","combine","reflectivity","lightMap","lightMapIntensity","aoMap","aoMapIntensity","ObjectLoader","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","detail","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","TextGeometry","loadImage","path","parseConstant","mapping","getGeometry","getMaterial","Scene","mode","Group","levels","level","addLevel","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","loadTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","overdraw","_needsUpdate","setValues","newValue","currentValue","Number","wrapAround","boolean","wrapRGB","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshLambertMaterial","MeshPhongMaterial","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","lights","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","getDataURL","toDataURL","transformUv","CanvasTexture","CubeTexture","VideoTexture","video","readyState","HAVE_ENOUGH_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","ParticleSystem","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","bind","skeleton","sw","MorphAnimMesh","duration","mirroredLoop","time","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","morph","label","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","influences","mix","interpolateTargets","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bumpmap_pars_fragment","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","defaultnormal_vertex","displacementmap_vertex","displacementmap_pars_vertex","emissivemap_fragment","emissivemap_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_fragment","lights_phong_pars_fragment","lights_phong_pars_vertex","lights_phong_vertex","linear_to_gamma_fragment","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normalmap_pars_fragment","project_vertex","shadowmap_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","ShaderLib","basic","lambert","phong","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","WebGLRenderer","glClearColor","_premultipliedAlpha","_gl","clearColor","setDefaultGLState","state","init","viewport","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","_lightsNeedUpdate","reset","onContextLost","preventDefault","properties","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","extensions","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","enableAttribute","getAttributeBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","vertexAttribDivisorANGLE","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","numericalSort","painterSortStable","reversePainterSortStable","pushImmediateRenderItem","transparentImmediateObjects","transparentImmediateObjectsLastIndex","opaqueImmediateObjects","opaqueImmediateObjectsLastIndex","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","projectObject","sprites","ImmediateRenderObject","_frustum","_this","sortObjects","_projScreenMatrix","groupMaterial","renderObjects","renderList","renderBufferDirect","renderObjectsImmediate","setMaterial","setProgram","renderBufferImmediate","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","uniformLocations","getUniforms","location","setMaterialFaces","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","enable","CULL_FACE","disable","setFlipSided","_usedTextureUnits","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","capabilities","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","_lights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","uvScaleMap","_canvas","ambient","directional","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","light","uniformMatrix3fv","maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","_direction","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","_context","_width","_height","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","_currentFramebuffer","_currentWidth","_currentHeight","_infoRender","calls","info","memory","programs","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","setLineWidth","setMode","LINES","renderInstances","lineWidth","LINE_STRIP","POINTS","forceClear","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","complete","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","WebGLRenderTarget","restore","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","options","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttributes","property","deleteAttribute","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","suffixPos","substr","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","filterEmptyLine","string","programIdCount","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customDefines","createProgram","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","filter","useFog","fogExp","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","destroy","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","allocateShadows","shaderIDs","parameterNames","maxLightCount","envMapMode","parameterName","pl","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_objects","getDepthMaterial","depthMaterial","useMorphing","useSkinning","customDepthMaterial","_depthMaterialMorphSkin","_depthMaterialSkin","_depthMaterialMorph","_depthMaterial","_renderList","_state","_matrixPosition","depthShader","depthUniforms","BLEND","shadowFilter","pars","cameraHelper","CameraHelper","clearAlpha","newAttributes","enabledAttributes","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentTextureSlot","currentBoundTextures","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","factor","units","POLYGON_OFFSET_FILL","scissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","subtract","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","String","fontPaths","Path","ret","extractGlyphPoints","paths","outline","action","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","ha","generateShapes","curveSegments","font","shapes","toShapes","namespace","EPSILON","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","typeface_js","_typeface_js","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","onload","decodeAudioData","play","loop","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","window","AudioContext","webkitAudioContext","orientation","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","current","last","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vlen","args","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","closedPath","useSpacedPoints","item","spts","concat","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","shape","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","intersectsHoleEdge","ihIdx","chkHole","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","x1","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","keys","rot","quat","usedMorphTargets","morphTargetName","morphTargetsInfluences","root","parseRecurseHierarchy","deltaTimeMS","resetBlendWeights","Animation","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","sid","next","endTime","original","hasTarget","MorphAnimation","frames","lastFrame","currentFrame","frame","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","depth_half","CubeGeometry","centerUV","segment","ii","heightHalf","verticesRow","uvsRow","na","nb","tanTheta","v4","n1","n2","n3","n4","uv4","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","shapePoints","reverse","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","phi","np","base","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","radiusStep","thetaSegment","thetaEnd","vertexCount","textShapes","getPos","in_q","in_p","cu","su","quOverP","cs","tz","grid","tang","bitan","ip","jp","closed","taper","NoTaper","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","mat","PolyhedronGeometry","prepare","that","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","aj","bj","rows","ParametricGeometry","func","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","drawcall","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","active","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation","setImmediate","global","factory","VNode","nodeName","extend","props","hasOwnProperty","out","memoize","fn","mem","delve","arr","styleObjToCss","str","prop","val","jsToCss","NON_DIMENSION_PROPS","hashToClassName","isString","optionsHook","hook","deepHook","_component","len","attributeChildren","lastSimple","_p","falsey","SHARED_TEMP_ARRAY","simple","createLinkedState","component","eventPath","_component$setState","checked","isFunction","setState","enqueueRender","items","debounceRendering","rerender","currentItems","itemsOffline","_dirty","renderComponent","isFunctionalComponent","_ref","buildFunctionalComponent","vnode","getNodeProps","EMPTY","EMPTY_BASE","ensureNodeData","ATTR_KEY","getNodeType","nodeType","appendChildren","many","into","createDocumentFragment","appendChild","removeNode","parentNode","removeChild","getAccessor","attrs","className","cssText","setAccessor","__html","innerHTML","setComplexAccessor","setAttribute","_type","normalizeEventName","eventProxy","getNodeAttributes","getRawNodeAttributes","getNamedItem","getAttributesAsObject","isSameNodeType","_componentConstructor","defaultProps","collectNode","cleanNode","normalizeName","nodes","createNode","dom","originalAttributes","buildComponentFromVNode","TEXT_CONTENT","createTextNode","UNDEFINED_ELEMENT","childNodes","recollectNodeTree","innerDiffNode","diffAttributes","ref","keyed","keyedLen","childrenLen","__key","vchildren","vchild","insertBefore","removeOrphanedChildren","unmountOnly","unmountComponent","old","collectComponent","createComponent","Ctor","inst","nextBase","triggerComponentRender","setComponentProps","opts","_disableRendering","__ref","prevContext","prevProps","renderSync","syncComponentUpdates","skip","rendered","previousProps","previousState","prevState","previousContext","isUpdate","initialBase","childComponent","childContext","getChildContext","toUnmount","childProps","SYNC_RENDER","_parentComponent","NO_RENDER","DOM_RENDER","cbase","build","replaceChild","componentRef","_renderCallbacks","oldDom","isOwner","createComponentFromVNode","inner","Component","_linkedStates","existing","built","HAS_DOM","Symbol","boxFlex","boxFlexGroup","columnCount","fillOpacity","flex","flexGrow","flexPositive","flexShrink","flexNegative","fontWeight","lineClamp","lineHeight","orphans","strokeOpacity","widows","zIndex","replace","ch","MessageChannel","port1","onmessage","port2","postMessage","toUpperCase","linkState","cacheKey","forceUpdate","preact","hooks","_classCallCheck","instance","Constructor","TypeError","Config","SCALE","__WEBPACK_AMD_DEFINE_ARRAY__","multiMethod","deco","decorate","decorator","_len3","_key3","opt","desc","HOP","fns","_len","_key","caseSensitive","debounce","delay","timer","_len2","_key2","configurable","writable","isPlainObject","isObjectLike","objectToString","objectTag","isHostObject","proto","getPrototype","funcToString","objectCtorString","objectProto","PropTypes","SVG","prev","_preactCompatRendered","preactRender","unmountComponentAtNode","container","EmptyComponent","createFactory","applyClassName","currentComponent","createStringRefProxy","cloneElement","element","isValidElement","$$typeof","REACT_ELEMENT_TYPE","_refProxies","resolved","refs","objs","F","createClass","Component$1","BYPASS_HOOK","bindAll","newComponentHook","propTypes","getDefaultProps","displayName","ctx","__bound","AUTOBIND_BLACKLIST","callMethod","multihook","_len4","_key4","_len5","_key5","propsHook","componentWillReceiveProps","beforeRender","afterRender","DEV","err","babelHelpers","classCallCheck","descriptor","protoProps","staticProps","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","ELEMENTS","shouldComponentUpdate","componentWillRecieveProps","componentWillUpdate","componentDidUpdate","componentWillMount","componentDidMount","componentWillUnmount","componentDidUnmount","env","ARR","Children","forEach","only","DOM","findDOMNode","getPrototypeOf","_PreactComponent","PreactComponent","render$1","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","fun","noop","nextTick","title","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask","_Provider","_Provider2","_connect","_connect2","applyMiddleware","bindActionCreators","combineReducers","createStore","_createStore","_createStore2","_combineReducers","_combineReducers2","_bindActionCreators","_bindActionCreators2","_applyMiddleware","_applyMiddleware2","_compose","_compose2","_warning","clearImmediate","Timeout","clearFn","_id","_clearFn","immediateIds","nextImmediateId","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","addTodo","removeTodo","todo","_possibleConstructorReturn","_inherits","_applyDecoratedDescriptor","decorators","initializer","reduce","_class","_decko","TodoItem","_Component","onRemove","_props","_ref2","onClick","getOwnPropertyDescriptor","_three","_three2","Egg","hatchtime","incubate","Promise","fulfill","reject","bindActions","dispatch","_extends","_redux","assign","_react","subscribe","isRequired","getState","warning","message","funcs","arg","_ret","rest","reduceRight","composed","reducer","initialState","enhancer","ensureCanMutateNextListeners","nextListeners","currentListeners","currentState","isSubscribed","_isPlainObject2","isDispatching","currentReducer","replaceReducer","nextReducer","ActionTypes","INIT","observable","outerSubscribe","observer","observeState","unsubscribe","_symbolObservable2","_isPlainObject","_symbolObservable","_interopRequireWildcard","newObj","_dec","_class2","_util","_reducers","_reducers2","_actions","_todoItem","_todoItem2","App","addTodos","_this2","todos","onSubmit","onInput","placeholder","_objectDestructuringEmpty","_dec2","_loadmodel","_loadmodel2","_chicken","_chicken2","_egg","_grid","_box","_box2","_ground","_ground2","_label","_label2","_papergirl","_papergirl2","_randomcolor","_randomcolor2","_forest","_forest2","_traffic","_traffic2","_config","_config2","_logo","_logo2","_OBJMTLLoader","navigator","maxTouchPoints","touches","pageX","pageY","Game","_ref2$zoom","_ref2$rotateX","_ref2$rotationY","rotationY","events","_Component2","mouse","mouse_status","targetRadian","oncontextmenu","stopPropagation","mousedown","calculateTarget","mousemove","mouseup","innerWidth","innerHeight","radian","_this3","setup","_base$getBoundingClie","getBoundingClientRect","devicePixelRatio","clock","setupHUD","letCameraFollowTarget","onWindowResize","renderObject","renderLighting","traffic","animate","logo","cameraOrtho","sceneOrtho","spriteC","tw","th","logo_y","toRad","degree","_this4","chickens","chicken","sections","sectionURL","watch","onSync","jsonString","sectionIndex","sectionData","X0","Z0","LABEL_X","group_x","group_h","item_h","items_h","trend","item_x","percent","luminosity","speed","traffic_light","reference","then","ambientLight","xLight","yLight","zLight","class","Box","_createClass","Chicken","foot1","foot2","loadModel","model","Forest","dens","_W","_H","_X0","_Y0","_SPAN","maps","OBJMTLLoader","coin","tree","positionX","positionY","Grid","Ground","_Z0","HGAP","_buildGrass","_buildRoad","_buildRailRoad","_buildRail","_buildSoil","_buildSoil2","_obj3d","_SECTION_W","lane","Label","backGroundColor","backgroundMargin","fonts","textAlign","textWidth","measureText","textBaseline","fillText","LoadModels","Logo","Traffic","MIN_EDGE","MAX_EDGE","vehicles","obj3d","train_x0","MTLLoader","setBaseUrl","baseUrl","setMaterialOptions","materialOptions","delimiter_pattern","materialsInfo","trim","ss","materialCreator","MaterialCreator","setManager","setMaterials","materialsArray","nameLookup","convert","converted","mn","covmat","save","lprop","normalizeRGB","ignoreZeroRGBs","invertTransparency","preload","materialName","getAsArray","createMaterial_","ensurePowerOfTwo_","nextHighestPowerOfTwo_","_MTLLoader","mtlurl","mtlLoader","materialsCreator","mtllibCallback","face3","meshN","meshName","add_face","normals_inds","face_offset","add_uvs","handle_face_line","vertex_pattern","normal_pattern","uv_pattern","face_pattern1","face_pattern2","face_pattern3","face_pattern4","mtlfile","_objectWithoutProperties","ACTIONS","ADD_TODO","REMOVE_TODO","_ref3","_ref4","INITIAL","REACT_STATICS","childContextTypes","contextTypes","mixins","KNOWN_STATICS","caller","arity","targetComponent","sourceComponent","getOwnPropertyNames","invariant","condition","argIndex","framesToPop","nativeGetPrototype","define","requireModule","require","requirejs","registry","seen","deps","resolve","parentBase","part","_eak_seen","mod","reified","__dependency1__","__exports__","all","promises","resolver","resolveAll","results","remaining","promise","useNextTick","flush","useMutationObserver","iterations","BrowserMutationObserver","observe","characterData","useSetTimeout","local","tuple","asap","scheduleFlush","browserGlobal","MutationObserver","WebKitMutationObserver","configure","config","instrument","__dependency2__","polyfill","es6PromiseSupport","RSVPPromise","__dependency3__","__dependency4__","__dependency5__","__dependency6__","__dependency7__","_subscribers","invokeResolver","resolvePromise","rejectPromise","reason","invokeCallback","settled","succeeded","failed","hasCallback","handleThenable","FULFILLED","REJECTED","onFulfillment","onRejection","subscribers","publish","_detail","objectOrFunction","PENDING","SEALED","async","publishFulfillment","publishRejection","race","staticResolve","staticReject","thenPromise","callbacks","catch","getTime","_localforage","_localforage2","papergirl","globalObject","executeCallback","errorCallback","GLOBAL_NAMESPACE","_S_","_NS_","_window","Papergirl","cacheFirst","networkFirst","cacheOnly","networkOnly","storage","createInstance","ready","_request","xhr","ActiveXObject","etag","setRequestHeader","_hook","delloc","status","responseText","getResponseHeader","setData","removeData","statusText","onerror","functionName","strategy","getData","getItem","_getValueByIndex","setItem","removeItem","iterate","getETAG","getCacheFirst","_me","onCache","_onCache","onSend","_onSend","_onLoad","onInsert","_onInsert","_onUpdate","onUpsert","_onUpsert","onMatch","_onMatch","_onSync","_onError","beforeSend","insert","upsert","not_mod","_onNotModified","sync","hostname","_local_uri","uri","localForage","callWhenReady","localForageInstance","libraryMethod","_args","isLibraryDriver","driverName","driver","DriverType","CustomDrivers","INDEXEDDB","LOCALSTORAGE","WEBSQL","DefaultDriverOrder","LibraryMethods","DefaultConfig","description","storeName","driverSupport","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","openDatabase","userAgent","IDBKeyRange","localStorage","LocalForage","_defaultConfig","_driverSet","_initDriver","_ready","_dbInfo","_wrapLibraryMethodsWithReady","setDriver","defineDriver","driverObject","_driver","complianceError","namingError","customDriverMethods","customDriverMethod","supportPromise","_support","supportResult","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","setDriverToConfig","initDriver","supportedDrivers","driverPromiseLoop","currentDriverIndex","_extend","_initStorage","_getSupportedDrivers","oldDriverSetDone","supports","libraryMethodsAndProperties","asyncStorage","_createBlob","Blob","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","_binStringToArrayBuffer","bin","buf","ArrayBuffer","charCodeAt","_blobAjax","onreadystatechange","_checkBlobSupportWithoutCaching","idb","blob","txn","transaction","DETECT_BLOB_SUPPORT_STORE","objectStore","put","oncomplete","blobTxn","getBlobReq","onsuccess","storedBlob","URL","createObjectURL","res","revokeObjectURL","onabort","_checkBlobSupport","supportsBlobs","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","dbContext","dbContexts","dbReady","_deferReadiness","dbInfo","deferredOperation","deferredOperations","_advanceReadiness","ignoreErrors","db","forages","initPromises","forage","_getOriginalConnection","_isUpgradeNeeded","_getUpgradedConnection","_getConnection","upgradeNeeded","dbArgs","openreq","onupgradeneeded","createObjectStore","oldVersion","ex","newVersion","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","req","iterator","openCursor","iterationNumber","cursor","blobSupport","advanced","advance","localStorageWrapper","keyPrefix","lib","serializer","deserialize","keyPrefixLength","originalValue","serialize","localforageSerializer","valueString","marker","SERIALIZED_MARKER","TYPE_ARRAYBUFFER","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_UINT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","bufferToString","fileReader","BLOB_TYPE_PREFIX","TYPE_BLOB","readAsArrayBuffer","SERIALIZED_MARKER_LENGTH","blobType","serializedString","TYPE_SERIALIZED_MARKER_LENGTH","BLOB_TYPE_PREFIX_REGEX","matcher","stringToBuffer","encoded1","encoded2","encoded3","encoded4","bufferLength","bytes","BASE_CHARS","base64String","webSQLStorage","dbInfoPromise","executeSql","sqlError","QUOTA_ERR","overwriteProperty","el","PROPERTY_ERRORS","contentPropertyDef","attemptOverwriteProperty","hasPropertyErrors","errors","setStateUpdateProxy","objectWithoutProperties","SVG_ATTRS","NS","xlink","NS_ATTR","PROP_TO_ATTR_MAP","updateMode","div","oldCreate","createElementNS","createAttributeShim","attr","method","ns","hasRendered","xmlns","getIteratorFn","maybeIterable","iteratorFn","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","createChainableTypeChecker","validate","checkType","propName","componentName","propFullName","ANONYMOUS","locationName","ReactPropTypeLocationNames","chainedCheckType","createPrimitiveTypeChecker","expectedType","propValue","propType","getPropType","preciseType","getPreciseType","createAnyTypeChecker","emptyFunction","thatReturns","createArrayOfTypeChecker","typeChecker","createElementTypeChecker","ReactElement","createInstanceTypeChecker","expectedClass","expectedClassName","actualClassName","getClassName","createEnumTypeChecker","expectedValues","valuesString","createObjectOfTypeChecker","createUnionTypeChecker","arrayOfTypeCheckers","checker","createNodeChecker","isNode","createShapeTypeChecker","shapeTypes","every","entries","done","entry","RegExp","what","ReactPropTypes","bool","number","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","pickHue","hueRange","getHueRange","randomWithin","pickSaturation","saturationRange","getSaturationRange","sMin","sMax","pickBrightness","H","S","bMin","getMinimumBrightness","bMax","setFormat","hsv","HSVtoHSL","hslColor","HSVtoRGB","rgbColor","HSVtoHex","lowerBounds","getColorInfo","colorInput","colorDictionary","colorName","seed","componentToHex","defineColor","brightnessRange","loadColorBounds","h_i","stringToInteger","MAX_SAFE_INTEGER","randomColor","B","totalColors","_storeShape","_storeShape2","getDisplayName","WrappedComponent","tryCatch","errorObject","mapStateToProps","mapDispatchToProps","mergeProps","shouldSubscribe","Boolean","mapState","defaultMapStateToProps","mapDispatch","_wrapActionCreators2","defaultMapDispatchToProps","finalMergeProps","defaultMergeProps","_options$pure","pure","_options$withRef","withRef","checkMergedEquals","nextVersion","computeMergedProps","stateProps","dispatchProps","parentProps","mergedProps","connectDisplayName","Connect","_invariant2","storeState","clearCache","haveOwnPropsChanged","hasStoreStateChanged","computeStateProps","finalMapStateToProps","configureFinalMapState","doStatePropsDependOnOwnProps","mappedState","isFactory","computeDispatchProps","finalMapDispatchToProps","configureFinalMapDispatch","doDispatchPropsDependOnOwnProps","mappedDispatch","updateStatePropsIfNeeded","nextStateProps","_shallowEqual2","updateDispatchPropsIfNeeded","nextDispatchProps","updateMergedPropsIfNeeded","nextMergedProps","trySubscribe","handleChange","tryUnsubscribe","nextProps","haveStatePropsBeenPrecalculated","statePropsPrecalculationError","renderedElement","prevStoreState","haveStatePropsChanged","getWrappedInstance","wrappedInstance","shouldUpdateStateProps","shouldUpdateDispatchProps","haveDispatchPropsChanged","haveMergedPropsChanged","_hoistNonReactStatics2","_shallowEqual","_wrapActionCreators","_hoistNonReactStatics","_invariant","shallowEqual","objA","objB","keysA","keysB","hasOwn","wrapActionCreators","actionCreators","middlewares","_dispatch","chain","middlewareAPI","middleware","bindActionCreator","actionCreator","boundActionCreators","getUndefinedStateErrorMessage","actionType","actionName","assertReducerSanity","reducers","reducerKeys","finalReducers","sanityError","finalReducerKeys","hasChanged","nextState","previousStateForKey","nextStateForKey","errorMessage"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _preact = __webpack_require__(2);\n\t\n\tvar _reactRedux = __webpack_require__(8);\n\t\n\tvar _store = __webpack_require__(34);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _app = __webpack_require__(21);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\t__webpack_require__(35);\n\t\n\tvar _game = __webpack_require__(22);\n\t\n\tvar _game2 = _interopRequireDefault(_game);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t(0, _preact.render)((0, _preact.h)(\n\t  'div',\n\t  { id: 'outer' },\n\t  (0, _preact.h)(\n\t    _reactRedux.Provider,\n\t    { store: _store2.default },\n\t    (0, _preact.h)(_game2.default, null)\n\t  )\n\t), document.body);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var self = self || {};// File:src/Three.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tvar THREE = { REVISION: '72' };\r\n\t\r\n\t//\r\n\t\r\n\tif ( true ) {\r\n\t\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\t\r\n\t\t\tmodule.exports = THREE;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t// polyfills\r\n\t\r\n\tif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\t\r\n\t\t// Missing in Android stock browser.\r\n\t\r\n\t\t( function () {\r\n\t\r\n\t\t\tvar lastTime = 0;\r\n\t\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\t\r\n\t\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\t\r\n\t\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\t\tvar id = self.setTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tcallback( currTime + timeToCall );\r\n\t\r\n\t\t\t\t\t}, timeToCall );\r\n\t\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\t\treturn id;\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\t\r\n\t\t\t\t\tself.clearTimeout( id );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}() );\r\n\t\r\n\t}\r\n\t\r\n\tif ( Math.sign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\t\r\n\t\tMath.sign = function ( x ) {\r\n\t\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\t\r\n\t\t};\r\n\t\r\n\t}\r\n\t\r\n\tif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\t\r\n\t\t// Missing in IE9-11.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\t\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\t\r\n\t\t\tget: function () {\r\n\t\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\t\r\n\tTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\t\r\n\t// GL STATE CONSTANTS\r\n\t\r\n\tTHREE.CullFaceNone = 0;\r\n\tTHREE.CullFaceBack = 1;\r\n\tTHREE.CullFaceFront = 2;\r\n\tTHREE.CullFaceFrontBack = 3;\r\n\t\r\n\tTHREE.FrontFaceDirectionCW = 0;\r\n\tTHREE.FrontFaceDirectionCCW = 1;\r\n\t\r\n\t// SHADOWING TYPES\r\n\t\r\n\tTHREE.BasicShadowMap = 0;\r\n\tTHREE.PCFShadowMap = 1;\r\n\tTHREE.PCFSoftShadowMap = 2;\r\n\t\r\n\t// MATERIAL CONSTANTS\r\n\t\r\n\t// side\r\n\t\r\n\tTHREE.FrontSide = 0;\r\n\tTHREE.BackSide = 1;\r\n\tTHREE.DoubleSide = 2;\r\n\t\r\n\t// shading\r\n\t\r\n\tTHREE.FlatShading = 1;\r\n\tTHREE.SmoothShading = 2;\r\n\t\r\n\t// colors\r\n\t\r\n\tTHREE.NoColors = 0;\r\n\tTHREE.FaceColors = 1;\r\n\tTHREE.VertexColors = 2;\r\n\t\r\n\t// blending modes\r\n\t\r\n\tTHREE.NoBlending = 0;\r\n\tTHREE.NormalBlending = 1;\r\n\tTHREE.AdditiveBlending = 2;\r\n\tTHREE.SubtractiveBlending = 3;\r\n\tTHREE.MultiplyBlending = 4;\r\n\tTHREE.CustomBlending = 5;\r\n\t\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\t\r\n\tTHREE.AddEquation = 100;\r\n\tTHREE.SubtractEquation = 101;\r\n\tTHREE.ReverseSubtractEquation = 102;\r\n\tTHREE.MinEquation = 103;\r\n\tTHREE.MaxEquation = 104;\r\n\t\r\n\t// custom blending destination factors\r\n\t\r\n\tTHREE.ZeroFactor = 200;\r\n\tTHREE.OneFactor = 201;\r\n\tTHREE.SrcColorFactor = 202;\r\n\tTHREE.OneMinusSrcColorFactor = 203;\r\n\tTHREE.SrcAlphaFactor = 204;\r\n\tTHREE.OneMinusSrcAlphaFactor = 205;\r\n\tTHREE.DstAlphaFactor = 206;\r\n\tTHREE.OneMinusDstAlphaFactor = 207;\r\n\t\r\n\t// custom blending source factors\r\n\t\r\n\t//THREE.ZeroFactor = 200;\r\n\t//THREE.OneFactor = 201;\r\n\t//THREE.SrcAlphaFactor = 204;\r\n\t//THREE.OneMinusSrcAlphaFactor = 205;\r\n\t//THREE.DstAlphaFactor = 206;\r\n\t//THREE.OneMinusDstAlphaFactor = 207;\r\n\tTHREE.DstColorFactor = 208;\r\n\tTHREE.OneMinusDstColorFactor = 209;\r\n\tTHREE.SrcAlphaSaturateFactor = 210;\r\n\t\r\n\t// depth modes\r\n\t\r\n\tTHREE.NeverDepth = 0;\r\n\tTHREE.AlwaysDepth = 1;\r\n\tTHREE.LessDepth = 2;\r\n\tTHREE.LessEqualDepth = 3;\r\n\tTHREE.EqualDepth = 4;\r\n\tTHREE.GreaterEqualDepth = 5;\r\n\tTHREE.GreaterDepth = 6;\r\n\tTHREE.NotEqualDepth = 7;\r\n\t\r\n\t\r\n\t// TEXTURE CONSTANTS\r\n\t\r\n\tTHREE.MultiplyOperation = 0;\r\n\tTHREE.MixOperation = 1;\r\n\tTHREE.AddOperation = 2;\r\n\t\r\n\t// Mapping modes\r\n\t\r\n\tTHREE.UVMapping = 300;\r\n\t\r\n\tTHREE.CubeReflectionMapping = 301;\r\n\tTHREE.CubeRefractionMapping = 302;\r\n\t\r\n\tTHREE.EquirectangularReflectionMapping = 303;\r\n\tTHREE.EquirectangularRefractionMapping = 304;\r\n\t\r\n\tTHREE.SphericalReflectionMapping = 305;\r\n\t\r\n\t// Wrapping modes\r\n\t\r\n\tTHREE.RepeatWrapping = 1000;\r\n\tTHREE.ClampToEdgeWrapping = 1001;\r\n\tTHREE.MirroredRepeatWrapping = 1002;\r\n\t\r\n\t// Filters\r\n\t\r\n\tTHREE.NearestFilter = 1003;\r\n\tTHREE.NearestMipMapNearestFilter = 1004;\r\n\tTHREE.NearestMipMapLinearFilter = 1005;\r\n\tTHREE.LinearFilter = 1006;\r\n\tTHREE.LinearMipMapNearestFilter = 1007;\r\n\tTHREE.LinearMipMapLinearFilter = 1008;\r\n\t\r\n\t// Data types\r\n\t\r\n\tTHREE.UnsignedByteType = 1009;\r\n\tTHREE.ByteType = 1010;\r\n\tTHREE.ShortType = 1011;\r\n\tTHREE.UnsignedShortType = 1012;\r\n\tTHREE.IntType = 1013;\r\n\tTHREE.UnsignedIntType = 1014;\r\n\tTHREE.FloatType = 1015;\r\n\tTHREE.HalfFloatType = 1025;\r\n\t\r\n\t// Pixel types\r\n\t\r\n\t//THREE.UnsignedByteType = 1009;\r\n\tTHREE.UnsignedShort4444Type = 1016;\r\n\tTHREE.UnsignedShort5551Type = 1017;\r\n\tTHREE.UnsignedShort565Type = 1018;\r\n\t\r\n\t// Pixel formats\r\n\t\r\n\tTHREE.AlphaFormat = 1019;\r\n\tTHREE.RGBFormat = 1020;\r\n\tTHREE.RGBAFormat = 1021;\r\n\tTHREE.LuminanceFormat = 1022;\r\n\tTHREE.LuminanceAlphaFormat = 1023;\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\t\r\n\t// DDS / ST3C Compressed texture formats\r\n\t\r\n\tTHREE.RGB_S3TC_DXT1_Format = 2001;\r\n\tTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\n\tTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\n\tTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\t\r\n\t\r\n\t// PVRTC compressed texture formats\r\n\t\r\n\tTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\n\tTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\n\tTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\n\tTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\t\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.Projector = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\t\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.pickingRay = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasRenderer = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\t\r\n\t\tthis.domElement = document.createElement( 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Color.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Color = function ( color ) {\r\n\t\r\n\t\tif ( arguments.length === 3 ) {\r\n\t\r\n\t\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.set( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Color.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Color,\r\n\t\r\n\t\tr: 1, g: 1, b: 1,\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tif ( value instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\tthis.copy( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\t\r\n\t\t\t\tthis.setHex( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\t\r\n\t\t\t\tthis.setStyle( value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHex: function ( hex ) {\r\n\t\r\n\t\t\thex = Math.floor( hex );\r\n\t\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\t\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHSL: function () {\r\n\t\r\n\t\t\tfunction hue2rgb ( p, q, t ) {\r\n\t\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( h, s, l ) {\r\n\t\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\t\r\n\t\t\t\tif ( s === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\t\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetStyle: function ( style ) {\r\n\t\r\n\t\t\tvar parseAlpha = function ( strAlpha ) {\r\n\t\r\n\t\t\t\tvar alpha = parseFloat( strAlpha );\r\n\t\r\n\t\t\t\tif ( alpha < 1 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn alpha;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar m;\r\n\t\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// rgb / hsl\r\n\t\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\t\r\n\t\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\t\tcase 'rgb':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'rgba':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsl':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsla':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// hex color\r\n\t\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\t\r\n\t\t\t\tif ( size === 3 ) {\r\n\t\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\t\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\t\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\t\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\t\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( color ) {\r\n\t\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertGammaToLinear: function () {\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tthis.r = r * r;\r\n\t\t\tthis.g = g * g;\r\n\t\t\tthis.b = b * b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertLinearToGamma: function () {\r\n\t\r\n\t\t\tthis.r = Math.sqrt( this.r );\r\n\t\t\tthis.g = Math.sqrt( this.g );\r\n\t\t\tthis.b = Math.sqrt( this.b );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHex: function () {\r\n\t\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHexString: function () {\r\n\t\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHSL: function ( optionalTarget ) {\r\n\t\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\r\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\t\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\t\r\n\t\t\tif ( min === max ) {\r\n\t\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar delta = max - min;\r\n\t\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\t\r\n\t\t\t\tswitch ( max ) {\r\n\t\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thue /= 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\thsl.h = hue;\r\n\t\t\thsl.s = saturation;\r\n\t\t\thsl.l = lightness;\r\n\t\r\n\t\t\treturn hsl;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetStyle: function () {\r\n\t\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\t\r\n\t\t},\r\n\t\r\n\t\toffsetHSL: function ( h, s, l ) {\r\n\t\r\n\t\t\tvar hsl = this.getHSL();\r\n\t\r\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\t\r\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( color ) {\r\n\t\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddColors: function ( color1, color2 ) {\r\n\t\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( color ) {\r\n\t\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( color, alpha ) {\r\n\t\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( c ) {\r\n\t\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.r = array[ 0 ];\r\n\t\t\tthis.g = array[ 1 ];\r\n\t\t\tthis.b = array[ 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\t\r\n\t// File:src/math/Quaternion.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Quaternion = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Quaternion,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget w () {\r\n\t\r\n\t\t\treturn this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset w ( value ) {\r\n\t\r\n\t\t\tthis._w = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( quaternion ) {\r\n\t\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\t\r\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\t\r\n\t\t\tvar order = euler.order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\t\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\t\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\t\r\n\t\t\tif ( trace > 0 ) {\r\n\t\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\t\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\t\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\t\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\t\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromUnitVectors: function () {\r\n\t\r\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\t\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\r\n\t\t\tvar v1, r;\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\r\n\t\t\treturn function ( vFrom, vTo ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\t\r\n\t\t\t\tif ( r < EPS ) {\r\n\t\r\n\t\t\t\t\tr = 0;\r\n\t\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\t\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\t\r\n\t\t\t\tthis.normalize();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tinverse: function () {\r\n\t\r\n\t\t\tthis.conjugate().normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconjugate: function () {\r\n\t\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tvar l = this.length();\r\n\t\r\n\t\t\tif ( l === 0 ) {\r\n\t\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tl = 1 / l;\r\n\t\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( q, p ) {\r\n\t\r\n\t\t\tif ( p !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\t\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\t\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\treturn vector.applyQuaternion( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerp: function ( qb, t ) {\r\n\t\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\t\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\t\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\t\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\t\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.copy( qb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\t\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\t\r\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\t\r\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\t\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( quaternion ) {\r\n\t\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\t\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.Vector2 = function ( x, y ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector2,\r\n\t\r\n\t\tset: function ( x, y ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v ) {\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x *= s;\r\n\t\t\tthis.y *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\t\tmax = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function() {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author *kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector3 = function ( x, y, z ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector3,\r\n\t\r\n\t\tset: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyEuler: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyEuler( euler ) {\r\n\t\r\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyAxisAngle: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix3: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyProjection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 projection matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\t\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar qx = q.x;\r\n\t\t\tvar qy = q.y;\r\n\t\t\tvar qz = q.z;\r\n\t\t\tvar qw = q.w;\r\n\t\r\n\t\t\t// calculate quat * vector\r\n\t\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\r\n\t\t\t// calculate result * inverse quat\r\n\t\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function project( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tunproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function unproject( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttransformDirection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\t\r\n\t\t\tthis.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\t\tmax = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcross: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tthis.x = y * v.z - z * v.y;\r\n\t\t\tthis.y = z * v.x - x * v.z;\r\n\t\t\tthis.z = x * v.y - y * v.x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVectors: function ( a, b ) {\r\n\t\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectOnVector: function () {\r\n\t\r\n\t\t\tvar v1, dot;\r\n\t\r\n\t\t\treturn function projectOnVector( vector ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( vector ).normalize();\r\n\t\r\n\t\t\t\tdot = this.dot( v1 );\r\n\t\r\n\t\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tprojectOnPlane: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\t\r\n\t\t\t\treturn this.sub( v1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\treflect: function () {\r\n\t\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function reflect( normal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tangleTo: function ( v ) {\r\n\t\r\n\t\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\t\r\n\t\t\t// clamp, to handle numerical problems\r\n\t\r\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x;\r\n\t\t\tvar dy = this.y - v.y;\r\n\t\t\tvar dz = this.z - v.z;\r\n\t\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromQuaternion: function ( q, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\t\r\n\t\t\tthis.x = m.elements[ 12 ];\r\n\t\t\tthis.y = m.elements[ 13 ];\r\n\t\t\tthis.z = m.elements[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\t\r\n\t\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\t\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\r\n\t\t\tvar offset = index * 4;\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tthis.x = me[ offset ];\r\n\t\t\tthis.y = me[ offset + 1 ];\r\n\t\t\tthis.z = me[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector4.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector4 = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector4,\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( w ) {\r\n\t\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\t\tvar w = this.w;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\t\t\tthis.w *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t\tthis.w = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\r\n\t\t\t// q is assumed to be normalized\r\n\t\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\t\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\t\r\n\t\t\tif ( s < 0.0001 ) {\r\n\t\r\n\t\t\t\t this.x = 1;\r\n\t\t\t\t this.y = 0;\r\n\t\t\t\t this.z = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t this.x = q.x / s;\r\n\t\t\t\t this.y = q.y / s;\r\n\t\t\t\t this.z = q.z / s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\r\n\t\t\t\tte = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\t\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\t\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\t\r\n\t\t\t\tangle = Math.PI;\r\n\t\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\t\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\t\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\t\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\t\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\t\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\t\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\t\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\t\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w > v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < min.w ) {\r\n\t\r\n\t\t\t\tthis.w = min.w;\r\n\t\r\n\t\t\t} else if ( this.w > max.w ) {\r\n\t\r\n\t\t\t\tthis.w = max.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\t\tmax = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\t\tthis.w = attribute.array[ index + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Euler.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Euler = function ( x, y, z, order ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\t\r\n\tTHREE.Euler.DefaultOrder = 'XYZ';\r\n\t\r\n\tTHREE.Euler.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Euler,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget order () {\r\n\t\r\n\t\t\treturn this._order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset order ( value ) {\r\n\t\r\n\t\t\tthis._order = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, order ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( euler ) {\r\n\t\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\t\r\n\t\t\tvar clamp = THREE.Math.clamp;\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\torder = order || this._order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._order = order;\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromQuaternion: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function ( q, order, update ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\t\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treorder: function () {\r\n\t\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\r\n\t\t\tvar q = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( newOrder ) {\r\n\t\r\n\t\t\t\tq.setFromEuler( this );\r\n\t\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tequals: function ( euler ) {\r\n\t\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\t\r\n\t\t\tif ( optionalResult ) {\r\n\t\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Line3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Line3 = function ( start, end ) {\r\n\t\r\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Line3,\r\n\t\r\n\t\tset: function ( start, end ) {\r\n\t\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( line ) {\r\n\t\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdelta: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.end, this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSq: function () {\r\n\t\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistance: function () {\r\n\t\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclosestPointToPointParameter: function () {\r\n\t\r\n\t\t\tvar startP = new THREE.Vector3();\r\n\t\t\tvar startEnd = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point, clampToLine ) {\r\n\t\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\t\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\t\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\t\r\n\t\t\t\tif ( clampToLine ) {\r\n\t\r\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( line ) {\r\n\t\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box2.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Box2 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box2,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Box3 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box3,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromObject: function () {\r\n\t\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\t\tobject.traverse( function ( node ) {\r\n\t\r\n\t\t\t\t\tvar geometry = node.geometry;\r\n\t\r\n\t\t\t\t\tif ( geometry !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetBoundingSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\t\r\n\t\t\t\tresult.center = this.center();\r\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar points = [\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3()\r\n\t\t\t];\r\n\t\r\n\t\t\treturn function ( matrix ) {\r\n\t\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\t\t\tthis.setFromPoints( points );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix3.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Matrix3 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix3,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\t\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\t\r\n\t\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\t\r\n\t\t\t// no inverse\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1.0 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar tmp, m = this.elements;\r\n\t\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMatrix: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\r\n\t\t\tthis.getInverse( m ).transpose();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\t\r\n\t\t\tvar m = this.elements;\r\n\t\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Matrix4 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix4,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tthis.elements.set( m.elements );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractPosition: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyPosition: function ( m ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0,       0,       0,       1\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractRotation: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( m ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\t\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\t\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\t\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\t\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\t\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\t\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\t\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\t\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\t\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\t\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\t\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\t\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\t\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\t\r\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\t\tte[ 4 ] = xy - wz;\r\n\t\t\tte[ 8 ] = xz + wy;\r\n\t\r\n\t\t\tte[ 1 ] = xy + wz;\r\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\t\tte[ 9 ] = yz - wx;\r\n\t\r\n\t\t\tte[ 2 ] = xz - wy;\r\n\t\t\tte[ 6 ] = yz + wx;\r\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar x, y, z;\r\n\t\r\n\t\t\treturn function ( eye, target, up ) {\r\n\t\r\n\t\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tz.subVectors( eye, target ).normalize();\r\n\t\r\n\t\t\t\tif ( z.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.z = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\tif ( x.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.x += 0.0001;\r\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ty.crossVectors( z, x );\r\n\t\r\n\t\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiply: function ( m, n ) {\r\n\t\r\n\t\t\tif ( n !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\t\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\t\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyToArray: function ( a, b, r ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tthis.multiplyMatrices( a, b );\r\n\t\r\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\treturn vector.applyProjection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateAxis: function ( v ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\r\n\t\t\tv.transformDirection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVector: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\t\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\t\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\t\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\t\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPosition: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetPosition: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( m, throwOnInvertible ) {\r\n\t\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\t\r\n\t\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( v ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateY: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateZ: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateByAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tscale: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\t\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\t\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationX: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0,  0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s,  c, 0,\r\n\t\t\t\t0, 0,  0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationY: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts,  c, 0, 0,\r\n\t\t\t\t0,  0, 1, 0,\r\n\t\t\t\t0,  0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\t return this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\t\tthis.scale( scale );\r\n\t\t\tthis.setPosition( position );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdecompose: function () {\r\n\t\r\n\t\t\tvar vector, matrix;\r\n\t\r\n\t\t\treturn function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\t\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) {\r\n\t\r\n\t\t\t\t\tsx = - sx;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\t\r\n\t\t\t\t// scale the rotation part\r\n\t\r\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\t\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\t\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\t\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\t\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\t\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\t\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\t\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\t\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\t\r\n\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\tvar ymin = - ymax;\r\n\t\t\tvar xmin = ymin * aspect;\r\n\t\t\tvar xmax = ymax * aspect;\r\n\t\r\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = right - left;\r\n\t\t\tvar h = top - bottom;\r\n\t\t\tvar p = far - near;\r\n\t\r\n\t\t\tvar x = ( right + left ) / w;\r\n\t\t\tvar y = ( top + bottom ) / h;\r\n\t\t\tvar z = ( far + near ) / p;\r\n\t\r\n\t\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( matrix ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\t\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Ray.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Ray = function ( origin, direction ) {\r\n\t\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Ray.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Ray,\r\n\t\r\n\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( ray ) {\r\n\t\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trecast: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( t ) {\r\n\t\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.subVectors( point, this.origin );\r\n\t\t\tvar directionDistance = result.dot( this.direction );\r\n\t\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\treturn result.copy( this.origin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSqToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\t\r\n\t\t\t\t// point behind the ray\r\n\t\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdistanceSqToSegment: function () {\r\n\t\r\n\t\t\tvar segCenter = new THREE.Vector3();\r\n\t\t\tvar segDir = new THREE.Vector3();\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\t\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\t\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\t\r\n\t\t\t\tif ( det > 0 ) {\r\n\t\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\t\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\t\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 1\r\n\t\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 5\r\n\t\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 4\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 3\r\n\t\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 2\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\t\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn sqrDist;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectSphere: function () {\r\n\t\r\n\t\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( sphere, optionalTarget ) {\r\n\t\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\t\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\t\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\t\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\t\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\t\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\t\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\t\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, optionalTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\t\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\t\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\t\r\n\t\t\t\t\treturn 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\t\r\n\t\t\t// Return if the ray never intersects the plane\r\n\t\r\n\t\t\treturn t >= 0 ? t :  null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectPlane: function ( plane, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\t\r\n\t\t\tif ( t === null ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.at( t, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function () {\r\n\t\r\n\t\t\tvar v = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectBox: function ( box, optionalTarget ) {\r\n\t\r\n\t\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\t\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\r\n\t\t\tvar origin = this.origin;\r\n\t\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\t\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\t\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\t\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\t\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\t\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\t\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\t\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\t\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\t\r\n\t\t\t//return point closest to the ray (positive side)\r\n\t\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\t\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectTriangle: function () {\r\n\t\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\t\tvar edge1 = new THREE.Vector3();\r\n\t\t\tvar edge2 = new THREE.Vector3();\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\t\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\t\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\t\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\t\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\t\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\t\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\t\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\t\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\t\r\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.sub( this.origin );\r\n\t\t\tthis.direction.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( ray ) {\r\n\t\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Sphere.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Sphere = function ( center, radius ) {\r\n\t\r\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sphere.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Sphere,\r\n\t\r\n\t\tset: function ( center, radius ) {\r\n\t\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\t\treturn function ( points, optionalCenter ) {\r\n\t\r\n\t\t\t\tvar center = this.center;\r\n\t\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( sphere ) {\r\n\t\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\treturn ( this.radius <= 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.copy( point );\r\n\t\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\t\r\n\t\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetBoundingBox: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar box = optionalTarget || new THREE.Box3();\r\n\t\r\n\t\t\tbox.set( this.center, this.center );\r\n\t\t\tbox.expandByScalar( this.radius );\r\n\t\r\n\t\t\treturn box;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.center.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Frustum.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\tthis.planes = [\r\n\t\r\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\t\r\n\t\t];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Frustum.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Frustum,\r\n\t\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( frustum ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\t\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsObject: function () {\r\n\t\r\n\t\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\t\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function () {\r\n\t\r\n\t\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\t\tp2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\t\r\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\t\r\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\r\n\t\t\t\t\t// if both outside plane, no intersection\r\n\t\r\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Plane.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Plane = function ( normal, constant ) {\r\n\t\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Plane.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Plane,\r\n\t\r\n\t\tset: function ( normal, constant ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCoplanarPoints: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\t\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( plane ) {\r\n\t\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\t\r\n\t\t},\r\n\t\r\n\t\torthoPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionLine: function ( line ) {\r\n\t\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\t\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectLine: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( line, optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\t\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\t\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn result.copy( line.start );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\t\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\t\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcoplanarPoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\t\tvar m1 = new THREE.Matrix3();\r\n\t\r\n\t\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\t\r\n\t\t\t\t// compute new normal based on theory here:\r\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\r\n\t\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( plane ) {\r\n\t\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Math.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Math = {\r\n\t\r\n\t\tgenerateUUID: function () {\r\n\t\r\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\r\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\t\tvar uuid = new Array( 36 );\r\n\t\t\tvar rnd = 0, r;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '-';\r\n\t\r\n\t\t\t\t\t} else if ( i === 14 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '4';\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn uuid.join( '' );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\t// Clamp value to range <a, b>\r\n\t\r\n\t\tclamp: function ( x, a, b ) {\r\n\t\r\n\t\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Clamp value to range <a, inf)\r\n\t\r\n\t\tclampBottom: function ( x, a ) {\r\n\t\r\n\t\t\treturn x < a ? a : x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\t\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\t\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\t\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\t\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\t\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <0, 1> with 16 bits of randomness\r\n\t\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\t\r\n\t\trandom16: function () {\r\n\t\r\n\t\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random integer from <low, high> interval\r\n\t\r\n\t\trandInt: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <low, high> interval\r\n\t\r\n\t\trandFloat: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\t\r\n\t\trandFloatSpread: function ( range ) {\r\n\t\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdegToRad: function () {\r\n\t\r\n\t\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\t\r\n\t\t\treturn function ( degrees ) {\r\n\t\r\n\t\t\t\treturn degrees * degreeToRadiansFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tradToDeg: function () {\r\n\t\r\n\t\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\t\r\n\t\t\treturn function ( radians ) {\r\n\t\r\n\t\t\t\treturn radians * radianToDegreesFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\tvalue --;\r\n\t\t\tvalue |= value >> 1;\r\n\t\t\tvalue |= value >> 2;\r\n\t\t\tvalue |= value >> 4;\r\n\t\t\tvalue |= value >> 8;\r\n\t\t\tvalue |= value >> 16;\r\n\t\t\tvalue ++;\r\n\t\r\n\t\t\treturn value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spline.js\r\n\t\r\n\t/**\r\n\t * Spline from Tween.js, slightly optimized (and trashed)\r\n\t * http://sole.github.com/tween.js/examples/05_spline.html\r\n\t *\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Spline = function ( points ) {\r\n\t\r\n\t\tthis.points = points;\r\n\t\r\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tthis.initFromArray = function ( a ) {\r\n\t\r\n\t\t\tthis.points = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPoint = function ( k ) {\r\n\t\r\n\t\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\t\r\n\t\t\tpa = this.points[ c[ 0 ] ];\r\n\t\t\tpb = this.points[ c[ 1 ] ];\r\n\t\t\tpc = this.points[ c[ 2 ] ];\r\n\t\t\tpd = this.points[ c[ 3 ] ];\r\n\t\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\t\r\n\t\t\treturn v3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getControlPointsArray = function () {\r\n\t\r\n\t\t\tvar i, p, l = this.points.length,\r\n\t\t\t\tcoords = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tp = this.points[ i ];\r\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn coords;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// approximate length by summing linear segments\r\n\t\r\n\t\tthis.getLength = function ( nSubDivisions ) {\r\n\t\r\n\t\t\tvar i, index, nSamples, position,\r\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tchunkLengths = [],\r\n\t\t\t\ttotalLength = 0;\r\n\t\r\n\t\t\t// first point has 0 length\r\n\t\r\n\t\t\tchunkLengths[ 0 ] = 0;\r\n\t\r\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\t\r\n\t\t\tnSamples = this.points.length * nSubDivisions;\r\n\t\r\n\t\t\toldPosition.copy( this.points[ 0 ] );\r\n\t\r\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\t\r\n\t\t\t\tindex = i / nSamples;\r\n\t\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\ttmpVec.copy( position );\r\n\t\r\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\t\r\n\t\t\t\toldPosition.copy( position );\r\n\t\r\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\r\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\t\r\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\t\toldIntPoint = intPoint;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last point ends with total length\r\n\t\r\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\t\r\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\t\r\n\t\t\tvar i, j,\r\n\t\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\t\trealDistance,\r\n\t\t\t\tsampling, position,\r\n\t\t\t\tnewpoints = [],\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tsl = this.getLength();\r\n\t\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\t\r\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\t\r\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\t\r\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\t\r\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\t\r\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\t\r\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\t\r\n\t\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.points = newpoints;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Triangle.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Triangle = function ( a, b, c ) {\r\n\t\r\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Triangle.normal = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.subVectors( c, b );\r\n\t\t\tv0.subVectors( a, b );\r\n\t\t\tresult.cross( v0 );\r\n\t\r\n\t\t\tvar resultLengthSq = result.lengthSq();\r\n\t\t\tif ( resultLengthSq > 0 ) {\r\n\t\r\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.set( 0, 0, 0 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tTHREE.Triangle.barycoordFromPoint = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tv0.subVectors( c, a );\r\n\t\t\tv1.subVectors( b, a );\r\n\t\t\tv2.subVectors( point, a );\r\n\t\r\n\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\tvar dot12 = v1.dot( v2 );\r\n\t\r\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t// collinear or singular triangle\r\n\t\t\tif ( denom === 0 ) {\r\n\t\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar invDenom = 1 / denom;\r\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\t\r\n\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\treturn result.set( 1 - u - v, v, u );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.containsPoint = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c ) {\r\n\t\r\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\t\r\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Triangle,\r\n\t\r\n\t\tset: function ( a, b, c ) {\r\n\t\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\t\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( triangle ) {\r\n\t\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tarea: function () {\r\n\t\r\n\t\t\tvar v0 = new THREE.Vector3();\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\t\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmidpoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormal: function ( optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplane: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Plane();\r\n\t\r\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( triangle ) {\r\n\t\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Clock.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Clock = function ( autoStart ) {\r\n\t\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\t\r\n\t\tthis.running = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Clock.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Clock,\r\n\t\r\n\t\tstart: function () {\r\n\t\r\n\t\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.running = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetElapsedTime: function () {\r\n\t\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetDelta: function () {\r\n\t\r\n\t\t\tvar diff = 0;\r\n\t\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\t\r\n\t\t\t\tthis.start();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.running ) {\r\n\t\r\n\t\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn diff;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/EventDispatcher.js\r\n\t\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\t\r\n\tTHREE.EventDispatcher = function () {};\r\n\t\r\n\tTHREE.EventDispatcher.prototype = {\r\n\t\r\n\t\tconstructor: THREE.EventDispatcher,\r\n\t\r\n\t\tapply: function ( object ) {\r\n\t\r\n\t\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\t\r\n\t\t\t\tlisteners[ type ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\t\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\thasEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\t\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispatchEvent: function ( event ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tevent.target = this;\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar length = listenerArray.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Raycaster.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://exocortex.com/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\t\r\n\t( function ( THREE ) {\r\n\t\r\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\t\r\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\tthis.near = near || 0;\r\n\t\t\tthis.far = far || Infinity;\r\n\t\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: { threshold: 1 },\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tObject.defineProperties( this.params, {\r\n\t\t\t\tPointCloud: {\r\n\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\t\treturn this.Points;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction descSort( a, b ) {\r\n\t\r\n\t\t\treturn a.distance - b.distance;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tvar children = object.children;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tTHREE.Raycaster.prototype = {\r\n\t\r\n\t\t\tconstructor: THREE.Raycaster,\r\n\t\r\n\t\t\tlinePrecision: 1,\r\n\t\r\n\t\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\t\tthis.ray.set( origin, direction );\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tsetFromCamera: function ( coords, camera ) {\r\n\t\r\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\r\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObject: function ( object, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tintersectObject( object, this, intersects, recursive );\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObjects: function ( objects, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}( THREE ) );\r\n\t\r\n\t// File:src/core/Object3D.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\t\r\n\tTHREE.Object3D = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\t\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\t\r\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar rotation = new THREE.Euler();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\t\r\n\t\tvar onRotationChange = function () {\r\n\t\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar onQuaternionChange = function () {\r\n\t\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t\tthis.rotationAutoUpdate = true;\r\n\t\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\tthis.matrixWorld = new THREE.Matrix4();\r\n\t\r\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\t\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\t\r\n\t\tthis.userData = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\t\r\n\tTHREE.Object3D.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Object3D,\r\n\t\r\n\t\tget eulerOrder () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\treturn this.rotation.order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset eulerOrder ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\tthis.rotation.order = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget useQuaternion () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset useQuaternion ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset renderDepth ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\t\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// assumes q is normalized\r\n\t\r\n\t\t\tthis.quaternion.copy( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateOnAxis: function () {\r\n\t\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar q1 = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( axis, angle ) {\r\n\t\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateOnAxis: function () {\r\n\t\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( axis, distance ) {\r\n\t\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\t\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( distance, axis ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlocalToWorld: function ( vector ) {\r\n\t\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tworldToLocal: function () {\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tadd: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object === this ) {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Object3D ) {\r\n\t\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\t\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\t\r\n\t\t\t\tthis.children.push( object );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tobject.parent = null;\r\n\t\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\t\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetChildByName: function ( name ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectById: function ( id ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByName: function ( name ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\t\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\t\r\n\t\t\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn object;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn undefined;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldPosition: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldQuaternion: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldRotation: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldScale: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldDirection: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\traycast: function () {},\r\n\t\r\n\t\ttraverse: function ( callback ) {\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseVisible: function ( callback ) {\r\n\t\r\n\t\t\tif ( this.visible === false ) return;\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\t\r\n\t\t\tvar parent = this.parent;\r\n\t\r\n\t\t\tif ( parent !== null ) {\r\n\t\r\n\t\t\t\tcallback( parent );\r\n\t\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrix: function () {\r\n\t\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\t\r\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\t\r\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\t\r\n\t\t\t\tif ( this.parent === null ) {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\t\t\tforce = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update children\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRootObject = ( meta === undefined );\r\n\t\r\n\t\t\tvar data = {};\r\n\t\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tdata.metadata = {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// standard Object3D serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\t\r\n\t\t\tdata.matrix = this.matrix.toArray();\r\n\t\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.children = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {};\r\n\t\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.object = data;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( recursive ) {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source, recursive ) {\r\n\t\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.up.copy( source.up );\r\n\t\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\t\r\n\t\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\t\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\t\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\t\r\n\tTHREE.Object3DIdCount = 0;\r\n\t\r\n\t// File:src/core/Face3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\r\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\t\r\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\t\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Face3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Face3,\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\t\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\t\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Face4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/BufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.array.length / this.itemSize;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyArray: function ( array ) {\r\n\t\r\n\t\t\tthis.array.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar color = colors[ i ];\r\n\t\r\n\t\t\t\tif ( color === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new THREE.Color();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyIndicesArray: function ( indices ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar index = indices[ i ];\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\t\tarray[ offset ++ ] = index.c;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Deprecated\r\n\t\r\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InterleavedBuffer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBuffer,\r\n\t\r\n\t\tget length () {\r\n\t\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count () {\r\n\t\r\n\t\t\treturn this.array.length / this.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedInterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.InterleavedBufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.data.array.length / this.data.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Geometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Geometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\t\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphColors = [];\r\n\t\tthis.morphNormals = [];\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\tthis.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Geometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Geometry,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tvar vertices = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\t\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\t\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\t\r\n\t\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar addFace = function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\t\r\n\t\t\t\tscope.faces.push( face );\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( indices !== undefined ) {\r\n\t\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\r\n\t\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\t\r\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\t\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\r\n\t\t\tthis.applyMatrix( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\tcb.normalize();\r\n\t\r\n\t\t\t\tface.normal.copy( cb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\t\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\t\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( areaWeighted ) {\r\n\t\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\t\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ].normalize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeMorphNormals: function () {\r\n\t\r\n\t\t\tvar i, il, f, fl, face;\r\n\t\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\t\r\n\t\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t// create on first access\r\n\t\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\t\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\t\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\t\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\t\r\n\t\t\t\t// set vertices to morph target\r\n\t\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t// compute morph normals\r\n\t\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\t\r\n\t\t\t\t// store morph normals\r\n\t\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore original normals\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeLineDistances: function () {\r\n\t\r\n\t\t\tvar d = 0;\r\n\t\t\tvar vertices = this.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\r\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lineDistances[ i ] = d;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normalMatrix,\r\n\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\tvertices1 = this.vertices,\r\n\t\t\tvertices2 = geometry.vertices,\r\n\t\t\tfaces1 = this.faces,\r\n\t\t\tfaces2 = geometry.faces,\r\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\t\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\t\r\n\t\t\tif ( matrix !== undefined ) {\r\n\t\r\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// vertices\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\t\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\t\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// faces\r\n\t\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\t\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\t\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\t\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uvs\r\n\t\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\t\r\n\t\t\t\tif ( uv === undefined ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmergeMesh: function ( mesh ) {\r\n\t\r\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\t\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\t\r\n\t\tmergeVertices: function () {\r\n\t\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\t\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\t\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ i ];\r\n\t\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\t\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\t\r\n\t\t\t\tvar dupIndex = - 1;\r\n\t\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\t\r\n\t\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\t\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\t\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Use unique set of vertices\r\n\t\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Geometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertices = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\r\n\t\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\t\r\n\t\t\t\tvar faceType = 0;\r\n\t\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\t\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\t\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\t\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\t\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getColorIndex( color ) {\r\n\t\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\t\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\t\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\t\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\t\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\t\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = {};\r\n\t\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\t\tvar vertices = source.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = source.faces;\r\n\t\r\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\t\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\t\r\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\t\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\t\r\n\tTHREE.GeometryIdCount = 0;\r\n\t\r\n\t// File:src/core/DirectGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'DirectGeometry';\r\n\t\r\n\t\tthis.indices = [];\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.morphTargets = {};\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\t// this.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.DirectGeometry,\r\n\t\r\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\t\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex;\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t// materials\r\n\t\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\t\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\t\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.groups = groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\t\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsPosition = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\t\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsNormal = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skins\r\n\t\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\t\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar color = face.color;\r\n\t\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// morphs\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// skins\r\n\t\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\t\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\t\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeGroups( geometry );\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\t\r\n\t// File:src/core/BufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\t\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\r\n\t\tthis.morphAttributes = {};\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometry,\r\n\t\r\n\t\taddIndex: function ( index ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetIndex: function () {\r\n\t\r\n\t\t\treturn this.index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetIndex: function ( index ) {\r\n\t\r\n\t\t\tthis.index = index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\t\r\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( name === 'index' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetAttribute: function ( name ) {\r\n\t\r\n\t\t\treturn this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAttribute: function ( name ) {\r\n\t\r\n\t\t\tdelete this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget drawcalls() {\r\n\t\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget offsets() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearDrawCalls: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\t\r\n\t\t\tthis.groups.push( {\r\n\t\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearGroups: function () {\r\n\t\r\n\t\t\tthis.groups = [];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\t\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar position = this.attributes.position;\r\n\t\r\n\t\t\tif ( position !== undefined ) {\r\n\t\r\n\t\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normal = this.attributes.normal;\r\n\t\r\n\t\t\tif ( normal !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromObject: function ( object ) {\r\n\t\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\t\r\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateFromObject: function ( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\t\r\n\t\t\t\tif ( direct === undefined ) {\r\n\t\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t\tgeometry = direct;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.position;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.normal;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.color;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.lineDistance;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\t\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\t\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\t\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\t\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\t\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.indices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// groups\r\n\t\r\n\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\r\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\t\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning\r\n\t\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\t\tbb.makeEmpty();\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbb.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tbox.makeEmpty();\r\n\t\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbox.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tbox.center( center );\r\n\t\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\t\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\t// backwards compatibility\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( attributes.position ) {\r\n\t\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\r\n\t\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\tvar vA, vB, vC,\r\n\t\r\n\t\t\t\tpA = new THREE.Vector3(),\r\n\t\t\t\tpB = new THREE.Vector3(),\r\n\t\t\t\tpC = new THREE.Vector3(),\r\n\t\r\n\t\t\t\tcb = new THREE.Vector3(),\r\n\t\t\t\tab = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// indexed elements\r\n\t\r\n\t\t\t\tif ( index ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ j ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\t\r\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeOffsets: function ( size ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, offset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\t\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\t\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\t\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalizeNormals: function () {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\r\n\t\t\tvar x, y, z, n;\r\n\t\r\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tx = normals[ i ];\r\n\t\t\t\ty = normals[ i + 1 ];\r\n\t\t\t\tz = normals[ i + 2 ];\r\n\t\r\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\t\r\n\t\t\t\tnormals[ i ] *= n;\r\n\t\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\t\tnormals[ i + 2 ] *= n;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard BufferGeometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = { attributes: {} };\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\t\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\t\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tvar index = source.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = source.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = source.groups;\r\n\t\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\t\r\n\tTHREE.BufferGeometry.MaxIndex = 65535;\r\n\t\r\n\t// File:src/core/InstancedBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferGeometry = function () {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\t\r\n\t\tthis.groups.push( {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tinstances: instances\r\n\t\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tvar index = source.index;\r\n\t\r\n\t\tif ( index !== null ) {\r\n\t\r\n\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar attributes = source.attributes;\r\n\t\r\n\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar groups = source.groups;\r\n\t\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\t\r\n\t// File:src/cameras/Camera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.Camera = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Camera';\r\n\t\r\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\t\tthis.projectionMatrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\t\r\n\tTHREE.Camera.prototype.getWorldDirection = function () {\r\n\t\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.lookAt = function () {\r\n\t\r\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\t\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\treturn function ( vector ) {\r\n\t\r\n\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/CubeCamera.js\r\n\t\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'CubeCamera';\r\n\t\r\n\t\tvar fov = 90, aspect = 1;\r\n\t\r\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\t\r\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\t\r\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\t\r\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\t\r\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\t\r\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\t\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\t\r\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\t\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\t\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = false;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\t\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\t\r\n\t// File:src/cameras/OrthographicCamera.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'OrthographicCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\t\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/PerspectiveCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\t\r\n\t\r\n\t/**\r\n\t * Uses Focal Length (in mm) to estimate and set FOV\r\n\t * 35mm (full-frame) camera is used if frame size is not specified;\r\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\t\r\n\t\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\t\r\n\t\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\t\r\n\t\tthis.fullWidth = fullWidth;\r\n\t\tthis.fullHeight = fullHeight;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\t\r\n\t\tif ( this.fullWidth ) {\r\n\t\r\n\t\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\t\tvar bottom = - top;\r\n\t\t\tvar left = aspect * bottom;\r\n\t\t\tvar right = aspect * top;\r\n\t\t\tvar width = Math.abs( right - left );\r\n\t\t\tvar height = Math.abs( top - bottom );\r\n\t\r\n\t\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\t\tthis.near,\r\n\t\t\t\tthis.far\r\n\t\t\t);\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.aspect = this.aspect;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/Light.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Light = function ( color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Light';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Light.prototype.constructor = THREE.Light;\r\n\t\r\n\tTHREE.Light.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/lights/AmbientLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AmbientLight = function ( color ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'AmbientLight';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\t\r\n\tTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/DirectionalLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'DirectionalLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\r\n\t\tthis.shadowCameraLeft = - 500;\r\n\t\tthis.shadowCameraRight = 500;\r\n\t\tthis.shadowCameraTop = 500;\r\n\t\tthis.shadowCameraBottom = - 500;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\t\r\n\tTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\r\n\t\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\t\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\t\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\t\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/HemisphereLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, skyColor );\r\n\t\r\n\t\tthis.type = 'HemisphereLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.groundColor = new THREE.Color( groundColor );\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\t\r\n\tTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\t\tthis.intensity = source.intensity;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.groundColor = this.groundColor.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/PointLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'PointLight';\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\t\r\n\tTHREE.PointLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/SpotLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'SpotLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\tthis.shadowCameraFov = 50;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\t\r\n\tTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.exponent = source.exponent;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.angle = this.angle;\r\n\t\tdata.object.exponent = this.exponent;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Cache.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Cache = {\r\n\t\r\n\t\tenabled: false,\r\n\t\r\n\t\tfiles: {},\r\n\t\r\n\t\tadd: function ( key, file ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\t\r\n\t\t\tthis.files[ key ] = file;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( key ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\t\r\n\t\t\treturn this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( key ) {\r\n\t\r\n\t\t\tdelete this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclear: function () {\r\n\t\r\n\t\t\tthis.files = {};\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Loader.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Loader = function () {\r\n\t\r\n\t\tthis.onLoadStart = function () {};\r\n\t\tthis.onLoadProgress = function () {};\r\n\t\tthis.onLoadComplete = function () {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Loader,\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\textractUrlBase: function ( url ) {\r\n\t\r\n\t\t\tvar parts = url.split( '/' );\r\n\t\r\n\t\t\tif ( parts.length === 1 ) return './';\r\n\t\r\n\t\t\tparts.pop();\r\n\t\r\n\t\t\treturn parts.join( '/' ) + '/';\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\tvar array = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\t\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcreateMaterial: ( function () {\r\n\t\r\n\t\t\tvar imageLoader;\r\n\t\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\t\r\n\t\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\t\r\n\t\t\t\tfunction nearest_pow2( n ) {\r\n\t\r\n\t\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\t\r\n\t\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\t\r\n\t\t\t\t\tvar texture;\r\n\t\r\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\t\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\t\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture = new THREE.Texture();\r\n\t\r\n\t\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\t\r\n\t\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = canvas;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = image;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.sourceFile = sourceFile;\r\n\t\r\n\t\t\t\t\tif ( repeat ) {\r\n\t\r\n\t\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\t\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( offset ) {\r\n\t\r\n\t\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( wrap ) {\r\n\t\r\n\t\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( anisotropy ) {\r\n\t\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\twhere[ name ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction rgb2hex( rgb ) {\r\n\t\r\n\t\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// defaults\r\n\t\r\n\t\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\t\tvar mpars = {};\r\n\t\r\n\t\t\t\t// parameters from model file\r\n\t\r\n\t\t\t\tif ( m.shading ) {\r\n\t\r\n\t\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\t\r\n\t\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.transparent !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = m.transparent;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthTest !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthTest = m.depthTest;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthWrite !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.visible !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.visible = m.visible;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.flipSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.BackSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.doubleSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.wireframe = m.wireframe;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.vertexColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\t\r\n\t\t\t\t\t} else if ( m.vertexColors ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// colors\r\n\t\r\n\t\t\t\tif ( m.colorDiffuse ) {\r\n\t\r\n\t\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\t\r\n\t\t\t\t} else if ( m.DbgColor ) {\r\n\t\r\n\t\t\t\t\tmpars.color = m.DbgColor;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.colorEmissive ) {\r\n\t\r\n\t\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\t\r\n\t\t\t\t\tif ( m.colorSpecular ) {\r\n\t\r\n\t\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.specularCoef ) {\r\n\t\r\n\t\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// modifiers\r\n\t\r\n\t\t\t\tif ( m.transparency !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\t\tm.opacity = m.transparency;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.opacity = m.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// textures\r\n\t\r\n\t\t\t\tif ( texturePath ) {\r\n\t\r\n\t\t\t\t\tif ( m.mapDiffuse ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapLight ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAO ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapBump ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapNormal ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapSpecular ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAlpha ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( m.mapBumpScale ) {\r\n\t\r\n\t\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.mapNormalFactor ) {\r\n\t\r\n\t\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\t\r\n\t\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\t\r\n\t\t\t\treturn material;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.Handlers = {\r\n\t\r\n\t\thandlers: [],\r\n\t\r\n\t\tadd: function ( regex, loader ) {\r\n\t\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( file ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\t\r\n\t\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\t\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\t\r\n\t\t\t\t\treturn loader;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/XHRLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.XHRLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.XHRLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.XHRLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this.response );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this.response );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\t\r\n\t\t\trequest.send( null );\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\treturn request;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetResponseType: function ( value ) {\r\n\t\r\n\t\t\tthis.responseType = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetWithCredentials: function ( value ) {\r\n\t\r\n\t\t\tthis.withCredentials = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ImageLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ImageLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ImageLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = document.createElement( 'img' );\r\n\t\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\timage.src = url;\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/JSONLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.JSONLoader = function ( manager ) {\r\n\t\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\tthis.withCredentials = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.JSONLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.JSONLoader,\r\n\t\r\n\t\t// Deprecated\r\n\t\t\r\n\t\tget statusDomElement () {\r\n\t\r\n\t\t\tif ( this._statusDomElement === undefined ) {\r\n\t\r\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\t\treturn this._statusDomElement;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tload: function( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\t\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, texturePath ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry(),\r\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\t\r\n\t\t\tparseModel( scale );\r\n\t\r\n\t\t\tparseSkin();\r\n\t\t\tparseMorphing( scale );\r\n\t\r\n\t\t\tgeometry.computeFaceNormals();\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t\t\tfunction parseModel( scale ) {\r\n\t\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\t\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i, j, fi,\r\n\t\r\n\t\t\t\toffset, zLength,\r\n\t\r\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\t\r\n\t\t\t\ttype,\r\n\t\t\t\tisQuad,\r\n\t\t\t\thasMaterial,\r\n\t\t\t\thasFaceVertexUv,\r\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\t\r\n\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\t\r\n\t\t\t\tuvLayer, uv, u, v,\r\n\t\r\n\t\t\t\tfaces = json.faces,\r\n\t\t\t\tvertices = json.vertices,\r\n\t\t\t\tnormals = json.normals,\r\n\t\t\t\tcolors = json.colors,\r\n\t\r\n\t\t\t\tnUvLayers = 0;\r\n\t\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t// disregard empty arrays\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\tvertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\t\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\t\r\n\t\r\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\t\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\t\r\n\t\t\t\t\tif ( isQuad ) {\r\n\t\r\n\t\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\toffset += 4;\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseSkin() {\r\n\t\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\t\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\t\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// could change this to json.animations[0] or remove completely\r\n\t\r\n\t\t\t\tgeometry.animation = json.animation;\r\n\t\t\t\tgeometry.animations = json.animations;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseMorphing( scale ) {\r\n\t\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\t\r\n\t\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\t\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.morphColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\t\r\n\t\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\t\r\n\t\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\t\tdstColors.push( color );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\t\r\n\t\t\t\treturn { geometry: geometry };\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\t\r\n\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/LoadingManager.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\t\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\t\r\n\t\tthis.itemStart = function ( url ) {\r\n\t\r\n\t\t\titemsTotal ++;\r\n\t\r\n\t\t\tif ( isLoading === false ) {\r\n\t\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tisLoading = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemEnd = function ( url ) {\r\n\t\r\n\t\t\titemsLoaded ++;\r\n\t\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\t\r\n\t\t\t\tisLoading = false;\r\n\t\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onLoad();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemError = function ( url ) {\r\n\t\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onError( url );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\t\r\n\t// File:src/loaders/BufferGeometryLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometryLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometryLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometryLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar index = json.data.index;\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = json.data.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\t\r\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\t\r\n\t\t\tif ( groups !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\t\r\n\t\t\t\tvar center = new THREE.Vector3();\r\n\t\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/MaterialLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MaterialLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MaterialLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MaterialLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTextures: function ( value ) {\r\n\t\r\n\t\t\tthis.textures = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTexture: function ( name ) {\r\n\t\r\n\t\t\tvar textures = this.textures;\r\n\t\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar material = new THREE[ json.type ];\r\n\t\t\tmaterial.uuid = json.uuid;\r\n\t\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\r\n\t\t\t// for PointsMaterial\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\t\r\n\t\t\t// maps\r\n\t\r\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\t\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\t\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\t\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\t\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\t\r\n\t\t\tif ( json.envMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\t\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\r\n\t\t\t// MeshFaceMaterial\r\n\t\r\n\t\t\tif ( json.materials !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ObjectLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ObjectLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ObjectLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ObjectLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\t\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\t\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn object;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseGeometries: function ( json ) {\r\n\t\r\n\t\t\tvar geometries = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TextGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometries;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\t\r\n\t\t\tvar materials = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\t\tmaterials[ material.uuid ] = material;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn materials;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\t\r\n\t\t\tfunction loadImage( url ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\treturn loader.load( url, function () {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\t\r\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\t\r\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\t\r\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn images;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseTextures: function ( json, images ) {\r\n\t\r\n\t\t\tfunction parseConstant( value ) {\r\n\t\r\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\t\r\n\t\t\t\treturn THREE[ value ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar textures = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\t\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseObject: function () {\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( data, geometries, materials ) {\r\n\t\r\n\t\t\t\tvar object;\r\n\t\r\n\t\t\t\tvar getGeometry = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn geometries[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar getMaterial = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn materials[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\tcase 'Scene':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Scene();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PerspectiveCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'OrthographicCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'AmbientLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'LOD':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.LOD();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Line':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointCloud':\r\n\t\t\t\t\tcase 'Points':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Sprite':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Group':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Group();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.uuid = data.uuid;\r\n\t\r\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\t\tif ( data.matrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\t\r\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\r\n\t\t\t\tif ( data.children !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var child in data.children ) {\r\n\t\r\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.type === 'LOD' ) {\r\n\t\r\n\t\t\t\t\tvar levels = data.levels;\r\n\t\r\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\t\r\n\t\t\t\t\t\tif ( child !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn object;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/TextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.TextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.TextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tonLoad( texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/BinaryTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\t\r\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BinaryTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BinaryTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\t\r\n\t\t\t\tif ( ! texData ) return;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\t\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\t\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\t\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\t\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\t\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\t\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CompressedTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\t\r\n\tTHREE.CompressedTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.CompressedTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CompressedTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar texture = new THREE.CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\t\r\n\t\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\t\r\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\t\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\t\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\t\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/Material.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Material = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\t\r\n\t\tthis.side = THREE.FrontSide;\r\n\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = THREE.AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\r\n\t\tthis.depthFunc = THREE.LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\t\r\n\t\tthis.colorWrite = true;\r\n\t\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\t\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\t\r\n\t\tthis.alphaTest = 0;\r\n\t\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis._needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Material.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Material,\r\n\t\r\n\t\tget needsUpdate () {\r\n\t\r\n\t\t\treturn this._needsUpdate;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.update();\r\n\t\r\n\t\t\tthis._needsUpdate = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValues: function ( values ) {\r\n\t\r\n\t\t\tif ( values === undefined ) return;\r\n\t\r\n\t\t\tfor ( var key in values ) {\r\n\t\r\n\t\t\t\tvar newValue = values[ key ];\r\n\t\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\t\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\t\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\t\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\t\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\r\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\r\n\t\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.side = source.side;\r\n\t\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\r\n\t\t\tthis.blending = source.blending;\r\n\t\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\r\n\t\t\tthis.precision = source.precision;\r\n\t\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget wrapAround () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapAround ( boolean ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget wrapRGB () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\t\r\n\tTHREE.MaterialIdCount = 0;\r\n\t\r\n\t// File:src/materials/LineBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\",\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/LineDashedMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>,\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineDashedMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\t\r\n\t\tthis.vertexColors = false;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshLambertMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshPhongMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.specular = new THREE.Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\t\r\n\t\tthis.metal = false;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\t\r\n\t\tthis.metal = source.metal;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshDepthMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshNormalMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  shading: THREE.FlatShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MultiMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MultiMaterial = function ( materials ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.type = 'MultiMaterial';\r\n\t\r\n\t\tthis.materials = materials instanceof Array ? materials : [];\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MultiMaterial.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MultiMaterial,\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.2,\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tmaterials: []\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.visible = this.visible;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\tvar material = new this.constructor();\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\t\r\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterial.visible = this.visible;\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\t\r\n\t// File:src/materials/PointsMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.PointsMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'PointsMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\t\r\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.PointCloudMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/ShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.ShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'ShaderMaterial';\r\n\t\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\t\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\t\r\n\t\tthis.derivatives = false; // set to use derivatives\r\n\t\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\t\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\r\n\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setValues( parameters );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\t\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\t\r\n\t\tthis.attributes = source.attributes;\r\n\t\tthis.defines = source.defines;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.lights = source.lights;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\tthis.derivatives = source.derivatives;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.uniforms = this.uniforms;\r\n\t\tdata.attributes = this.attributes;\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/RawShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.RawShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.ShaderMaterial.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\t// File:src/materials/SpriteMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *\tuvOffset: new THREE.Vector2(),\r\n\t *\tuvScale: new THREE.Vector2(),\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.SpriteMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'SpriteMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\tthis.fog = false;\r\n\t\r\n\t\t// set parameters\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\t\r\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.rotation = source.rotation;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/textures/Texture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.sourceFile = '';\r\n\t\r\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\t\r\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\t\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\t\r\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\r\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\t\r\n\tTHREE.Texture.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Texture,\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\t\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getDataURL( image ) {\r\n\t\r\n\t\t\t\tvar canvas;\r\n\t\r\n\t\t\t\tif ( image.toDataURL !== undefined ) {\r\n\t\r\n\t\t\t\t\tcanvas = image;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\t\tcanvas.height = image.height;\r\n\t\r\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\r\n\t\t\t\tmapping: this.mapping,\r\n\t\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\t\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( this.image !== undefined ) {\r\n\t\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\r\n\t\t\t\tvar image = this.image;\r\n\t\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\t\r\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransformUv: function ( uv ) {\r\n\t\r\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\t\r\n\t\t\tuv.multiply( this.repeat );\r\n\t\t\tuv.add( this.offset );\r\n\t\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.flipY ) {\r\n\t\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\t\r\n\tTHREE.TextureIdCount = 0;\r\n\t\r\n\t// File:src/textures/CanvasTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\t\r\n\t// File:src/textures/CubeTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.images = images;\r\n\t\tthis.flipY = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\t\r\n\tTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.images = source.images;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/textures/CompressedTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\t\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\t\r\n\t// File:src/textures/DataTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\t\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps  = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\t\r\n\t// File:src/textures/VideoTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar update = function () {\r\n\t\r\n\t\t\trequestAnimationFrame( update );\r\n\t\r\n\t\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\t\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tupdate();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\t\r\n\t// File:src/objects/Group.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Group = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Group';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Group.prototype.constructor = THREE.Group;\r\n\t// File:src/objects/Points.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Points = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Points';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Points.prototype.constructor = THREE.Points;\r\n\t\r\n\tTHREE.Points.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\t\tfunction testPoint( point, index ) {\r\n\t\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\t\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\t\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Points.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.PointCloud = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystem = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Line.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Line = function ( geometry, material, mode ) {\r\n\t\r\n\t\tif ( mode === 1 ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\t\treturn new THREE.LineSegments( geometry, material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Line';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Line.prototype.constructor = THREE.Line;\r\n\t\r\n\tTHREE.Line.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\t\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\t\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Line.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.LineStrip = 0;\r\n\tTHREE.LinePieces = 1;\r\n\t\r\n\t// File:src/objects/LineSegments.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LineSegments = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Line.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'LineSegments';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\n\tTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\t\r\n\t// File:src/objects/Mesh.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\t\r\n\tTHREE.Mesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Mesh';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t\tthis.updateMorphTargets();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\t\r\n\tTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\t\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\t\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\t\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\t\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\t\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\t\r\n\t\treturn 0;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Mesh.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\t\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\t\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\t\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\t\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\t\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\t\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\t\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\t\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\t\r\n\t\t\treturn uv1.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\r\n\t\t\tif ( material === undefined ) return;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check boundingBox before continuing\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar a, b, c;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\t\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\t\r\n\t\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\t\tc = vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\t\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\t\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\t\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\t\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\t\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\t\tvC.add( c );\r\n\t\r\n\t\t\t\t\t\ta = vA;\r\n\t\t\t\t\t\tb = vB;\r\n\t\t\t\t\t\tc = vC;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: face,\r\n\t\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Mesh.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Bone.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Bone = function ( skin ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Bone';\r\n\t\r\n\t\tthis.skin = skin;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\t\r\n\tTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.skin = source.skin;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Skeleton.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\t\r\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\t\r\n\t\tthis.identityMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t// copy the bone array\r\n\t\r\n\t\tbones = bones || [];\r\n\t\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\r\n\t\t// create a bone texture or an array of floats\r\n\t\r\n\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\r\n\t\t\t\r\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\t\tsize = Math.max( size, 4 );\r\n\t\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\t\r\n\t\tif ( boneInverses === undefined ) {\r\n\t\r\n\t\t\tthis.calculateInverses();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\t\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\t\r\n\t\t\t\tthis.boneInverses = [];\r\n\t\r\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\t\r\n\t\tthis.boneInverses = [];\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\t\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\t\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.pose = function () {\r\n\t\r\n\t\tvar bone;\r\n\t\r\n\t\t// recover the bind-time world matrices\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tif ( bone.parent ) {\r\n\t\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.update = ( function () {\r\n\t\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\t// flatten bone matrices to array\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\t\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Skeleton.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/SkinnedMesh.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'SkinnedMesh';\r\n\t\r\n\t\tthis.bindMode = \"attached\";\r\n\t\tthis.bindMatrix = new THREE.Matrix4();\r\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\t\r\n\t\t// init bones\r\n\t\r\n\t\t// TODO: remove bone creation as there is no reason (other than\r\n\t\t// convenience) for THREE.SkinnedMesh to do this.\r\n\t\r\n\t\tvar bones = [];\r\n\t\r\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\t\r\n\t\t\tvar bone, gbone;\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tbone = new THREE.Bone( this );\r\n\t\t\t\tbones.push( bone );\r\n\t\r\n\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tif ( gbone.parent !== - 1 ) {\r\n\t\r\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.add( bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.normalizeSkinWeights();\r\n\t\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\t\r\n\t\tthis.skeleton = skeleton;\r\n\t\r\n\t\tif ( bindMatrix === undefined ) {\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\t\t\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\t\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.pose = function () {\r\n\t\r\n\t\tthis.skeleton.pose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\t\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\t\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\t\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\t\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/MorphAnimMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'MorphAnimMesh';\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.duration = 1000; // milliseconds\r\n\t\tthis.mirroredLoop = false;\r\n\t\tthis.time = 0;\r\n\t\r\n\t\t// internals\r\n\t\r\n\t\tthis.lastKeyframe = 0;\r\n\t\tthis.currentKeyframe = 0;\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\t\r\n\t\tthis.startKeyframe = start;\r\n\t\tthis.endKeyframe = end;\r\n\t\r\n\t\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\t\r\n\t\tthis.direction = - 1;\r\n\t\tthis.directionBackwards = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tif ( ! geometry.animations ) geometry.animations = {};\r\n\t\r\n\t\tvar firstAnimation, animations = geometry.animations;\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar parts = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\t\r\n\t\t\t\tvar label = parts[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar animation = animations[ label ];\r\n\t\r\n\t\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\t\tif ( i > animation.end ) animation.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\t\r\n\t\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\t\r\n\t\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\t\r\n\t\tvar animation = this.geometry.animations[ label ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\t\tthis.time = 0;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\t\r\n\t\tvar frameTime = this.duration / this.length;\r\n\t\r\n\t\tthis.time += this.direction * delta;\r\n\t\r\n\t\tif ( this.mirroredLoop ) {\r\n\t\r\n\t\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\t\r\n\t\t\t\tthis.direction *= - 1;\r\n\t\r\n\t\t\t\tif ( this.time > this.duration ) {\r\n\t\r\n\t\t\t\t\tthis.time = this.duration;\r\n\t\t\t\t\tthis.directionBackwards = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.time < 0 ) {\r\n\t\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.directionBackwards = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.time = this.time % this.duration;\r\n\t\r\n\t\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tif ( keyframe !== this.currentKeyframe ) {\r\n\t\r\n\t\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\t\tinfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\t\tthis.currentKeyframe = keyframe;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\t\r\n\t\tif ( this.directionBackwards ) {\r\n\t\r\n\t\t\tmix = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinfluences[ this.currentKeyframe ] = mix;\r\n\t\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tinfluences[ i ] = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\t\tif ( b > - 1 ) influences[ b ] = t;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.duration = source.duration;\r\n\t\tthis.mirroredLoop = source.mirroredLoop;\r\n\t\tthis.time = source.time;\r\n\t\r\n\t\tthis.lastKeyframe = source.lastKeyframe;\r\n\t\tthis.currentKeyframe = source.currentKeyframe;\r\n\t\r\n\t\tthis.direction = source.direction;\r\n\t\tthis.directionBackwards = source.directionBackwards;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/LOD.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LOD = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'LOD';\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tobjects: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\t\treturn this.levels;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\t\r\n\tTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\t\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\r\n\t\tdistance = Math.abs( distance );\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\t\r\n\t\tthis.add( object );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn levels[ i - 1 ].object;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\t\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.LOD.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function update( camera ) {\r\n\t\r\n\t\t\tvar levels = this.levels;\r\n\t\r\n\t\t\tif ( levels.length > 1 ) {\r\n\t\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\t\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\t\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\t\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.LOD.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\t\r\n\t\tvar levels = source.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.levels = [];\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Sprite.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Sprite = ( function () {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\t\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\t\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\treturn function Sprite( material ) {\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tthis.type = 'Sprite';\r\n\t\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\t\r\n\tTHREE.Sprite.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\t\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Sprite.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.Particle = THREE.Sprite;\r\n\t\r\n\t// File:src/objects/LensFlare.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.lensFlares = [];\r\n\t\r\n\t\tthis.positionScreen = new THREE.Vector3();\r\n\t\tthis.customUpdateCallback = undefined;\r\n\t\r\n\t\tif ( texture !== undefined ) {\r\n\t\r\n\t\t\tthis.add( texture, size, distance, blending, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\t\r\n\t\r\n\t/*\r\n\t * Add: adds another flare\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\t\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\t\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\t\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\t\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\t\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\t\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\t\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\t\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\t\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Scene.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Scene = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Scene';\r\n\t\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\t\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\t\r\n\tTHREE.Scene.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Fog.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Fog = function ( color, near, far ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Fog.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/FogExp2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.FogExp2 = function ( color, density ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FogExp2.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk.js\r\n\t\r\n\tTHREE.ShaderChunk = {};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/UniformsUtils.js\r\n\t\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\t\r\n\tTHREE.UniformsUtils = {\r\n\t\r\n\t\tmerge: function ( uniforms ) {\r\n\t\r\n\t\t\tvar merged = {};\r\n\t\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\t\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\t\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\t\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn merged;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( uniforms_src ) {\r\n\t\r\n\t\t\tvar uniforms_dst = {};\r\n\t\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\t\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\t\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\t\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\t\r\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\t\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms_dst;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/UniformsLib.js\r\n\t\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\t\r\n\tTHREE.UniformsLib = {\r\n\t\r\n\t\tcommon: {\r\n\t\r\n\t\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\taomap: {\r\n\t\r\n\t\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlightmap: {\r\n\t\r\n\t\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\temissivemap: {\r\n\t\r\n\t\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbumpmap: {\r\n\t\r\n\t\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalmap: {\r\n\t\r\n\t\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisplacementmap: {\r\n\t\r\n\t\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfog : {\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlights: {\r\n\t\r\n\t\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpoints: {\r\n\t\r\n\t\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tshadowmap: {\r\n\t\r\n\t\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\t\r\n\t\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib.js\r\n\t\r\n\t/**\r\n\t * Webgl Shader Library for three.js\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.ShaderLib = {\r\n\t\r\n\t\t'basic': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'lambert': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define LAMBERT\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\t\"\t\telse\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'phong': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vNormal;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\t\"uniform float shininess;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'points': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float size;\",\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\t\"\t#else\",\r\n\t\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'dashed': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\t\t\t\"attribute float lineDistance;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\t\"uniform float totalSize;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\t\r\n\t\t\t\t\"\t\tdiscard;\",\r\n\t\r\n\t\t\t\t\"\t}\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'depth': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float mNear;\",\r\n\t\t\t\t\"uniform float mFar;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'normal': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'cube': {\r\n\t\r\n\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'equirect': {\r\n\t\r\n\t\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* Depth encoding into RGBA texture\r\n\t\t *\r\n\t\t * based on SpiderGL shadow map example\r\n\t\t * http://spidergl.org/example.php?id=6\r\n\t\t *\r\n\t\t * originally from\r\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t\t *\r\n\t\t * see also\r\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t\t */\r\n\t\r\n\t\t'depthRGBA': {\r\n\t\r\n\t\t\tuniforms: {},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\t\r\n\t\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\t\"\treturn res;\",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderer.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderer = function ( parameters ) {\r\n\t\r\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\r\n\t\t_width = _canvas.width,\r\n\t\t_height = _canvas.height,\r\n\t\r\n\t\tpixelRatio = 1,\r\n\t\r\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\r\n\t\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t\t_clearAlpha = 0;\r\n\t\r\n\t\tvar lights = [];\r\n\t\r\n\t\tvar opaqueObjects = [];\r\n\t\tvar opaqueObjectsLastIndex = -1;\r\n\t\tvar transparentObjects = [];\r\n\t\tvar transparentObjectsLastIndex = -1;\r\n\t\r\n\t\tvar opaqueImmediateObjects = [];\r\n\t\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\t\tvar transparentImmediateObjects = [];\r\n\t\tvar transparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\t\r\n\t\r\n\t\tvar sprites = [];\r\n\t\tvar lensFlares = [];\r\n\t\r\n\t\t// public properties\r\n\t\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\t\r\n\t\t// clearing\r\n\t\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\t\r\n\t\t// scene graph\r\n\t\r\n\t\tthis.sortObjects = true;\r\n\t\r\n\t\t// physically based shading\r\n\t\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\t\r\n\t\t// morphs\r\n\t\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\t\r\n\t\t// flags\r\n\t\r\n\t\tthis.autoScaleCubemaps = true;\r\n\t\r\n\t\t// internal properties\r\n\t\r\n\t\tvar _this = this,\r\n\t\r\n\t\t// internal state cache\r\n\t\r\n\t\t_currentProgram = null,\r\n\t\t_currentFramebuffer = null,\r\n\t\t_currentMaterialId = - 1,\r\n\t\t_currentGeometryProgram = '',\r\n\t\t_currentCamera = null,\r\n\t\r\n\t\t_usedTextureUnits = 0,\r\n\t\r\n\t\t_viewportX = 0,\r\n\t\t_viewportY = 0,\r\n\t\t_viewportWidth = _canvas.width,\r\n\t\t_viewportHeight = _canvas.height,\r\n\t\t_currentWidth = 0,\r\n\t\t_currentHeight = 0,\r\n\t\r\n\t\t// frustum\r\n\t\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\r\n\t\t // camera matrices cache\r\n\t\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_vector3 = new THREE.Vector3(),\r\n\t\r\n\t\t// light arrays cache\r\n\t\r\n\t\t_direction = new THREE.Vector3(),\r\n\t\r\n\t\t_lightsNeedUpdate = true,\r\n\t\r\n\t\t_lights = {\r\n\t\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// info\r\n\t\r\n\t\t_infoMemory = {\r\n\t\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_infoRender = {\r\n\t\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.info = {\r\n\t\r\n\t\t\trender: _infoRender,\r\n\t\t\tmemory: _infoMemory,\r\n\t\t\tprograms: null\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\t// initialize\r\n\t\r\n\t\tvar _gl;\r\n\t\r\n\t\ttry {\r\n\t\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\t\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\t\r\n\t\t\tif ( _gl === null ) {\r\n\t\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context.';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t} catch ( error ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\t\r\n\t\textensions.get( 'OES_texture_float' );\r\n\t\textensions.get( 'OES_texture_float_linear' );\r\n\t\textensions.get( 'OES_texture_half_float' );\r\n\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\t\r\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\t\tvar properties = new THREE.WebGLProperties();\r\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\t\r\n\t\tthis.info.programs = programCache.programs;\r\n\t\r\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction glClearColor( r, g, b, a ) {\r\n\t\r\n\t\t\tif ( _premultipliedAlpha === true ) {\r\n\t\r\n\t\t\t\tr *= a; g *= a; b *= a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.clearColor( r, g, b, a );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setDefaultGLState() {\r\n\t\r\n\t\t\tstate.init();\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction resetGLState() {\r\n\t\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\tstate.reset();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tsetDefaultGLState();\r\n\t\r\n\t\tthis.context = _gl;\r\n\t\tthis.capabilities = capabilities;\r\n\t\tthis.extensions = extensions;\r\n\t\tthis.state = state;\r\n\t\r\n\t\t// shadow map\r\n\t\r\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\t\r\n\t\tthis.shadowMap = shadowMap;\r\n\t\r\n\t\r\n\t\t// Plugins\r\n\t\r\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.getContext = function () {\r\n\t\r\n\t\t\treturn _gl;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getContextAttributes = function () {\r\n\t\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.forceContextLoss = function () {\r\n\t\r\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getMaxAnisotropy = ( function () {\r\n\t\r\n\t\t\tvar value;\r\n\t\r\n\t\t\treturn function getMaxAnisotropy() {\r\n\t\r\n\t\t\t\tif ( value !== undefined ) return value;\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvalue = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t\tthis.getPrecision = function () {\r\n\t\r\n\t\t\treturn capabilities.precision;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPixelRatio = function () {\r\n\t\r\n\t\t\treturn pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\t\r\n\t\t\tif ( value !== undefined ) pixelRatio = value;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getSize = function () {\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\t\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\t\r\n\t\t\tif ( updateStyle !== false ) {\r\n\t\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_viewportX = x * pixelRatio;\r\n\t\t\t_viewportY = y * pixelRatio;\r\n\t\r\n\t\t\t_viewportWidth = width * pixelRatio;\r\n\t\t\t_viewportHeight = height * pixelRatio;\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_gl.scissor(\r\n\t\t\t\tx * pixelRatio,\r\n\t\t\t\ty * pixelRatio,\r\n\t\t\t\twidth * pixelRatio,\r\n\t\t\t\theight * pixelRatio\r\n\t\t\t);\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableScissorTest = function ( boolean ) {\r\n\t\r\n\t\t\tstate.setScissorTest( boolean );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Clearing\r\n\t\r\n\t\tthis.getClearColor = function () {\r\n\t\r\n\t\t\treturn _clearColor;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearColor = function ( color, alpha ) {\r\n\t\r\n\t\t\t_clearColor.set( color );\r\n\t\r\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getClearAlpha = function () {\r\n\t\r\n\t\t\treturn _clearAlpha;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearAlpha = function ( alpha ) {\r\n\t\r\n\t\t\t_clearAlpha = alpha;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\t\r\n\t\t\tvar bits = 0;\r\n\t\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\t\t_gl.clear( bits );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearColor = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Reset\r\n\t\r\n\t\tthis.resetGLState = resetGLState;\r\n\t\r\n\t\tthis.dispose = function() {\r\n\t\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Events\r\n\t\r\n\t\tfunction onContextLost( event ) {\r\n\t\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\t\r\n\t\t\tproperties.clear();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction onTextureDispose( event ) {\r\n\t\r\n\t\t\tvar texture = event.target;\r\n\t\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\tdeallocateTexture( texture );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\t\r\n\t\t\tvar renderTarget = event.target;\r\n\t\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onMaterialDispose( event ) {\r\n\t\r\n\t\t\tvar material = event.target;\r\n\t\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\tdeallocateMaterial( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer deallocation\r\n\t\r\n\t\tfunction deallocateTexture( texture ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t// cube texture\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// 2D texture\r\n\t\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.delete( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\t\r\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( renderTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateMaterial( material ) {\r\n\t\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\tproperties.delete( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\t\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\t\r\n\t\t\tmaterial.program = undefined;\r\n\t\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\t\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer rendering\r\n\t\r\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar buffers = properties.get( object );\r\n\t\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( object.hasPositions ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasNormals ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\r\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvar array = object.normalArray;\r\n\t\r\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasUvs && material.map ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.color );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\t\r\n\t\t\tobject.count = 0;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\t\r\n\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\tvar updateBuffers = false;\r\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\t\r\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\t\r\n\t\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( morphTargetInfluences !== undefined ) {\r\n\t\r\n\t\t\t\tvar activeInfluences = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tactiveInfluences.sort( numericalSort );\r\n\t\r\n\t\t\t\tif ( activeInfluences.length > 8 ) {\r\n\t\r\n\t\t\t\t\tactiveInfluences.length = 8;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\t\r\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar index = influence[ 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar uniforms = program.getUniforms();\r\n\t\r\n\t\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar renderer;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( index );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer = bufferRenderer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( updateBuffers ) {\r\n\t\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group === undefined ) {\r\n\t\r\n\t\t\t\tvar count;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tcount = index.count;\r\n\t\r\n\t\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\tcount = position.data.array.length / 3;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcount = position.count;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: drawRange.start,\r\n\t\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\t\r\n\t\t\t\t\trenderer.renderInstances( geometry );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\t\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\t\r\n\t\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\t\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\t\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\t\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\t\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\t\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\t\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\t\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\t\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\t\r\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\t\r\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Sorting\r\n\t\r\n\t\tfunction numericalSort ( a, b ) {\r\n\t\r\n\t\t\treturn b[ 0 ] - a[ 0 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.material.id !== b.material.id ) {\r\n\t\r\n\t\t\t\treturn a.material.id - b.material.id;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn a.z - b.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction reversePainterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Rendering\r\n\t\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\t\r\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\t// reset caching for this frame\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\t\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\t\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\tlights.length = 0;\r\n\t\r\n\t\t\topaqueObjectsLastIndex = -1;\r\n\t\t\ttransparentObjectsLastIndex = -1;\r\n\t\r\n\t\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\t\tsprites.length = 0;\r\n\t\t\tlensFlares.length = 0;\r\n\t\r\n\t\t\tprojectObject( scene );\r\n\t\r\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\t\r\n\t\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\t\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tshadowMap.render( scene, camera );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t_infoRender.calls = 0;\r\n\t\t\t_infoRender.vertices = 0;\r\n\t\t\t_infoRender.faces = 0;\r\n\t\t\t_infoRender.points = 0;\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\r\n\t\t\tif ( this.autoClear || forceClear ) {\r\n\t\r\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\t\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\t\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// custom render plugins (post pass)\r\n\t\r\n\t\t\tspritePlugin.render( scene, camera );\r\n\t\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\t\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\t\r\n\t\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\t\r\n\t\t\tstate.setDepthTest( true );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\t\tstate.setColorWrite( true );\r\n\t\r\n\t\t\t// _gl.finish();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction pushImmediateRenderItem( object ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( object.material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentImmediateObjects;\r\n\t\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing position or grow the array\r\n\t\r\n\t\t\tif ( index < array.length ) {\r\n\t\r\n\t\t\t\tarray[ index ] = object;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentObjects;\r\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueObjects;\r\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing render item or grow the array\r\n\t\r\n\t\t\tvar renderItem = array[ index ];\r\n\t\r\n\t\t\tif ( renderItem !== undefined ) {\r\n\t\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.z = _vector3.z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tz: _vector3.z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( renderItem );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\t\r\n\t\t\t\tlights.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\t\r\n\t\t\t\tsprites.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\t\r\n\t\t\t\tlensFlares.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\tpushImmediateRenderItem( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tobject.skeleton.update();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\r\n\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\t\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tvar material = overrideMaterial;\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar object = renderList[ i ];\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\t\r\n\t\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\t\r\n\t\t\t\tobject.render( function ( object ) {\r\n\t\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction initMaterial( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\t\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\t} else if ( program.code !== code ) {\r\n\t\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\t\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( programChange ) {\r\n\t\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\t\r\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\t\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( material.morphTargets ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.morphNormals ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterialProperties.uniformsList = [];\r\n\t\r\n\t\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\t\r\n\t\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\t\r\n\t\t\t\tvar location = uniformLocations[ u ];\r\n\t\r\n\t\t\t\tif ( location ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterial( material ) {\r\n\t\r\n\t\t\tsetMaterialFaces( material );\r\n\t\r\n\t\t\tif ( material.transparent === true ) {\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\t\tstate.setColorWrite( material.colorWrite );\r\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterialFaces( material ) {\r\n\t\r\n\t\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\t\r\n\t\t\t_usedTextureUnits = 0;\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\t\r\n\t\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\t\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\t\r\n\t\t\tif ( program.id !== _currentProgram ) {\r\n\t\r\n\t\t\t\t_gl.useProgram( program.program );\r\n\t\t\t\t_currentProgram = program.id;\r\n\t\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\t\r\n\t\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\r\n\t\t\t\trefreshMaterial = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\t\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material.envMap ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material.skinning ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\t\r\n\t\t\tif ( material.skinning ) {\r\n\t\r\n\t\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshMaterial ) {\r\n\t\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\t\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material.lights ) {\r\n\t\r\n\t\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\t\r\n\t\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( refreshLights ) {\r\n\t\r\n\t\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh single material specific uniforms\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load common uniforms\r\n\t\r\n\t\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsMatrices( p_uniforms, object );\r\n\t\r\n\t\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\t\r\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\r\n\t\t\tif ( material.emissive ) {\r\n\t\r\n\t\t\t\tuniforms.emissive.value = material.emissive;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\r\n\t\t\tif ( material.aoMap ) {\r\n\t\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\t\r\n\t\t\tvar uvScaleMap;\r\n\t\r\n\t\t\tif ( material.map ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\r\n\t\t\t} else if ( material.specularMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\r\n\t\t\t} else if ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\t\r\n\t\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\t\tvar repeat = uvScaleMap.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\t\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.psColor.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size;\r\n\t\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\r\n\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\tvar offset = material.map.offset;\r\n\t\t\t\tvar repeat = material.map.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\t\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\t\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = material.shininess;\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\t\r\n\t\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\t\r\n\t\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\t\r\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\t\r\n\t\t\tif ( uniforms.shadowMatrix ) {\r\n\t\r\n\t\t\t\tvar j = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar light = lights[ i ];\r\n\t\r\n\t\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\t\r\n\t\t\t\t\t\tj ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (load to GPU)\r\n\t\r\n\t\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\t\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\t\r\n\t\t\tif ( uniforms.normalMatrix ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureUnit() {\r\n\t\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\t\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_usedTextureUnits += 1;\r\n\t\r\n\t\t\treturn textureUnit;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniformsGeneric ( uniforms ) {\r\n\t\r\n\t\t\tvar texture, textureUnit;\r\n\t\r\n\t\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\r\n\t\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\t\r\n\t\t\t\tvar type = uniform.type;\r\n\t\t\t\tvar value = uniform.value;\r\n\t\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\t\r\n\t\t\t\tswitch ( type ) {\r\n\t\r\n\t\t\t\t\tcase '1i':\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1f':\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2f':\r\n\t\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3f':\r\n\t\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4f':\r\n\t\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1iv':\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3iv':\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1fv':\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2fv':\r\n\t\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3fv':\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4fv':\r\n\t\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\tcase 'i':\r\n\t\r\n\t\t\t\t\t\t// single integer\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'f':\r\n\t\r\n\t\t\t\t\t\t// single float\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'c':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector2\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 't':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\t\t\ttexture = value;\r\n\t\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\t\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'tv':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Texture (2d)\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = [];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\t\r\n\t\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\t\r\n\t\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupLights ( lights, camera ) {\r\n\t\r\n\t\t\tvar l, ll, light,\r\n\t\t\tr = 0, g = 0, b = 0,\r\n\t\t\tcolor, skyColor, groundColor,\r\n\t\t\tintensity,\r\n\t\t\tdistance,\r\n\t\r\n\t\t\tzlights = _lights,\r\n\t\r\n\t\t\tviewMatrix = camera.matrixWorldInverse,\r\n\t\r\n\t\t\tdirColors = zlights.directional.colors,\r\n\t\t\tdirPositions = zlights.directional.positions,\r\n\t\r\n\t\t\tpointColors = zlights.point.colors,\r\n\t\t\tpointPositions = zlights.point.positions,\r\n\t\t\tpointDistances = zlights.point.distances,\r\n\t\t\tpointDecays = zlights.point.decays,\r\n\t\r\n\t\t\tspotColors = zlights.spot.colors,\r\n\t\t\tspotPositions = zlights.spot.positions,\r\n\t\t\tspotDistances = zlights.spot.distances,\r\n\t\t\tspotDirections = zlights.spot.directions,\r\n\t\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\t\tspotExponents = zlights.spot.exponents,\r\n\t\t\tspotDecays = zlights.spot.decays,\r\n\t\r\n\t\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\t\themiPositions = zlights.hemi.positions,\r\n\t\r\n\t\t\tdirLength = 0,\r\n\t\t\tpointLength = 0,\r\n\t\t\tspotLength = 0,\r\n\t\t\themiLength = 0,\r\n\t\r\n\t\t\tdirCount = 0,\r\n\t\t\tpointCount = 0,\r\n\t\t\tspotCount = 0,\r\n\t\t\themiCount = 0,\r\n\t\r\n\t\t\tdirOffset = 0,\r\n\t\t\tpointOffset = 0,\r\n\t\t\tspotOffset = 0,\r\n\t\t\themiOffset = 0;\r\n\t\r\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tlight = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow ) continue;\r\n\t\r\n\t\t\t\tcolor = light.color;\r\n\t\t\t\tintensity = light.intensity;\r\n\t\t\t\tdistance = light.distance;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tr += color.r;\r\n\t\t\t\t\tg += color.g;\r\n\t\t\t\t\tb += color.b;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\tdirCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tdirOffset = dirLength * 3;\r\n\t\r\n\t\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\t\r\n\t\t\t\t\tdirLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tpointCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tpointOffset = pointLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tpointLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\tspotCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tspotOffset = spotLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tspotLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\t\r\n\t\t\t\t\themiCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\themiOffset = hemiLength * 3;\r\n\t\r\n\t\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tskyColor = light.color;\r\n\t\t\t\t\tgroundColor = light.groundColor;\r\n\t\r\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\t\r\n\t\t\t\t\themiLength += 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// null eventual remains from removed lights\r\n\t\t\t// (this is to avoid if in shader)\r\n\t\r\n\t\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\t\r\n\t\t\tzlights.directional.length = dirLength;\r\n\t\t\tzlights.point.length = pointLength;\r\n\t\t\tzlights.spot.length = spotLength;\r\n\t\t\tzlights.hemi.length = hemiLength;\r\n\t\r\n\t\t\tzlights.ambient[ 0 ] = r;\r\n\t\t\tzlights.ambient[ 1 ] = g;\r\n\t\t\tzlights.ambient[ 2 ] = b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// GL state setting\r\n\t\r\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\t\r\n\t\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\t\r\n\t\t\t\tstate.disable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Textures\r\n\t\r\n\t\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\r\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\t\r\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\tif ( extension ) {\r\n\t\r\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\t\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\t\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\t\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\t\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\r\n\t\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\t\r\n\t\t\tvar image = texture.image,\r\n\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\t\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setTexture = function ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\tvar image = texture.image;\r\n\t\r\n\t\t\t\tif ( image === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( image.complete === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction clampToMaxSize ( image, maxSize ) {\r\n\t\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\t\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\t\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTexture ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\t\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\t\r\n\t\t\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\r\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\t\r\n\t\t\t\t\tvar cubeImage = [];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Render targets\r\n\t\r\n\t\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\t\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t*/\r\n\t\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\t\r\n\t\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t// Setup texture, create render and frame buffers\r\n\t\r\n\t\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Release everything\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer, width, height, vx, vy;\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\twidth = renderTarget.width;\r\n\t\t\t\theight = renderTarget.height;\r\n\t\r\n\t\t\t\tvx = 0;\r\n\t\t\t\tvy = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tframebuffer = null;\r\n\t\r\n\t\t\t\twidth = _viewportWidth;\r\n\t\t\t\theight = _viewportHeight;\r\n\t\r\n\t\t\t\tvx = _viewportX;\r\n\t\t\t\tvy = _viewportY;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_gl.viewport( vx, vy, width, height );\r\n\t\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_currentWidth = width;\r\n\t\t\t_currentHeight = height;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\t\r\n\t\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\t\r\n\t\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar restore = false;\r\n\t\r\n\t\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\t\r\n\t\t\t\t\trestore = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\t\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( restore ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\t\r\n\t\tfunction filterFallback ( f ) {\r\n\t\r\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\t\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn _gl.LINEAR;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Map three.js constants to WebGL constants\r\n\t\r\n\t\tfunction paramThreeToGL ( p ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\t\r\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\t\r\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// DEPRECATED\r\n\t\r\n\t\tthis.supportsFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsHalfFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsStandardDerivatives = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTextureS3TC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTexturePVRTC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsBlendMinMax = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsVertexTextures = function () {\r\n\t\r\n\t\t\treturn capabilities.vertexTextures;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsInstancedArrays = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.initMaterial = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPrePlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPostPlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.updateShadowMap = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tshadowMapEnabled: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.enabled;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\t\tshadowMap.enabled = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapType: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.type;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\t\tshadowMap.type = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapCullFace: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.cullFace;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\t\tshadowMap.cullFace = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapDebug: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.debug;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\t\tshadowMap.debug = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderTarget.js\r\n\t\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\toptions = options || {};\r\n\t\r\n\t\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\t\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\r\n\t\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTarget.prototype = {\r\n\t\r\n\t\tconstructor: THREE.WebGLRenderTarget,\r\n\t\r\n\t\tsetSize: function ( width, height ) {\r\n\t\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\t\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\r\n\t\t\t\tthis.dispose();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\r\n\t\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\t\r\n\t// File:src/renderers/WebGLRenderTargetCube.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\t\r\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\t\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\t\r\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawArrays( mode, start, count );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar type, size;\r\n\t\r\n\t\tfunction setIndex( index ) {\r\n\t\r\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\tsize = 4;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\tsize = 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawElements( mode, count, type, start * size );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\r\n\t\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLExtensions.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLExtensions = function ( gl ) {\r\n\t\r\n\t\tvar extensions = {};\r\n\t\r\n\t\tthis.get = function ( name ) {\r\n\t\r\n\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn extensions[ name ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension( name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textensions[ name ] = extension;\r\n\t\r\n\t\t\treturn extension;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLCapabilities.js\r\n\t\r\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\t\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\t\r\n\t\t\tif ( precision === 'highp' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'highp';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprecision = 'mediump';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'mediump';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'lowp';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getMaxPrecision = getMaxPrecision;\r\n\t\r\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\t\r\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\t\r\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\t\r\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\t\r\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\t\r\n\t\tif ( _maxPrecision !== this.precision ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\t\tthis.precision = _maxPrecision;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLGeometries.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = {};\r\n\t\r\n\t\tfunction get( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn geometries[ geometry.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tvar buffergeometry;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tbuffergeometry = geometry;\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\t\r\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\t\r\n\t\t\tinfo.memory.geometries ++;\r\n\t\r\n\t\t\treturn buffergeometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onGeometryDispose( event ) {\r\n\t\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\t\r\n\t\t\tdeleteAttributes( buffergeometry.attributes );\r\n\t\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\t\r\n\t\t\tinfo.memory.geometries --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttribute( attribute ) {\r\n\t\r\n\t\t\tvar buffer = getAttributeBuffer( attribute );\r\n\t\r\n\t\t\tif ( buffer !== undefined ) {\r\n\t\r\n\t\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\t\tremoveAttributeBuffer( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttributes( attributes ) {\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( attributes[ name ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction removeAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tproperties.delete( attribute.data );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tproperties.delete( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.get = get;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLObjects.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction update( object ) {\r\n\t\r\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\t\r\n\t\t\tvar geometry = geometries.get( object );\r\n\t\r\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tgeometry.updateFromObject( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\t\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateAttribute( attribute, bufferType ) {\r\n\t\r\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\t\r\n\t\t\tvar attributeProperties = properties.get( data );\r\n\t\r\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\t\r\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\t\r\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\r\n\t\t\tgl.bufferData( bufferType, data.array, usage );\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\t\r\n\t\t\t\t// Not using update ranges\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\t\r\n\t\t\t} else if ( data.updateRange.count === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\t\r\n\t\t\t\tdata.updateRange.count = 0; // reset range\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\treturn property.wireframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar indices = [];\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar position = attributes.position;\r\n\t\r\n\t\t\t// console.time( 'wireframe' );\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar edges = {};\r\n\t\t\t\tvar array = index.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\t\r\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar array = attributes.position.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\t\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\t\r\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\t\r\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\tproperty.wireframe = attribute;\r\n\t\r\n\t\t\treturn attribute;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkEdge( edges, a, b ) {\r\n\t\r\n\t\t\tif ( a > b ) {\r\n\t\r\n\t\t\t\tvar tmp = a;\r\n\t\t\t\ta = b;\r\n\t\t\t\tb = tmp;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar list = edges[ a ];\r\n\t\r\n\t\t\tif ( list === undefined ) {\r\n\t\r\n\t\t\t\tedges[ a ] = [ b ];\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\t\r\n\t\t\t\tlist.push( b );\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\t\r\n\t\tthis.update = update;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProgram.js\r\n\t\r\n\tTHREE.WebGLProgram = ( function () {\r\n\t\r\n\t\tvar programIdCount = 0;\r\n\t\r\n\t\tfunction generateDefines( defines ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tfor ( var name in defines ) {\r\n\t\r\n\t\t\t\tvar value = defines[ name ];\r\n\t\r\n\t\t\t\tif ( value === false ) continue;\r\n\t\r\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar uniforms = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\t\r\n\t\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\t\r\n\t\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuniforms[ name ] = location;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar attributes = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\t\r\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn attributes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction filterEmptyLine( string ) {\r\n\t\r\n\t\t\treturn string !== '';\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\t\r\n\t\t\tvar gl = renderer.context;\r\n\t\r\n\t\t\tvar defines = material.defines;\r\n\t\r\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\t\r\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\t\r\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\r\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\r\n\t\t\tif ( parameters.envMap ) {\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.combine ) {\r\n\t\r\n\t\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\t\r\n\t\t\t// console.log( 'building new program ' );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar customDefines = generateDefines( defines );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar prefixVertex, prefixFragment;\r\n\t\r\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\t\r\n\t\t\t\tprefixVertex = '';\r\n\t\t\t\tprefixFragment = '';\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tprefixVertex = [\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\t\r\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\r\n\t\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_COLOR',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 color;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\t\r\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\t\r\n\t\t\t\t\t'\t#else',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\t\r\n\t\t\t\t\t'\t#endif',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_SKINNING',\r\n\t\r\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t\tprefixFragment = [\r\n\t\r\n\t\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\t\r\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\t\r\n\t\t\tgl.attachShader( program, glVertexShader );\r\n\t\t\tgl.attachShader( program, glFragmentShader );\r\n\t\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\r\n\t\t\tif ( material.index0AttributeName !== undefined ) {\r\n\t\r\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\t\r\n\t\t\t} else if ( parameters.morphTargets === true ) {\r\n\t\r\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\t\r\n\t\t\tvar runnable = true;\r\n\t\t\tvar haveDiagnostics = true;\r\n\t\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\t\r\n\t\t\t\trunnable = false;\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\t\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\t\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\t\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( haveDiagnostics ) {\r\n\t\r\n\t\t\t\tthis.diagnostics = {\r\n\t\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tmaterial: material,\r\n\t\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\r\n\t\t\t\t\tvertexShader: {\r\n\t\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tfragmentShader: {\r\n\t\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clean up\r\n\t\r\n\t\t\tgl.deleteShader( glVertexShader );\r\n\t\t\tgl.deleteShader( glFragmentShader );\r\n\t\r\n\t\t\t// set up caching for uniform locations\r\n\t\r\n\t\t\tvar cachedUniforms;\r\n\t\r\n\t\t\tthis.getUniforms = function() {\r\n\t\r\n\t\t\t\tif ( cachedUniforms === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedUniforms;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// set up caching for attribute locations\r\n\t\r\n\t\t\tvar cachedAttributes;\r\n\t\r\n\t\t\tthis.getAttributes = function() {\r\n\t\r\n\t\t\t\tif ( cachedAttributes === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedAttributes;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// free resource\r\n\t\r\n\t\t\tthis.destroy = function() {\r\n\t\r\n\t\t\t\tgl.deleteProgram( program );\r\n\t\t\t\tthis.program = undefined;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// DEPRECATED\r\n\t\r\n\t\t\tObject.defineProperties( this, {\r\n\t\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\t\treturn this.getUniforms();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\t\treturn this.getAttributes();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tthis.id = programIdCount ++;\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.usedTimes = 1;\r\n\t\t\tthis.program = program;\r\n\t\t\tthis.vertexShader = glVertexShader;\r\n\t\t\tthis.fragmentShader = glFragmentShader;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLPrograms.js\r\n\t\r\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\t\r\n\t\tvar programs = [];\r\n\t\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points'\r\n\t\t};\r\n\t\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\t\"flipSided\"\r\n\t\t];\r\n\t\r\n\t\r\n\t\tfunction allocateBones ( object ) {\r\n\t\r\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\treturn 1024;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\t\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\t\r\n\t\t\t\tvar maxBones = nVertexMatrices;\r\n\t\r\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\t\r\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxBones;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateLights( lights ) {\r\n\t\r\n\t\t\tvar dirLights = 0;\r\n\t\t\tvar pointLights = 0;\r\n\t\t\tvar spotLights = 0;\r\n\t\t\tvar hemiLights = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateShadows( lights ) {\r\n\t\r\n\t\t\tvar maxShadows = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn maxShadows;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\t\r\n\t\t\tvar maxLightCount = allocateLights( lights );\r\n\t\t\tvar maxShadows = allocateShadows( lights );\r\n\t\t\tvar maxBones = allocateBones( object );\r\n\t\t\tvar precision = renderer.getPrecision();\r\n\t\r\n\t\t\tif ( material.precision !== null ) {\r\n\t\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\t\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar parameters = {\r\n\t\r\n\t\t\t\tshaderID: shaderID,\r\n\t\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\t\r\n\t\t\t\tcombine: material.combine,\r\n\t\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\r\n\t\t\t\tfog: fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\t\r\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\t\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\t\r\n\t\t\t\tskinning: material.skinning,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\t\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\t\r\n\t\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\t\r\n\t\t\t\tmaxShadows: maxShadows,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\t\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tmetal: material.metal,\r\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\t\tflipSided: material.side === THREE.BackSide\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn parameters;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\tchunks.push( parameters.shaderID );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\t\tchunks.push( material.vertexShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\t\r\n\t\t\t\t\tchunks.push( name );\r\n\t\t\t\t\tchunks.push( material.defines[ name ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\t\tchunks.push( parameterName );\r\n\t\t\t\tchunks.push( parameters[ parameterName ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\t\r\n\t\t\tvar program;\r\n\t\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\t\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\t\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\t\tprograms.push( program );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.releaseProgram = function( program ) {\r\n\t\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\t\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\t\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProperties.js\r\n\t\r\n\t/**\r\n\t* @author fordacious / fordacious.github.io\r\n\t*/\r\n\t\r\n\tTHREE.WebGLProperties = function () {\r\n\t\r\n\t\tvar properties = {};\r\n\t\r\n\t\tthis.get = function ( object ) {\r\n\t\r\n\t\t\tvar uuid = object.uuid;\r\n\t\t\tvar map = properties[ uuid ];\r\n\t\r\n\t\t\tif ( map === undefined ) {\r\n\t\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties[ uuid ] = map;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn map;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.delete = function ( object ) {\r\n\t\r\n\t\t\tdelete properties[ object.uuid ];\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function () {\r\n\t\r\n\t\t\tproperties = {};\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShader.js\r\n\t\r\n\tTHREE.WebGLShader = ( function () {\r\n\t\r\n\t\tvar addLineNumbers = function ( string ) {\r\n\t\r\n\t\t\tvar lines = string.split( '\\n' );\r\n\t\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\t\r\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn lines.join( '\\n' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function WebGLShader( gl, type, string ) {\r\n\t\r\n\t\t\tvar shader = gl.createShader( type );\r\n\t\r\n\t\t\tgl.shaderSource( shader, string );\r\n\t\t\tgl.compileShader( shader );\r\n\t\r\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// --enable-privileged-webgl-extension\r\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\t\r\n\t\t\treturn shader;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShadowMap.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\t\r\n\t\tvar _gl = _renderer.context,\r\n\t\t_state = _renderer.state,\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_min = new THREE.Vector3(),\r\n\t\t_max = new THREE.Vector3(),\r\n\t\r\n\t\t_matrixPosition = new THREE.Vector3(),\r\n\t\r\n\t\t_renderList = [];\r\n\t\r\n\t\t// init\r\n\t\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\t\r\n\t\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader\r\n\t\t } );\r\n\t\r\n\t\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\t_depthMaterial._shadowPass = true;\r\n\t\t_depthMaterialMorph._shadowPass = true;\r\n\t\t_depthMaterialSkin._shadowPass = true;\r\n\t\t_depthMaterialMorphSkin._shadowPass = true;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.enabled = false;\r\n\t\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tthis.type = THREE.PCFShadowMap;\r\n\t\tthis.cullFace = THREE.CullFaceFront;\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\t\r\n\t\t\t// set GL state for depth map\r\n\t\r\n\t\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\r\n\t\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_state.setDepthTest( true );\r\n\t\r\n\t\t\t// render depth map\r\n\t\r\n\t\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar light = _lights[ i ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( ! light.shadowMap ) {\r\n\t\r\n\t\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\t\r\n\t\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\t\r\n\t\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! light.shadowCamera ) {\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tscene.add( light.shadowCamera );\r\n\t\r\n\t\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\t\r\n\t\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\t\tscene.add( light.cameraHelper );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\t\tvar shadowCamera = light.shadowCamera;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\t\r\n\t\t\t\t// compute shadow matrix\r\n\t\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\t\r\n\t\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\t\t// render shadow map\r\n\t\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\t\r\n\t\t\t\t// set object matrices & frustum culling\r\n\t\r\n\t\t\t\t_renderList.length = 0;\r\n\t\r\n\t\t\t\tprojectObject( scene, shadowCamera );\r\n\t\r\n\t\r\n\t\t\t\t// render regular objects\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore GL state\r\n\t\r\n\t\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\r\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t\t_state.enable( _gl.BLEND );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_renderer.resetGLState();\r\n\t\r\n\t\t\tscope.needsUpdate = false;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction getDepthMaterial( object, material ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\t\r\n\t\t\tvar depthMaterial;\r\n\t\r\n\t\t\tif ( object.customDepthMaterial ) {\r\n\t\r\n\t\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\t\r\n\t\t\t} else if ( useSkinning ) {\r\n\t\r\n\t\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\t\r\n\t\t\t} else if ( useMorphing ) {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdepthMaterial.visible = material.visible;\r\n\t\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\r\n\t\t\treturn depthMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t\t_renderList.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLState.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\t\r\n\t\tvar _this = this;\r\n\t\r\n\t\tvar newAttributes = new Uint8Array( 16 );\r\n\t\tvar enabledAttributes = new Uint8Array( 16 );\r\n\t\r\n\t\tvar capabilities = {};\r\n\t\r\n\t\tvar compressedTextureFormats = null;\r\n\t\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\r\n\t\tvar currentDepthFunc = null;\r\n\t\tvar currentDepthWrite = null;\r\n\t\r\n\t\tvar currentColorWrite = null;\r\n\t\r\n\t\tvar currentFlipSided = null;\r\n\t\r\n\t\tvar currentLineWidth = null;\r\n\t\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\t\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\r\n\t\tvar currentTextureSlot = undefined;\r\n\t\tvar currentBoundTextures = {};\r\n\t\r\n\t\tthis.init = function () {\r\n\t\r\n\t\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\t\tgl.clearDepth( 1 );\r\n\t\t\tgl.clearStencil( 0 );\r\n\t\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\tgl.frontFace( gl.CCW );\r\n\t\t\tgl.cullFace( gl.BACK );\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\tthis.enable( gl.BLEND );\r\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.initAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttribute = function ( attribute ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disableUnusedAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== true ) {\r\n\t\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tcapabilities[ id ] = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== false ) {\r\n\t\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tcapabilities[ id ] = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getCompressedTextureFormats = function () {\r\n\t\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\t\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\t\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\t\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn compressedTextureFormats;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\t\r\n\t\t\tif ( blending !== currentBlending ) {\r\n\t\r\n\t\t\t\tif ( blending === THREE.NoBlending ) {\r\n\t\r\n\t\t\t\t\tthis.disable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\t\r\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcurrentBlendEquation = null;\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthFunc = function ( depthFunc ) {\r\n\t\r\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\t\r\n\t\t\t\tif ( depthFunc ) {\r\n\t\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.NeverDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.EqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthTest = function ( depthTest ) {\r\n\t\r\n\t\t\tif ( depthTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthWrite = function ( depthWrite ) {\r\n\t\r\n\t\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\t\r\n\t\t\t\tgl.depthMask( depthWrite );\r\n\t\t\t\tcurrentDepthWrite = depthWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setColorWrite = function ( colorWrite ) {\r\n\t\r\n\t\t\tif ( currentColorWrite !== colorWrite ) {\r\n\t\r\n\t\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\t\tcurrentColorWrite = colorWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setFlipSided = function ( flipSided ) {\r\n\t\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\t\r\n\t\t\t\tif ( flipSided ) {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setLineWidth = function ( width ) {\r\n\t\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\t\r\n\t\t\t\tgl.lineWidth( width );\r\n\t\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\t\r\n\t\t\tif ( polygonOffset ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\t\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\t\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( scissorTest ) {\r\n\t\r\n\t\t\tif ( scissorTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// texture\r\n\t\r\n\t\tthis.activeTexture = function ( webglSlot ) {\r\n\t\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\t\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\t\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\t\r\n\t\t\tif ( currentTextureSlot === undefined ) {\r\n\t\r\n\t\t\t\t_this.activeTexture();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\t\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\t\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\t\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\t\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.compressedTexImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.texImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.reset = function () {\r\n\t\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcapabilities = {};\r\n\t\r\n\t\t\tcompressedTextureFormats = null;\r\n\t\r\n\t\t\tcurrentBlending = null;\r\n\t\r\n\t\t\tcurrentDepthWrite = null;\r\n\t\t\tcurrentColorWrite = null;\r\n\t\r\n\t\t\tcurrentFlipSided = null;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\tvar hasVertexTexture;\r\n\t\r\n\t\tvar tempTexture, occlusionTexture;\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t\t 1, - 1,  1, 0,\r\n\t\t\t\t 1,  1,  1, 1,\r\n\t\t\t\t- 1,  1,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\t// buffers\r\n\t\r\n\t\t\tvertexBuffer     = gl.createBuffer();\r\n\t\t\telementBuffer    = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\t// textures\r\n\t\r\n\t\t\ttempTexture      = gl.createTexture();\r\n\t\t\tocclusionTexture = gl.createTexture();\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\t\r\n\t\t\tvar shader;\r\n\t\r\n\t\t\tif ( hasVertexTexture ) {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"precision mediump float;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tprogram = createProgram( shader );\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/*\r\n\t\t * Render lens flares\r\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t\t *         reads these back and calculates occlusion.\r\n\t\t */\r\n\t\r\n\t\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\t\r\n\t\t\tif ( flares.length === 0 ) return;\r\n\t\r\n\t\t\tvar tempPosition = new THREE.Vector3();\r\n\t\r\n\t\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\t\r\n\t\t\tvar size = 16 / viewportHeight,\r\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\t\r\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.vertex );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t\t// setup gl and common used attribs/uniforms\r\n\t\r\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 1 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tgl.depthMask( false );\r\n\t\r\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tsize = 16 / viewportHeight;\r\n\t\t\t\tscale.set( size * invAspect, size );\r\n\t\r\n\t\t\t\t// calc object screen position\r\n\t\r\n\t\t\t\tvar flare = flares[ i ];\r\n\t\r\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\t\r\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\t\r\n\t\t\t\t// setup arrays for gl programs\r\n\t\r\n\t\t\t\tscreenPosition.copy( tempPosition );\r\n\t\r\n\t\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\t\r\n\t\t\t\t// screen cull\r\n\t\r\n\t\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\t\r\n\t\t\t\t\t// save current RGB to temp texture\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// render pink quad\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\r\n\t\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// copy result to occlusionMap\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// restore graphics\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// update object positions\r\n\t\r\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\t\r\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\t\r\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tflare.updateLensFlares();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// render flares\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\t\r\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\t\r\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\t\r\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\t\r\n\t\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\t\tscale.y = size;\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\t\r\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\t\r\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthMask( true );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram ( shader ) {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\r\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\t\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\r\n\t\tvar texture;\r\n\t\r\n\t\t// decompose matrixWorld\r\n\t\r\n\t\tvar spritePosition = new THREE.Vector3();\r\n\t\tvar spriteRotation = new THREE.Quaternion();\r\n\t\tvar spriteScale = new THREE.Vector3();\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\tvertexBuffer  = gl.createBuffer();\r\n\t\t\telementBuffer = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tprogram = createProgram();\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\t\r\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\t\r\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\t\r\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\t\r\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\t\r\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t\t};\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = 8;\r\n\t\t\tcanvas.height = 8;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.fillStyle = 'white';\r\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\t\r\n\t\t\ttexture = new THREE.Texture( canvas );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( sprites.length === 0 ) return;\r\n\t\r\n\t\t\t// setup gl\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 0 );\r\n\t\r\n\t\t\tvar oldFogType = 0;\r\n\t\t\tvar sceneFogType = 0;\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\tif ( fog ) {\r\n\t\r\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\t\r\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\t\toldFogType = 1;\r\n\t\t\t\t\tsceneFogType = 1;\r\n\t\r\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\t\toldFogType = 2;\r\n\t\t\t\t\tsceneFogType = 2;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\t\toldFogType = 0;\r\n\t\t\t\tsceneFogType = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// update positions and sort\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\r\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsprites.sort( painterSortStable );\r\n\t\r\n\t\t\t// render all sprites\r\n\t\r\n\t\t\tvar scale = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\t\t\tvar material = sprite.material;\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\t\r\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\t\r\n\t\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\t\tscale[ 1 ] = spriteScale.y;\r\n\t\r\n\t\t\t\tvar fogType = 0;\r\n\t\r\n\t\t\t\tif ( scene.fog && material.fog ) {\r\n\t\r\n\t\t\t\t\tfogType = sceneFogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( oldFogType !== fogType ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\t\toldFogType = fogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\r\n\t\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( texture, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram () {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\r\n\t\t\tgl.shaderSource( vertexShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform float rotation;',\r\n\t\t\t\t'uniform vec2 scale;',\r\n\t\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t\t'uniform vec2 uvScale;',\r\n\t\r\n\t\t\t\t'attribute vec2 position;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\t\r\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\t\r\n\t\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\t\r\n\t\t\t\t\t'vec4 finalPosition;',\r\n\t\r\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\t\r\n\t\t\t\t\t'gl_Position = finalPosition;',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform vec3 color;',\r\n\t\t\t\t'uniform sampler2D map;',\r\n\t\t\t\t'uniform float opacity;',\r\n\t\r\n\t\t\t\t'uniform int fogType;',\r\n\t\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t\t'uniform float fogDensity;',\r\n\t\t\t\t'uniform float fogNear;',\r\n\t\t\t\t'uniform float fogFar;',\r\n\t\t\t\t'uniform float alphaTest;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\t\r\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\t\r\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\t\r\n\t\t\t\t\t'if ( fogType > 0 ) {',\r\n\t\r\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t\t'float fogFactor = 0.0;',\r\n\t\r\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\t\r\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\t\r\n\t\t\t\t\t\t'} else {',\r\n\t\r\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\t\r\n\t\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\t\r\n\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn b.id - a.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/GeometryUtils.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GeometryUtils = {\r\n\t\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\t\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( geometry ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ImageUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n\t */\r\n\t\r\n\tTHREE.ImageUtils = {\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\t\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t}, undefined, function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\ttexture.sourceFile = url;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\t\r\n\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\tloader.load( array[ i ], function ( image ) {\r\n\t\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\t\r\n\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, undefined, onError );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTexture: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTextureCube: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMap: function ( image, depth ) {\r\n\t\r\n\t\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\t\r\n\t\t\tvar cross = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar subtract = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar normalize = function ( a ) {\r\n\t\r\n\t\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tdepth = depth | 1;\r\n\t\r\n\t\t\tvar width = image.width;\r\n\t\t\tvar height = image.height;\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0 );\r\n\t\r\n\t\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\t\tvar imageData = context.createImageData( width, height );\r\n\t\t\tvar output = imageData.data;\r\n\t\r\n\t\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\t\r\n\t\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\t\r\n\t\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\t\r\n\t\t\t\t\tvar points = [];\r\n\t\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\r\n\t\t\t\t\tvar normals = [];\r\n\t\t\t\t\tvar num_points = points.length;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\t\r\n\t\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\t\r\n\t\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 3 ] = 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\t\r\n\t\t\treturn canvas;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateDataTexture: function ( width, height, color ) {\r\n\t\r\n\t\t\tvar size = width * height;\r\n\t\t\tvar data = new Uint8Array( 3 * size );\r\n\t\r\n\t\t\tvar r = Math.floor( color.r * 255 );\r\n\t\t\tvar g = Math.floor( color.g * 255 );\r\n\t\t\tvar b = Math.floor( color.b * 255 );\r\n\t\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\t\r\n\t\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\t\tdata[ i * 3 + 2 ] = b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/SceneUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SceneUtils = {\r\n\t\r\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\t\r\n\t\t\tvar group = new THREE.Group();\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn group;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdetach: function ( child, parent, scene ) {\r\n\t\r\n\t\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\t\tparent.remove( child );\r\n\t\t\tscene.add( child );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tattach: function ( child, scene, parent ) {\r\n\t\r\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\t\tchild.applyMatrix( matrixWorldInverse );\r\n\t\r\n\t\t\tscene.remove( child );\r\n\t\t\tparent.add( child );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/FontUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For Text operations in three.js (See TextGeometry)\r\n\t *\r\n\t * It uses techniques used in:\r\n\t *\r\n\t *\tTriangulation ported from AS3\r\n\t *\t\tSimple Polygon Triangulation\r\n\t *\t\thttp://actionsnippet.com/?p=1462\r\n\t *\r\n\t * \tA Method to triangulate shapes with holes\r\n\t *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.FontUtils = {\r\n\t\r\n\t\tfaces: {},\r\n\t\r\n\t\t// Just for now. face[weight][style]\r\n\t\r\n\t\tface: 'helvetiker',\r\n\t\tweight: 'normal',\r\n\t\tstyle: 'normal',\r\n\t\tsize: 150,\r\n\t\tdivisions: 10,\r\n\t\r\n\t\tgetFace: function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\t\r\n\t\t\t} catch ( e ) {\r\n\t\r\n\t\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadFace: function ( data ) {\r\n\t\r\n\t\t\tvar family = data.familyName.toLowerCase();\r\n\t\r\n\t\t\tvar ThreeFont = this;\r\n\t\r\n\t\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdrawText: function ( text ) {\r\n\t\r\n\t\t\t// RenderText\r\n\t\r\n\t\t\tvar i,\r\n\t\t\t\tface = this.getFace(),\r\n\t\t\t\tscale = this.size / face.resolution,\r\n\t\t\t\toffset = 0,\r\n\t\t\t\tchars = String( text ).split( '' ),\r\n\t\t\t\tlength = chars.length;\r\n\t\r\n\t\t\tvar fontPaths = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tvar path = new THREE.Path();\r\n\t\r\n\t\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\t\toffset += ret.offset;\r\n\t\r\n\t\t\t\tfontPaths.push( ret.path );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// get the width\r\n\t\r\n\t\t\tvar width = offset / 2;\r\n\t\t\t//\r\n\t\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t\t//\r\n\t\t\t// \tallPts[ p ].x -= width;\r\n\t\t\t//\r\n\t\t\t// }\r\n\t\r\n\t\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t\t//extract.contour = allPts;\r\n\t\r\n\t\t\t//extract.paths = fontPaths;\r\n\t\t\t//extract.offset = width;\r\n\t\r\n\t\t\treturn { paths: fontPaths, offset: width };\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\t\r\n\t\t\tvar pts = [];\r\n\t\r\n\t\t\tvar i, i2, divisions,\r\n\t\t\t\toutline, action, length,\r\n\t\t\t\tscaleX, scaleY,\r\n\t\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\t\tlaste,\r\n\t\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\t\r\n\t\t\tif ( ! glyph ) return;\r\n\t\r\n\t\t\tif ( glyph.o ) {\r\n\t\r\n\t\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\t\tlength = outline.length;\r\n\t\r\n\t\t\t\tscaleX = scale;\r\n\t\t\t\tscaleY = scale;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < length; ) {\r\n\t\r\n\t\t\t\t\taction = outline[ i ++ ];\r\n\t\r\n\t\t\t\t\t//console.log( action );\r\n\t\r\n\t\t\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\t\t\tcase 'm':\r\n\t\r\n\t\t\t\t\t\t// Move To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'l':\r\n\t\r\n\t\t\t\t\t\t// Line To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'q':\r\n\t\r\n\t\t\t\t\t\t// QuadraticCurveTo\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'b':\r\n\t\r\n\t\t\t\t\t\t// Cubic Bezier Curve\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\t\r\n\t\t// Parameters\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\t\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\t\r\n\t\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\t\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\t\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\t\r\n\t\tTHREE.FontUtils.size = size;\r\n\t\tTHREE.FontUtils.divisions = curveSegments;\r\n\t\r\n\t\tTHREE.FontUtils.face = font;\r\n\t\tTHREE.FontUtils.weight = weight;\r\n\t\tTHREE.FontUtils.style = style;\r\n\t\r\n\t\t// Get a Font data json object\r\n\t\r\n\t\tvar data = THREE.FontUtils.drawText( text );\r\n\t\r\n\t\tvar paths = data.paths;\r\n\t\tvar shapes = [];\r\n\t\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This code is a quick port of code written in C++ which was submitted to\r\n\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t * See original code and more information here:\r\n\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t *\r\n\t * ported to actionscript by Zevan Rosser\r\n\t * www.actionsnippet.com\r\n\t *\r\n\t * ported to javascript by Joshua Koo\r\n\t * http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t( function ( namespace ) {\r\n\t\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t// takes in an contour array and returns\r\n\t\r\n\t\tvar process = function ( contour, indices ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\r\n\t\t\tif ( n < 3 ) return null;\r\n\t\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\t\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\t\r\n\t\t\tvar u, v, w;\r\n\t\r\n\t\t\tif ( area( contour ) > 0.0 ) {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar nv = n;\r\n\t\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\t\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\t\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\t\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\t\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\t\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\t\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\t\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\t\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\t\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\t\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\t\r\n\t\t\t\t\t/* true names of the vertices */\r\n\t\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\t\r\n\t\t\t\t\t/* output Triangle */\r\n\t\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\t\r\n\t\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\t\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\t\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\t\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnv --;\r\n\t\r\n\t\t\t\t\t/* reset error detection counter */\r\n\t\r\n\t\t\t\t\tcount = 2 * nv;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// calculate area of the contour polygon\r\n\t\r\n\t\tvar area = function ( contour ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\t\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\t\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn a * 0.5;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\t\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\t\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\t\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\t\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\t\r\n\t\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\t\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\t\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\t\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\t\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\t\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\t\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\t\r\n\t\t\t\t// see if p is inside triangle abc\r\n\t\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\t\r\n\t\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\tnamespace.Triangulate = process;\r\n\t\tnamespace.Triangulate.area = area;\r\n\t\r\n\t\treturn namespace;\r\n\t\r\n\t} )( THREE.FontUtils );\r\n\t\r\n\t// To use the typeface.js face files, hook up the API\r\n\t\r\n\tTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\n\tif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\t\r\n\t// File:src/extras/audio/Audio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Audio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Audio';\r\n\t\r\n\t\tthis.context = listener.context;\r\n\t\tthis.source = this.context.createBufferSource();\r\n\t\tthis.source.onended = this.onEnded.bind( this );\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\t\r\n\t\tthis.autoplay = false;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\t\r\n\tTHREE.Audio.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', file, true );\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.onload = function ( e ) {\r\n\t\r\n\t\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\t\r\n\t\t\t\tscope.source.buffer = buffer;\r\n\t\r\n\t\t\t\tif ( scope.autoplay ) scope.play();\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\trequest.send();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.play = function () {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar source = this.context.createBufferSource();\r\n\t\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\tthis.isPlaying = true;\r\n\t\r\n\t\tthis.source = source;\r\n\t\r\n\t\tthis.connect();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.pause = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.stop = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.connect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.connect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.disconnect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.disconnect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.connect();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.filter = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\t\r\n\t\tthis.playbackRate = value;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\t\r\n\t\treturn this.playbackRate;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.onEnded = function() {\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\t\r\n\t\tthis.source.loop = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getLoop = function () {\r\n\t\r\n\t\treturn this.source.loop;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.refDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRefDistance = function () {\r\n\t\r\n\t\treturn this.panner.refDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\t\r\n\t\tthis.panner.rolloffFactor = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\t\r\n\t\treturn this.panner.rolloffFactor;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/audio/AudioListener.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioListener = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'AudioListener';\r\n\t\r\n\t\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\t\r\n\tTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\tvar orientation = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\t\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\t\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/core/Curve.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of Curve methods\r\n\t * .getPoint(t), getTangent(t)\r\n\t * .getPointAt(u), getTagentAt(u)\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following classes subclasses THREE.Curve:\r\n\t *\r\n\t * -- 2d classes --\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.SplineCurve\r\n\t * THREE.ArcCurve\r\n\t * THREE.EllipseCurve\r\n\t *\r\n\t * -- 3d classes --\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.SplineCurve3\r\n\t * THREE.ClosedSplineCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve = function () {\r\n\t\r\n\t};\r\n\t\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\t\r\n\t};\r\n\t\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPoint( t )\r\n\t\r\n\tTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPointAt( u )\r\n\t\r\n\tTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get total curve arc length\r\n\t\r\n\tTHREE.Curve.prototype.getLength = function () {\r\n\t\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Get list of cumulative segment lengths\r\n\t\r\n\tTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\t\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\t\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\t\r\n\t\tcache.push( 0 );\r\n\t\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\t\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheArcLengths = cache;\r\n\t\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.updateArcLengths = function() {\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\t\r\n\t};\r\n\t\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\t\r\n\tTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\t\r\n\t\tvar arcLengths = this.getLengths();\r\n\t\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\t\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\t\r\n\t\tif ( distance ) {\r\n\t\r\n\t\t\ttargetArcLength = distance;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//var time = Date.now();\r\n\t\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\t\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\t\r\n\t\twhile ( low <= high ) {\r\n\t\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\t\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\t\r\n\t\t\tif ( comparison < 0 ) {\r\n\t\r\n\t\t\t\tlow = i + 1;\r\n\t\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\t\r\n\t\t\t\thigh = i - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t// DONE\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\ti = high;\r\n\t\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\t\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\t\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\t\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\t\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\t\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\t\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\t\r\n\t\t// add that fractional amount to t\r\n\t\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\t\r\n\t\treturn t;\r\n\t\r\n\t};\r\n\t\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\t\r\n\tTHREE.Curve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\t\r\n\t\t// Capping in case of danger\r\n\t\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\t\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\t\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve.Utils = {\r\n\t\r\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Puay Bing, thanks for helping with this derivative!\r\n\t\r\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t\t3 * t * t * p3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t// To check if my formulas are correct\r\n\t\r\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\t\r\n\t\t\treturn h00 + h10 + h01 + h11;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t * t2;\r\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// TODO: Transformation for Curves?\r\n\t\r\n\t/**************************************************************\r\n\t *\t3D Curves\r\n\t **************************************************************/\r\n\t\r\n\t// A Factory method for creating new curve subclasses\r\n\t\r\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\t\r\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\t\tconstructor.prototype.constructor = constructor;\r\n\t\tconstructor.prototype.getPoint = getPointFunc;\r\n\t\r\n\t\treturn constructor;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/CurvePath.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CurvePath = function () {\r\n\t\r\n\t\tthis.curves = [];\r\n\t\tthis.bends = [];\r\n\t\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\t\r\n\tTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t\t// TODO\r\n\t\t// If the ending of curve is not connected to the starting\r\n\t\t// or the next curve, then, this is not a real path\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.closePath = function() {\r\n\t\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\t\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\t\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\t\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\t\r\n\tTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\t\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0, diff, curve;\r\n\t\r\n\t\t// To think about boundaries points.\r\n\t\r\n\t\twhile ( i < curveLengths.length ) {\r\n\t\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\t\r\n\t\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\t\tcurve = this.curves[ i ];\r\n\t\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\t\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti ++;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n\t};*/\r\n\t\r\n\t\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\t\r\n\tTHREE.CurvePath.prototype.getLength = function() {\r\n\t\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\t\r\n\tTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\t\r\n\t\t// We use cache values if curves and cache array are same length\r\n\t\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\t\r\n\t\t\treturn this.cacheLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\t\r\n\t\tvar lengths = [], sums = 0;\r\n\t\tvar i, il = this.curves.length;\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheLengths = lengths;\r\n\t\r\n\t\treturn lengths;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t// Returns min and max coordinates\r\n\t\r\n\tTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\t\r\n\t\tvar points = this.getPoints();\r\n\t\r\n\t\tvar maxX, maxY, maxZ;\r\n\t\tvar minX, minY, minZ;\r\n\t\r\n\t\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\t\tminX = minY = Number.POSITIVE_INFINITY;\r\n\t\r\n\t\tvar p, i, il, sum;\r\n\t\r\n\t\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\t\r\n\t\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\t\r\n\t\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = points[ i ];\r\n\t\r\n\t\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\t\telse if ( p.x < minX ) minX = p.x;\r\n\t\r\n\t\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\t\telse if ( p.y < minY ) minY = p.y;\r\n\t\r\n\t\t\tif ( v3 ) {\r\n\t\r\n\t\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsum.add( p );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar ret = {\r\n\t\r\n\t\t\tminX: minX,\r\n\t\t\tminY: minY,\r\n\t\t\tmaxX: maxX,\r\n\t\t\tmaxY: maxY\r\n\t\r\n\t\t};\r\n\t\r\n\t\tif ( v3 ) {\r\n\t\r\n\t\t\tret.maxZ = maxZ;\r\n\t\t\tret.minZ = minZ;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn ret;\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\t\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\t\r\n\tTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\t// Generate geometry from equidistant sampling along the path\r\n\t\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getSpacedPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tBend / Wrap Helper Methods\r\n\t **************************************************************/\r\n\t\r\n\t// Wrap path / Bend modifiers?\r\n\t\r\n\tTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\t\r\n\t\tthis.bends.push( bendpath );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getSpacedPoints( segments );\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// This returns getPoints() bend/wrapped around the contour of a path.\r\n\t// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\t\r\n\tTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\t\r\n\t\tvar bounds = this.getBoundingBox();\r\n\t\r\n\t\tvar i, il, p, oldX, oldY, xNorm;\r\n\t\r\n\t\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = oldPts[ i ];\r\n\t\r\n\t\t\toldX = p.x;\r\n\t\t\toldY = p.y;\r\n\t\r\n\t\t\txNorm = oldX / bounds.maxX;\r\n\t\r\n\t\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\t\r\n\t\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\t\r\n\t\t\t// check for out of bounds?\r\n\t\r\n\t\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\t\tvar normal = path.getTangent( xNorm );\r\n\t\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\t\r\n\t\t\tp.x = pathPt.x + normal.x;\r\n\t\t\tp.y = pathPt.y + normal.y;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Path.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t *\r\n\t **/\r\n\t\r\n\tTHREE.Path = function ( points ) {\r\n\t\r\n\t\tTHREE.CurvePath.call( this );\r\n\t\r\n\t\tthis.actions = [];\r\n\t\r\n\t\tif ( points ) {\r\n\t\r\n\t\t\tthis.fromPoints( points );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\tTHREE.Path.prototype.constructor = THREE.Path;\r\n\t\r\n\tTHREE.PathActions = {\r\n\t\r\n\t\tMOVE_TO: 'moveTo',\r\n\t\tLINE_TO: 'lineTo',\r\n\t\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\t\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\t\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\t\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\t\tELLIPSE: 'ellipse'\r\n\t};\r\n\t\r\n\t// TODO Clean up PATH API\r\n\t\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\t\r\n\tTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\t\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\t\r\n\t\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\t\r\n\t\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// startPath() endPath()?\r\n\t\r\n\tTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\t//---\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\t\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\t// FUTURE: Change the API or follow canvas API?\r\n\t\r\n\tTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\t THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\r\n\t };\r\n\t\r\n\t\r\n\tTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\t\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\t\r\n\t\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// if ( closedPath ) {\r\n\t\t//\r\n\t\t// \tpoints.push( points[ 0 ] );\r\n\t\t//\r\n\t\t// }\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t/* Return an array of vectors based on contour of the path */\r\n\t\r\n\tTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdivisions = divisions || 12;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tvar i, il, item, action, args;\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, j,\r\n\t\t\tt, tx, ty;\r\n\t\r\n\t\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\titem = this.actions[ i ];\r\n\t\r\n\t\t\taction = item.action;\r\n\t\t\targs = item.args;\r\n\t\r\n\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\tcase THREE.PathActions.MOVE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.LINE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\t\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\t\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\t\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\t\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\t\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ARC:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ELLIPSE:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\t\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\t\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\t\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t} // end switch\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\t\tif ( closedPath ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// Breaks path into shapes\r\n\t//\r\n\t//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n\t//\t- solid shapes are defined clockwise (CW)\r\n\t//\t- holes are defined counterclockwise (CCW)\r\n\t//\r\n\t//\tIf parameter noHoles==true:\r\n\t//  - all subPaths are regarded as solid shapes\r\n\t//  - definition order CW/CCW has no relevance\r\n\t//\r\n\t\r\n\tTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\t\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\t\r\n\t\t\tvar i, il, item, action, args;\r\n\t\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\t\r\n\t\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\titem = inActions[ i ];\r\n\t\r\n\t\t\t\targs = item.args;\r\n\t\t\t\taction = item.action;\r\n\t\r\n\t\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\t\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.log(subPaths);\r\n\t\r\n\t\t\treturn\tsubPaths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\t\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\t\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\t\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\t\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\t\r\n\t\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\t\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\t\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tinside;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\t\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\t\r\n\t\tif ( subPaths.length === 1 ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\t\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\t\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\t\r\n\t\t\tif ( solid ) {\r\n\t\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\t\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\t\t\t//console.log('cw', i);\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\t\r\n\t\t\t\t//console.log('ccw', i);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tif ( newShapes.length > 1 ) {\r\n\t\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\t\r\n\t\t\t}\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\t\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tmpHoles, j, jl;\r\n\t\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Shape.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\t\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\t\r\n\tTHREE.Shape = function () {\r\n\t\r\n\t\tTHREE.Path.apply( this, arguments );\r\n\t\tthis.holes = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\tTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\t\r\n\t// Convenience method to return ExtrudeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.extrude = function ( options ) {\r\n\t\r\n\t\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\t\treturn extruded;\r\n\t\r\n\t};\r\n\t\r\n\t// Convenience method to return ShapeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\t\r\n\t\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes\r\n\t\r\n\tTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.extractAllSpacedPoints( divisions );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.extractAllPoints( divisions );\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n\t//\r\n\t// \treturn {\r\n\t//\r\n\t// \t\tshape: this.transform( bend, divisions ),\r\n\t// \t\tholes: this.getPointsHoles( divisions, bend )\r\n\t//\r\n\t// \t};\r\n\t//\r\n\t// };\r\n\t\r\n\t// Get points of shape and holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Shape.Utils = {\r\n\t\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\t\r\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\r\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\t\r\n\t\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\r\n\t\t\t\t\tvar perpSeg2;\r\n\t\t\t\t\tif ( limit > 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( perpSeg2 === limit ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\t\r\n\t\t\t\t\t// return real intersection point\r\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\t\r\n\t\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t\t// both segments are points\r\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#1  is a single point\r\n\t\t\t\t\tif ( seg1Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#2  is a single point\r\n\t\t\t\t\tif ( seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\t\tif ( seg1dx !== 0 ) {\r\n\t\r\n\t\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\r\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg2min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg1min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\r\n\t\t\t\t// The order of legs is important\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\t\r\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\t\r\n\t\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// angle != 180 deg.\r\n\t\r\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\t\r\n\t\t\t\t\tif ( from2toAngle > 0 ) {\r\n\t\r\n\t\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfunction removeHoles( contour, holes ) {\r\n\t\r\n\t\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\t\tvar hole;\r\n\t\r\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\r\n\t\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\t\r\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\t\r\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\t\r\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\t\r\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar indepHoles = [];\r\n\t\r\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\t\tshapePt, holePt,\r\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\t\ttmpHole1, tmpHole2;\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tindepHoles.push( h );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar minShapeIndex = 0;\r\n\t\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\r\n\t\t\t\t\tcounter --;\r\n\t\t\t\t\tif ( counter < 0 ) {\r\n\t\r\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t\t// which can be connected without intersections\r\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\t\r\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\t\tholeIndex\t= - 1;\r\n\t\r\n\t\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\t\r\n\t\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\t\r\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\t\r\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\t\r\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\t\r\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar i, il, f, face,\r\n\t\t\t\tkey, index,\r\n\t\t\t\tallPointsMap = {};\r\n\t\r\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\t\r\n\t\t\tvar allpoints = contour.concat();\r\n\t\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\t\r\n\t\t\t// prepare all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\t\r\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tallPointsMap[ key ] = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\t\r\n\t\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\t\r\n\t\t\t// check all face vertices against all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = triangles[ i ];\r\n\t\r\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\t\r\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\t\r\n\t\t\t\t\tindex = allPointsMap[ key ];\r\n\t\r\n\t\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tface[ f ] = index;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn triangles.concat();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisClockWise: function ( pts ) {\r\n\t\r\n\t\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Bezier Curves formulas obtained from\r\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\t\r\n\t\t// Quad Bezier Functions\r\n\t\r\n\t\tb2p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p1: function ( t, p ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p2: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Cubic Bezier Functions\r\n\t\r\n\t\tb3p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p1: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p2: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p3: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/LineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve = function ( v1, v2 ) {\r\n\t\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\t\r\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar point = this.v2.clone().sub( this.v1 );\r\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\t\r\n\t\treturn point;\r\n\t\r\n\t};\r\n\t\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\t\r\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\treturn this.getPoint( u );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\t\r\n\t\treturn tangent.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\t// returns unit vector\r\n\t\r\n\t\treturn vector.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\treturn new THREE.Vector2( tx, ty );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\tvar tangent = new THREE.Vector2( tx, ty );\r\n\t\ttangent.normalize();\r\n\t\r\n\t\treturn tangent;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/SplineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\t\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\t\r\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\t\r\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/EllipseCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tEllipse curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\t\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\t\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\t\r\n\t\tthis.aClockwise = aClockwise;\r\n\t\t\r\n\t\tthis.aRotation = aRotation || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\t\r\n\tTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\r\n\t\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\t\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\t\r\n\t\tvar angle;\r\n\t\r\n\t\tif ( this.aClockwise === true ) {\r\n\t\r\n\t\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\t\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\t\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\t\r\n\t\t\tvar tx = x, ty = y;\r\n\t\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.Vector2( x, y );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/ArcCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tArc curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\t\r\n\t// File:src/extras/curves/LineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine3D\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v1, v2 ) {\r\n\t\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\t\tvector.multiplyScalar( t );\r\n\t\t\tvector.add( this.v1 );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/SplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.SplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\t\tvar point1 = points[ intPoint ];\r\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CatmullRomCurve3.js\r\n\t\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\t\r\n\tTHREE.CatmullRomCurve3 = ( function() {\r\n\t\r\n\t\tvar\r\n\t\t\ttmp = new THREE.Vector3(),\r\n\t\t\tpx = new CubicPoly(),\r\n\t\t\tpy = new CubicPoly(),\r\n\t\t\tpz = new CubicPoly();\r\n\t\r\n\t\t/*\r\n\t\tBased on an optimized c++ solution in\r\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t\t - http://ideone.com/NoEbVM\r\n\t\r\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\t\twhich can be placed in CurveUtils.\r\n\t\t*/\r\n\t\r\n\t\tfunction CubicPoly() {\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\t\r\n\t\t\tthis.c0 = x0;\r\n\t\t\tthis.c1 = t0;\r\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\t\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\t\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\t\r\n\t\t\t// initCubicPoly\r\n\t\t\tthis.init( x1, x2, t1, t2 );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\t\r\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.calc = function( t ) {\r\n\t\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t2 * t;\r\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Subclass Three.js curve\r\n\t\treturn THREE.Curve.create(\r\n\t\r\n\t\t\tfunction ( p /* array of Vector3 */ ) {\r\n\t\r\n\t\t\t\tthis.points = p || [];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction ( t ) {\r\n\t\r\n\t\t\t\tvar points = this.points,\r\n\t\t\t\t\tpoint, intPoint, weight, l;\r\n\t\r\n\t\t\t\tl = points.length;\r\n\t\r\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\t\r\n\t\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\t\r\n\t\t\t\t\tintPoint = l - 2;\r\n\t\t\t\t\tweight = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar p0, p1, p2, p3;\r\n\t\r\n\t\t\t\tif ( intPoint === 0 ) {\r\n\t\r\n\t\t\t\t\t// extrapolate first point\r\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\t\tp0 = tmp;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tp1 = points[ intPoint ];\r\n\t\t\t\tp2 = points[ intPoint + 1 ];\r\n\t\r\n\t\t\t\tif ( intPoint + 2 < l ) {\r\n\t\r\n\t\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate last point\r\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\t\tp3 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\t\r\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\t\r\n\t\t\t\t\t// safety check for repeated points\r\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\t\r\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\t\r\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\t\r\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\t\tpx.calc( weight ),\r\n\t\t\t\t\tpy.calc( weight ),\r\n\t\t\t\t\tpz.calc( weight )\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\treturn v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t);\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/curves/ClosedSplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tClosed Spline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\t\r\n\t\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/animation/AnimationHandler.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\tTHREE.AnimationHandler = {\r\n\t\r\n\t\tLINEAR: 0,\r\n\t\tCATMULLROM: 1,\r\n\t\tCATMULLROM_FORWARD: 2,\r\n\t\r\n\t\t//\r\n\t\r\n\t\tadd: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tget: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tremove: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tanimations: [],\r\n\t\r\n\t\tinit: function ( data ) {\r\n\t\r\n\t\t\tif ( data.initialized === true ) return data;\r\n\t\r\n\t\t\t// loop through all keys\r\n\t\r\n\t\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t// remove minus times\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\t\r\n\t\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// create quaternions\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\t\r\n\t\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// prepare morph target keys\r\n\t\r\n\t\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\t// get all used\r\n\t\r\n\t\t\t\t\tvar usedMorphTargets = {};\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\t\r\n\t\r\n\t\t\t\t\t// set all used on all frames\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar influences = {};\r\n\t\r\n\t\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// remove all keys that are on the same time\r\n\t\r\n\t\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\t\tk --;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// set index\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.initialized = true;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( root ) {\r\n\t\r\n\t\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\t\r\n\t\t\t\thierarchy.push( root );\r\n\t\r\n\t\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// setup hierarchy\r\n\t\r\n\t\t\tvar hierarchy = [];\r\n\t\r\n\t\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\t\r\n\t\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn hierarchy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplay: function ( animation ) {\r\n\t\r\n\t\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.push( animation );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function ( animation ) {\r\n\t\r\n\t\t\tvar index = this.animations.indexOf( animation );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( deltaTimeMS ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/Animation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Animation = function ( root, data ) {\r\n\t\r\n\t\tthis.root = root;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\t\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 1;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.loop = true;\r\n\t\tthis.weight = 0;\r\n\t\r\n\t\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Animation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Animation,\r\n\t\r\n\t\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\t\r\n\t\tplay: function ( startTime, weight ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\tthis.reset();\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function() {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treset: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( object.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\t\tanimations: {},\r\n\t\t\t\t\t\tblending: {\r\n\t\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar name = this.data.name;\r\n\t\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\t\tvar animationCache = animations[ name ];\r\n\t\r\n\t\t\t\tif ( animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tanimationCache = {\r\n\t\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tanimations[ name ] = animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Get keys to match our current time\r\n\t\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\tvar type = this.keyTypes[ t ];\r\n\t\r\n\t\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tresetBlendWeights: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache;\r\n\t\r\n\t\t\t\tif ( animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar blending = animationCache.blending;\r\n\t\r\n\t\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\t\tblending.scaleWeight = 0.0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: ( function() {\r\n\t\r\n\t\t\tvar points = [];\r\n\t\t\tvar target = new THREE.Vector3();\r\n\t\t\tvar newVector = new THREE.Vector3();\r\n\t\t\tvar newQuat = new THREE.Quaternion();\r\n\t\r\n\t\t\t// Catmull-Rom spline\r\n\t\r\n\t\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\t\r\n\t\t\t\tvar c = [], v3 = [],\r\n\t\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\t\tpa, pb, pc, pd;\r\n\t\r\n\t\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\t\tc[ 1 ] = intPoint;\r\n\t\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\t\r\n\t\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\t\tpd = points[ c[ 3 ] ];\r\n\t\r\n\t\t\t\tw2 = weight * weight;\r\n\t\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\t\r\n\t\t\t\treturn v3;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function ( delta ) {\r\n\t\r\n\t\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t\tif ( this.weight === 0 )\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\t\r\n\t\t\t\t\tif ( this.loop ) {\r\n\t\r\n\t\t\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\t\tthis.currentTime += duration;\r\n\t\r\n\t\t\t\t\t\tthis.reset();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tthis.stop();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\t\tvar blending = object.animationCache.blending;\r\n\t\r\n\t\t\t\t\t// loop through pos/rot/scl\r\n\t\r\n\t\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t// get keys\r\n\t\r\n\t\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\t\r\n\t\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\t\r\n\t\t\t\t\t\t// interpolate\r\n\t\r\n\t\t\t\t\t\tif ( type === \"pos\" ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\t\r\n\t\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\t\r\n\t\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\r\n\t\t\t\t\t\t\t\tvar vector = object.position;\r\n\t\r\n\t\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\t\r\n\t\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\t\r\n\t\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\t\ttarget.normalize();\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\t\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\t\r\n\t\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\t\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\tgetNextKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key > 0 ? key : 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/KeyFrameAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author khang duong\r\n\t * @author erik kitson\r\n\t */\r\n\t\r\n\tTHREE.KeyFrameAnimation = function ( data ) {\r\n\t\r\n\t\tthis.root = data.node;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 0.001;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused = true;\r\n\t\tthis.loop = true;\r\n\t\r\n\t\t// initialize to first keyframes\r\n\t\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\t\tobj = this.hierarchy[ h ];\r\n\t\r\n\t\t\tif ( keys.length && sids ) {\r\n\t\r\n\t\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\t\r\n\t\t\t\t\tif ( next ) {\r\n\t\r\n\t\t\t\t\t\tnext.apply( sid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyFrameAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.KeyFrameAnimation,\r\n\t\r\n\t\tplay: function ( startTime ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) {\r\n\t\r\n\t\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\t\t// reset key cache\r\n\t\r\n\t\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tnode;\r\n\t\r\n\t\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\t\tif ( node.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\t\r\n\t\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.update( 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.isPaused = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\tthis.isPaused  = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t\t// reset JIT matrix and remove cache\r\n\t\r\n\t\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( node.animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\t\r\n\t\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\t\tobj.matrix = original;\r\n\t\r\n\t\t\t\t\tdelete node.animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tvar keys = node.keys,\r\n\t\t\t\t\tanimationCache = node.animationCache;\r\n\t\r\n\t\r\n\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\t\r\n\t\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNextKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/MorphAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com\r\n\t * @author willy-vvu / http://willy-vvu.github.io\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimation = function ( mesh ) {\r\n\t\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.frames = mesh.morphTargetInfluences.length;\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.duration = 1000;\r\n\t\tthis.loop = true;\r\n\t\tthis.lastFrame = 0;\r\n\t\tthis.currentFrame = 0;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MorphAnimation,\r\n\t\r\n\t\tplay: function () {\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpause: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= this.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\t\r\n\t\t\tvar frameTime = this.duration / this.frames;\r\n\t\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\t\r\n\t\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( frame !== this.currentFrame ) {\r\n\t\r\n\t\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\t\tinfluences[ frame ] = 0;\r\n\t\r\n\t\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\t\tthis.currentFrame = frame;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\t\r\n\t\t\tinfluences[ frame ] = mix;\r\n\t\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/BoxGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n\t */\r\n\t\r\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tthis.widthSegments = widthSegments || 1;\r\n\t\tthis.heightSegments = heightSegments || 1;\r\n\t\tthis.depthSegments = depthSegments || 1;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\tvar depth_half = depth / 2;\r\n\t\r\n\t\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\t\r\n\t\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\t\r\n\t\t\tvar w, ix, iy,\r\n\t\t\tgridX = scope.widthSegments,\r\n\t\t\tgridY = scope.heightSegments,\r\n\t\t\twidth_half = width / 2,\r\n\t\t\theight_half = height / 2,\r\n\t\t\toffset = scope.vertices.length;\r\n\t\r\n\t\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'z';\r\n\t\r\n\t\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'y';\r\n\t\t\t\tgridY = scope.depthSegments;\r\n\t\r\n\t\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\t\r\n\t\t\t\tw = 'x';\r\n\t\t\t\tgridX = scope.depthSegments;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gridX1 = gridX + 1,\r\n\t\t\tgridY1 = gridY + 1,\r\n\t\t\tsegment_width = width / gridX,\r\n\t\t\tsegment_height = height / gridY,\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\r\n\t\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\t\tvector[ w ] = depth;\r\n\t\r\n\t\t\t\t\tscope.vertices.push( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\t\r\n\t\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\t\r\n\tTHREE.BoxGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.BoxGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.depth,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.depthSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\t\r\n\t// File:src/extras/geometries/CircleGeometry.js\r\n\t\r\n\t/**\r\n\t * @author hughes\r\n\t */\r\n\t\r\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar i, uvs = [],\r\n\t\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\t\r\n\t\tthis.vertices.push( center );\r\n\t\tuvs.push( centerUV );\r\n\t\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\t\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\t\r\n\tTHREE.CircleGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CircleBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar vertices = segments + 2;\r\n\t\r\n\t\tvar positions = new Float32Array( vertices * 3 );\r\n\t\tvar normals = new Float32Array( vertices * 3 );\r\n\t\tvar uvs = new Float32Array( vertices * 2 );\r\n\t\r\n\t\t// center data is already zero, but need to set a few extras\r\n\t\tnormals[ 3 ] = 1.0;\r\n\t\tuvs[ 0 ] = 0.5;\r\n\t\tuvs[ 1 ] = 0.5;\r\n\t\r\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\t\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\t\r\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\t\r\n\t\t\tnormals[ i + 2 ] = 1; // normal z\r\n\t\r\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tindices.push( i );\r\n\t\t\tindices.push( i + 1 );\r\n\t\t\tindices.push( 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CylinderGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\t\theight = height !== undefined ? height : 100;\r\n\t\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\theightSegments = heightSegments || 1;\r\n\t\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\t\r\n\t\tvar heightHalf = height / 2;\r\n\t\r\n\t\tvar x, y, vertices = [], uvs = [];\r\n\t\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\t\tvar uvsRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\t\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\t\tuvs.push( uvsRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\t\tvar na, nb;\r\n\t\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\tif ( radiusTop !== 0 ) {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\t\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\t\r\n\t\t\t\tvar n1 = na.clone();\r\n\t\t\t\tvar n2 = na.clone();\r\n\t\t\t\tvar n3 = nb.clone();\r\n\t\t\t\tvar n4 = nb.clone();\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// top cap\r\n\t\r\n\t\tif ( openEnded === false && radiusTop > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// bottom cap\r\n\t\r\n\t\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\t\r\n\tTHREE.CylinderGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry(\r\n\t\t\tthis.parameters.radiusTop,\r\n\t\t\tthis.parameters.radiusBottom,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.openEnded,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/EdgesGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\t\r\n\t\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tvar geometry2;\r\n\t\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tgeometry2 = new THREE.Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tgeometry2 = geometry.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\t\r\n\t\tvar vertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thash[ key ].face2 = i;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar coords = [];\r\n\t\r\n\t\tfor ( var key in hash ) {\r\n\t\r\n\t\t\tvar h = hash[ key ];\r\n\t\r\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ExtrudeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  amount: <int>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n\t *\r\n\t *  uvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\r\n\t\t\tshapes = [];\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\t\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t// can't really use automatic vertex normals\r\n\t\t// as then front and back sides get smoothed too\r\n\t\t// should do separate smoothing just for sides\r\n\t\r\n\t\t//this.computeVertexNormals();\r\n\t\r\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tvar sl = shapes.length;\r\n\t\r\n\t\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\tvar shape = shapes[ s ];\r\n\t\t\tthis.addShape( shape, options );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\t\r\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\r\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\t\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\r\n\t\tvar extrudePath = options.extrudePath;\r\n\t\tvar extrudePts, extrudeByPath = false;\r\n\t\r\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\t\r\n\t\tvar splineTube, binormal, normal, position2;\r\n\t\tif ( extrudePath ) {\r\n\t\r\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\t\r\n\t\t\textrudeByPath = true;\r\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\r\n\t\t\t// SETUP TNB variables\r\n\t\r\n\t\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t\t// TODO1 - have a .isClosed in spline?\r\n\t\r\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\t\r\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\t\r\n\t\t\tbinormal = new THREE.Vector3();\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\t\tposition2 = new THREE.Vector3();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Safeguards if bevels are not enabled\r\n\t\r\n\t\tif ( ! bevelEnabled ) {\r\n\t\r\n\t\t\tbevelSegments = 0;\r\n\t\t\tbevelThickness = 0;\r\n\t\t\tbevelSize = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Variables initialization\r\n\t\r\n\t\tvar ahole, h, hl; // looping of holes\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\t\r\n\t\t/* Vertices */\r\n\t\r\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\tvertices = vertices.concat( ahole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction scalePt2 ( pt, vec, size ) {\r\n\t\r\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\t\r\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar b, bs, t, z,\r\n\t\t\tvert, vlen = vertices.length,\r\n\t\t\tface, flen = faces.length;\r\n\t\r\n\t\r\n\t\t// Find directions for point movement\r\n\t\r\n\t\r\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t//\r\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\r\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\t\r\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\t\r\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\r\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\r\n\t\t\t// check for collinear edges\r\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\t\r\n\t\t\t\t// not collinear\r\n\t\r\n\t\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\r\n\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\r\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\r\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// handle special case of collinear edges\r\n\t\r\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( direction_eq ) {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar contourMovements = [];\r\n\t\r\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\t// console.log('i,j,k', i, j , k)\r\n\t\r\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\toneHoleMovements = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\t\r\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t\r\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\r\n\t\t\t//z = bevelThickness * t;\r\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t\t//bs = bevelSize * t; // linear\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tbs = bevelSize;\r\n\t\r\n\t\t// Back facing vertices\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\tv( vert.x, vert.y, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\r\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Add stepped vertices...\r\n\t\t// Including front facing vertices\r\n\t\r\n\t\tvar s;\r\n\t\r\n\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Add bevel segments planes\r\n\t\r\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/* Faces */\r\n\t\r\n\t\t// Top and bottom faces\r\n\t\r\n\t\tbuildLidFaces();\r\n\t\r\n\t\t// Sides faces\r\n\t\r\n\t\tbuildSideFaces();\r\n\t\r\n\t\r\n\t\t/////  Internal functions\r\n\t\r\n\t\tfunction buildLidFaces() {\r\n\t\r\n\t\t\tif ( bevelEnabled ) {\r\n\t\r\n\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\tvar offset = vlen * layer;\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\toffset = vlen * layer;\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Create faces for the z-sides of the shape\r\n\t\r\n\t\tfunction buildSideFaces() {\r\n\t\r\n\t\t\tvar layeroffset = 0;\r\n\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\tlayeroffset += contour.length;\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\tsidewalls( ahole, layeroffset );\r\n\t\r\n\t\t\t\t//, true\r\n\t\t\t\tlayeroffset += ahole.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction sidewalls( contour, layeroffset ) {\r\n\t\r\n\t\t\tvar j, k;\r\n\t\t\ti = contour.length;\r\n\t\r\n\t\t\twhile ( -- i >= 0 ) {\r\n\t\r\n\t\t\t\tj = i;\r\n\t\t\t\tk = i - 1;\r\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\t\r\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\t\r\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\t\r\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\t\r\n\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\r\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction v( x, y, z ) {\r\n\t\r\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f3( a, b, c ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\t\td += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\t\r\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t\t];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\t\tvar d = vertices[ indexD ];\r\n\t\r\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ShapeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t *\r\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n\t * ExtrudeGeometry.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n\t *\r\n\t *\tmaterial: <int> // material index for front and back faces\r\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ShapeGeometry';\r\n\t\r\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\t\r\n\t/**\r\n\t * Add an array of shapes to THREE.ShapeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.addShape( shapes[ i ], options );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tif ( options === undefined ) options = {};\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar material = options.material;\r\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar i, l, hole;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\t\r\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\thole = holes[ i ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ i ] = hole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t// Vertices\r\n\t\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\thole = holes[ i ];\r\n\t\t\tvertices = vertices.concat( hole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vert, vlen = vertices.length;\r\n\t\tvar face, flen = faces.length;\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = vertices[ i ];\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\tface = faces[ i ];\r\n\t\r\n\t\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\t\tvar c = face[ 2 ] + shapesOffset;\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/LatheGeometry.js\r\n\t\r\n\t/**\r\n\t * @author astrodud / http://astrodud.isgreat.org/\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\t// points - to create a closed torus, one must use a set of points \r\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t// segments - the number of circumference segments to create\r\n\t// phiStart - the starting radian\r\n\t// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n\t//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || 2 * Math.PI;\r\n\t\r\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\t\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\t\r\n\t\t\tvar c = Math.cos( phi ),\r\n\t\t\t\ts = Math.sin( phi );\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar pt = points[ j ];\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\t\tvertex.z = pt.z;\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar np = points.length;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar base = j + np * i;\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + np;\r\n\t\t\t\tvar c = base + 1 + np;\r\n\t\t\t\tvar d = base + 1;\r\n\t\r\n\t\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\t\tvar v1 = v0 + inversePointLength;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\t\r\n\tTHREE.PlaneGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\t\r\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\t\r\n\t\tvar offset = 0;\r\n\t\tvar offset2 = 0;\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\t\r\n\t\t\t\tvertices[ offset ] = x;\r\n\t\t\t\tvertices[ offset + 1 ] = - y;\r\n\t\r\n\t\t\t\tnormals[ offset + 2 ] = 1;\r\n\t\r\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\toffset += 3;\r\n\t\t\t\toffset2 += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\toffset = 0;\r\n\t\r\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\tindices[ offset ] = a;\r\n\t\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\t\tindices[ offset + 2 ] = d;\r\n\t\r\n\t\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\t\tindices[ offset + 5 ] = d;\r\n\t\r\n\t\t\t\toffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/RingGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t */\r\n\t\r\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tinnerRadius = innerRadius || 0;\r\n\t\touterRadius = outerRadius || 50;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\t\r\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tradius += radiusStep;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar segment = o + thetaSegment;\r\n\t\r\n\t\t\t\tvar v1 = segment;\r\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t\tv1 = segment;\r\n\t\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\t\tv3 = segment + 1;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\t\r\n\tTHREE.RingGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.RingGeometry(\r\n\t\t\tthis.parameters.innerRadius,\r\n\t\t\tthis.parameters.outerRadius,\r\n\t\t\tthis.parameters.thetaSegments,\r\n\t\t\tthis.parameters.phiSegments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\t\r\n\tTHREE.SphereGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * based on THREE.SphereGeometry\r\n\t */\r\n\t\r\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\t\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\t\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\t\r\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\t\r\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / widthSegments;\r\n\t\r\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\r\n\t\t\t\tnormal.set( px, py, pz ).normalize();\r\n\t\r\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\tverticesRow.push( index );\r\n\t\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\t\r\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', positions );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TextGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For creating 3D text geometry in three.js\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  size: \t\t\t<float>, \t// size of the text\r\n\t *  height: \t\t<float>, \t// thickness to extrude text\r\n\t *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n\t *\r\n\t *  font: \t\t\t<string>,\t\t// font name\r\n\t *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n\t *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n\t *\r\n\t *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n\t *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n\t *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n\t *  }\r\n\t *\r\n\t */\r\n\t\r\n\t/*\tUsage Examples\r\n\t\r\n\t\t// TextGeometry wrapper\r\n\t\r\n\t\tvar text3d = new TextGeometry( text, options );\r\n\t\r\n\t\t// Complete manner\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\t\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\t\r\n\t*/\r\n\t\r\n\t\r\n\tTHREE.TextGeometry = function ( text, parameters ) {\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\t\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\t\r\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\t\r\n\t\t// defaults\r\n\t\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\t\r\n\t\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\t\r\n\t\tthis.type = 'TextGeometry';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n\t */\r\n\t\r\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\ttubularSegments = tubularSegments || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\t\r\n\t\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\t\r\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\t\r\n\tTHREE.TorusGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.arc\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n\t */\r\n\t\r\n\tTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q,\r\n\t\t\theightScale: heightScale\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 64;\r\n\t\ttubularSegments = tubularSegments || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\t\theightScale = heightScale || 1;\r\n\t\r\n\t\tvar grid = new Array( radialSegments );\r\n\t\tvar tang = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\t\tvar bitan = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\t\ttang.subVectors( p2, p1 );\r\n\t\t\tn.addVectors( p2, p1 );\r\n\t\r\n\t\t\tbitan.crossVectors( tang, n );\r\n\t\t\tn.crossVectors( bitan, tang );\r\n\t\t\tbitan.normalize();\r\n\t\t\tn.normalize();\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\t\r\n\t\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\t\tvar d = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\t\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = in_q / in_p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\t\r\n\t\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\t\r\n\t\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.p,\r\n\t\t\tthis.parameters.q,\r\n\t\t\tthis.parameters.heightScale\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TubeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t *\r\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n\t *\r\n\t * Creates a tube which extrudes along a 3d spline\r\n\t *\r\n\t * Uses parallel transport frames as described in\r\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t */\r\n\t\r\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TubeGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\tsegments: segments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\t\r\n\t\tvar grid = [];\r\n\t\r\n\t\tvar scope = this,\r\n\t\r\n\t\t\ttangent,\r\n\t\t\tnormal,\r\n\t\t\tbinormal,\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\r\n\t\t\tu, v, r,\r\n\t\r\n\t\t\tcx, cy,\r\n\t\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\t\ti, j,\r\n\t\t\tip, jp,\r\n\t\t\ta, b, c, d,\r\n\t\t\tuva, uvb, uvc, uvd;\r\n\t\r\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\t\ttangents = frames.tangents,\r\n\t\t\tnormals = frames.normals,\r\n\t\t\tbinormals = frames.binormals;\r\n\t\r\n\t\t// proxy internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\tfunction vert( x, y, z ) {\r\n\t\r\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// construct the grid\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tgrid[ i ] = [];\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\tpos = path.getPointAt( u );\r\n\t\r\n\t\t\ttangent = tangents[ i ];\r\n\t\t\tnormal = normals[ i ];\r\n\t\t\tbinormal = binormals[ i ];\r\n\t\r\n\t\t\tr = radius * taper( u );\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\t\r\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tcy = r * Math.sin( v );\r\n\t\r\n\t\t\t\tpos2.copy( pos );\r\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// construct the mesh\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\t\r\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\t\tb = grid[ ip ][ j ];\r\n\t\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\t\td = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\t\r\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\t\r\n\t\treturn 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\t\r\n\t\treturn Math.sin( Math.PI * u );\r\n\t\r\n\t};\r\n\t\r\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\t\r\n\t\tvar\tnormal = new THREE.Vector3(),\r\n\t\r\n\t\t\ttangents = [],\r\n\t\t\tnormals = [],\r\n\t\t\tbinormals = [],\r\n\t\r\n\t\t\tvec = new THREE.Vector3(),\r\n\t\t\tmat = new THREE.Matrix4(),\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\t\ttheta,\r\n\t\t\tepsilon = 0.0001,\r\n\t\t\tsmallest,\r\n\t\r\n\t\t\ttx, ty, tz,\r\n\t\t\ti, u;\r\n\t\r\n\t\r\n\t\t// expose internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\t// compute the tangent vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\t\ttangents[ i ].normalize();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinitialNormal3();\r\n\t\r\n\t\t/*\r\n\t\tfunction initialNormal1(lastBinormal) {\r\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\t}\r\n\t\r\n\t\tfunction initialNormal2() {\r\n\t\r\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\t\tvar t2 = path.getTangentAt( epsilon );\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t\tfunction initialNormal3() {\r\n\t\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the smallest tangent xyz component\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tsmallest = Number.MAX_VALUE;\r\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\t\r\n\t\t\tif ( tx <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ty <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tz <= smallest ) {\r\n\t\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\t\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\t\r\n\t\t\tif ( vec.length() > epsilon ) {\r\n\t\r\n\t\t\t\tvec.normalize();\r\n\t\r\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\t\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\t\r\n\t\tif ( closed ) {\r\n\t\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\t\ttheta /= ( numpoints - 1 );\r\n\t\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\t\r\n\t\t\t\ttheta = - theta;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PolyhedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\t\r\n\t\tvar that = this;\r\n\t\r\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar p = this.vertices;\r\n\t\r\n\t\tvar faces = [];\r\n\t\r\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\t\r\n\t\t\tvar v1 = p[ indices[ i ] ];\r\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\t\r\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar centroid = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsubdivide( faces[ i ], detail );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handle case when face straddles the seam\r\n\t\r\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\tvar x0 = uvs[ 0 ].x;\r\n\t\t\tvar x1 = uvs[ 1 ].x;\r\n\t\t\tvar x2 = uvs[ 2 ].x;\r\n\t\r\n\t\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\t\r\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\t\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\t\r\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Apply radius\r\n\t\r\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Merge vertices\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t\r\n\t\t// Project vector onto sphere's surface\r\n\t\r\n\t\tfunction prepare( vector ) {\r\n\t\r\n\t\t\tvar vertex = vector.normalize().clone();\r\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\t\r\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\t\r\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\t\r\n\t\t\treturn vertex;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Approximate a curved face with recursively sub-divided triangles.\r\n\t\r\n\t\tfunction make( v1, v2, v3, materialIndex ) {\r\n\t\r\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\t\tthat.faces.push( face );\r\n\t\r\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\r\n\t\t\tvar azi = azimuth( centroid );\r\n\t\r\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t\t] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Analytically subdivide a face to the required detail level.\r\n\t\r\n\t\tfunction subdivide( face, detail ) {\r\n\t\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\t\tvar v = [];\r\n\t\r\n\t\t\tvar materialIndex = face.materialIndex;\r\n\t\r\n\t\t\t// Construct all of the vertices for this subdivision.\r\n\t\r\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\t\r\n\t\t\t\tv[ i ] = [];\r\n\t\r\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar rows = cols - i;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\t\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Construct all of the faces.\r\n\t\r\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\t\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\t\r\n\t\tfunction azimuth( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle above the XZ plane.\r\n\t\r\n\t\tfunction inclination( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\t\r\n\t\tfunction correctUV( uv, vector, azimuth ) {\r\n\t\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\t\treturn uv.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\t\tthis.parameters.vertices,\r\n\t\t\tthis.parameters.indices,\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\treturn geometry.copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/DodecahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t */\r\n\t\r\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\t\r\n\t\tvar vertices = [\r\n\t\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t\t 1,  1, - 1,     1,  1,  1,\r\n\t\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t\t 0,  r, - t,     0,  r,  t,\r\n\t\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t\t r, - t,  0,     r,  t,  0,\r\n\t\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t\t- t,  0,  r,     t,  0,  r\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/IcosahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/OctahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TetrahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ParametricGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t *\r\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ParametricGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\t\r\n\t\tvar verts = this.vertices;\r\n\t\tvar faces = this.faces;\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\t\r\n\t\tvar i, j, p;\r\n\t\tvar u, v;\r\n\t\r\n\t\tvar sliceCount = slices + 1;\r\n\t\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\t\r\n\t\t\tv = i / stacks;\r\n\t\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\t\r\n\t\t\t\tu = j / slices;\r\n\t\r\n\t\t\t\tp = func( u, v );\r\n\t\t\t\tverts.push( p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar a, b, c, d;\r\n\t\tvar uva, uvb, uvc, uvd;\r\n\t\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\t\r\n\t\t\t\ta = i * sliceCount + j;\r\n\t\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// console.log(this);\r\n\t\r\n\t\t// magic bullet\r\n\t\t// var diff = this.mergeVertices();\r\n\t\t// console.log('removed ', diff, ' vertices by merging');\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\t\r\n\t// File:src/extras/geometries/WireframeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeGeometry = function ( geometry ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\t\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tif ( geometry.index !== null ) {\r\n\t\r\n\t\t\t\t// Indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar indices = geometry.index.array;\r\n\t\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t\tif ( drawcalls.length === 0 ) {\r\n\t\r\n\t\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// allocate maximal size\r\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\t\r\n\t\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\t\r\n\t\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\t\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\t\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\t\tvar numTris = numEdges / 3;\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\t\r\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\t\r\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\t\r\n\t// File:src/extras/helpers/AxisHelper.js\r\n\t\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AxisHelper = function ( size ) {\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t0, 0, 0,  size, 0, 0,\r\n\t\t\t0, 0, 0,  0, size, 0,\r\n\t\t\t0, 0, 0,  0, 0, size\r\n\t\t] );\r\n\t\r\n\t\tvar colors = new Float32Array( [\r\n\t\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t\t0, 0, 1,  0, 0.6, 1\r\n\t\t] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\t\r\n\t// File:src/extras/helpers/ArrowHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\t\r\n\tTHREE.ArrowHelper = ( function () {\r\n\t\r\n\t\tvar lineGeometry = new THREE.Geometry();\r\n\t\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\t\r\n\t\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\t\r\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\t\tif ( length === undefined ) length = 1;\r\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\t\tthis.position.copy( origin );\r\n\t\t\t\r\n\t\t\tif ( headLength < length ) {\r\n\t\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\t\tthis.add( this.line );\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.cone );\r\n\t\r\n\t\t\tthis.setDirection( dir );\r\n\t\t\tthis.setLength( length, headLength, headWidth );\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\t\r\n\t\tvar axis = new THREE.Vector3();\r\n\t\tvar radians;\r\n\t\r\n\t\treturn function setDirection( dir ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\t\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\t\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\t\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\tif ( headLength < length ){\r\n\t\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t}\r\n\t\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\t\r\n\t\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/BoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BoxHelper = function ( object ) {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\t\r\n\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\tthis.update( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\t\r\n\tTHREE.BoxHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\treturn function ( object ) {\r\n\t\r\n\t\t\tbox.setFromObject( object );\r\n\t\r\n\t\t\tif ( box.empty() ) return;\r\n\t\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\t\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\t\r\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\r\n\t\t}\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/helpers/BoundingBoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\t// a helper to show the world-axis-aligned bounding box for an object\r\n\t\r\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.box = new THREE.Box3();\r\n\t\r\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.box.setFromObject( this.object );\r\n\t\r\n\t\tthis.box.size( this.scale );\r\n\t\r\n\t\tthis.box.center( this.position );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/CameraHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\t\r\n\tTHREE.CameraHelper = function ( camera ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\t\r\n\t\tvar pointMap = {};\r\n\t\r\n\t\t// colors\r\n\t\r\n\t\tvar hexFrustum = 0xffaa00;\r\n\t\tvar hexCone = 0xff0000;\r\n\t\tvar hexUp = 0x00aaff;\r\n\t\tvar hexTarget = 0xffffff;\r\n\t\tvar hexCross = 0x333333;\r\n\t\r\n\t\t// near\r\n\t\r\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\t\r\n\t\t// far\r\n\t\r\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\t\r\n\t\t// sides\r\n\t\r\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\t\r\n\t\t// cone\r\n\t\r\n\t\taddLine( \"p\", \"n1\", hexCone );\r\n\t\taddLine( \"p\", \"n2\", hexCone );\r\n\t\taddLine( \"p\", \"n3\", hexCone );\r\n\t\taddLine( \"p\", \"n4\", hexCone );\r\n\t\r\n\t\t// up\r\n\t\r\n\t\taddLine( \"u1\", \"u2\", hexUp );\r\n\t\taddLine( \"u2\", \"u3\", hexUp );\r\n\t\taddLine( \"u3\", \"u1\", hexUp );\r\n\t\r\n\t\t// target\r\n\t\r\n\t\taddLine( \"c\", \"t\", hexTarget );\r\n\t\taddLine( \"p\", \"c\", hexCross );\r\n\t\r\n\t\t// cross\r\n\t\r\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\t\r\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\t\r\n\t\tfunction addLine( a, b, hex ) {\r\n\t\r\n\t\t\taddPoint( a, hex );\r\n\t\t\taddPoint( b, hex );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction addPoint( id, hex ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\t\r\n\t\t\t\tpointMap[ id ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.pointMap = pointMap;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\t\r\n\tTHREE.CameraHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry, pointMap;\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar camera = new THREE.Camera();\r\n\t\r\n\t\tvar setPoint = function ( point, x, y, z ) {\r\n\t\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\t\r\n\t\t\tvar points = pointMap[ point ];\r\n\t\r\n\t\t\tif ( points !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\t\r\n\t\t\tvar w = 1, h = 1;\r\n\t\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\t\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\t\r\n\t\t\t// center / target\r\n\t\r\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\t\r\n\t\t\t// near\r\n\t\r\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\t\r\n\t\t\t// far\r\n\t\r\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\t\r\n\t\t\t// up\r\n\t\r\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\t\r\n\t\t\t// cross\r\n\t\r\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\t\r\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\t\r\n\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/DirectionalLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t\t);\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\t\r\n\t\tgeometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t);\r\n\t\r\n\t\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.targetLine = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar v3 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\t\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/EdgesHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @param object THREE.Mesh whose geometry will be used\r\n\t * @param hex line color\r\n\t * @param thresholdAngle the minimum angle (in degrees),\r\n\t * between the face normals of adjacent faces,\r\n\t * that is required to render an edge. A value of 10 means\r\n\t * an edge is only rendered if the angle is at least 10 degrees.\r\n\t */\r\n\t\r\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\t\r\n\t// File:src/extras/helpers/FaceNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\tvar idx = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/GridHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GridHelper = function ( size, step ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tthis.color1 = new THREE.Color( 0x444444 );\r\n\t\tthis.color2 = new THREE.Color( 0x888888 );\r\n\t\r\n\t\tfor ( var i = - size; i <= size; i += step ) {\r\n\t\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t\t);\r\n\t\r\n\t\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\t\r\n\t\t\tgeometry.colors.push( color, color, color, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\t\r\n\tTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\t\r\n\t\tthis.color1.set( colorCenterLine );\r\n\t\tthis.color2.set( colorGrid );\r\n\t\r\n\t\tthis.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/HemisphereLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\t\r\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.lightSphere );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightSphere.geometry.dispose();\r\n\t\tthis.lightSphere.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/PointLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\r\n\t\tvar d = light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\t\r\n\tTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SkeletonHelper.js\r\n\t\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkeletonHelper = function ( object ) {\r\n\t\r\n\t\tthis.bones = this.getBoneList( object );\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.dynamic = true;\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.root = object;\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\t\r\n\t\tvar boneList = [];\r\n\t\r\n\t\tif ( object instanceof THREE.Bone ) {\r\n\t\r\n\t\t\tboneList.push( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\t\r\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn boneList;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\t\r\n\t\tvar boneMatrix = new THREE.Matrix4();\r\n\t\r\n\t\tvar j = 0;\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tj += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SpotLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.SpotLightHelper = function ( light ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\t\r\n\t\tgeometry.translate( 0, - 0.5, 0 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\t\tthis.cone = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\t\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\t\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\t\r\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/VertexNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\t\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.attributes.normal.count\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\t\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\t\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\t\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\t\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/WireframeHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\t\r\n\t// File:src/extras/objects/ImmediateRenderObject.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.ImmediateRenderObject = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.render = function ( renderCallback ) {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\t\r\n\t// File:src/extras/objects/MorphBlendMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\t\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\t\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\t\r\n\t\tvar name = \"__default\";\r\n\t\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\t\r\n\t\tvar fps = numFrames / 1;\r\n\t\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\t\r\n\t\tvar animation = {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\r\n\t\t\tlength: end - start + 1,\r\n\t\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\t\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\t\r\n\t\t\tactive: false,\r\n\t\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\t\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\t\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var name in frameRanges ) {\r\n\t\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.weight = weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = time;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\t\r\n\t\tvar time = 0;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\ttime = animation.time;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn time;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\t\r\n\t\tvar duration = - 1;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tduration = animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn duration;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.active = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\t\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\t\r\n\t\t\tif ( ! animation.active ) continue;\r\n\t\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\t\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\t\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\t\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\t\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\t\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\t\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\t\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\t\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Export the THREE object for **Node.js**, with\r\n\t// backwards-compatibility for the old `require()` API. If we're in\r\n\t// the browser, add `_` as a global object via a string identifier,\r\n\t// for Closure Compiler \"advanced\" mode.\r\n\tif (true) {\r\n\t  if (typeof module !== 'undefined' && module.exports) {\r\n\t    exports = module.exports = THREE;\r\n\t  }\r\n\t  exports.THREE = THREE;\r\n\t} else {\r\n\t  this['THREE'] = THREE;\r\n\t}\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {!function(global, factory) {\n\t     true ? module.exports = factory() : 'function' == typeof define && define.amd ? define(factory) : global.preact = factory();\n\t}(this, function() {\n\t    'use strict';\n\t    function VNode(nodeName, attributes, children) {\n\t        this.nodeName = nodeName;\n\t        this.attributes = attributes;\n\t        this.children = children;\n\t    }\n\t    function extend(obj, props) {\n\t        for (var i in props) if (hasOwnProperty.call(props, i)) obj[i] = props[i];\n\t        return obj;\n\t    }\n\t    function clone(obj) {\n\t        var out = {};\n\t        for (var i in obj) out[i] = obj[i];\n\t        return out;\n\t    }\n\t    function memoize(fn, mem) {\n\t        mem = mem || {};\n\t        return function(k) {\n\t            return hasOwnProperty.call(mem, k) ? mem[k] : mem[k] = fn(k);\n\t        };\n\t    }\n\t    function delve(obj, key) {\n\t        for (var p = key.split('.'), i = 0; i < p.length && obj; i++) obj = obj[p[i]];\n\t        return obj;\n\t    }\n\t    function toArray(obj) {\n\t        var arr = [], i = obj.length;\n\t        for (;i--; ) arr[i] = obj[i];\n\t        return arr;\n\t    }\n\t    function styleObjToCss(s) {\n\t        var str = '';\n\t        for (var prop in s) {\n\t            var val = s[prop];\n\t            if (!empty(val)) {\n\t                if (str) str += ' ';\n\t                str += jsToCss(prop);\n\t                str += ': ';\n\t                str += val;\n\t                if ('number' == typeof val && !NON_DIMENSION_PROPS[prop]) str += 'px';\n\t                str += ';';\n\t            }\n\t        }\n\t        return str;\n\t    }\n\t    function hashToClassName(c) {\n\t        var str = '';\n\t        for (var prop in c) if (c[prop]) {\n\t            if (str) str += ' ';\n\t            str += prop;\n\t        }\n\t        return str;\n\t    }\n\t    function normalize(obj, prop, fn) {\n\t        var v = obj[prop];\n\t        if (v && !isString(v)) obj[prop] = fn(v);\n\t    }\n\t    function optionsHook(name, a, b) {\n\t        return hook(options, name, a, b);\n\t    }\n\t    function hook(obj, name, a, b, c) {\n\t        if (obj[name]) return obj[name](a, b, c); else ;\n\t    }\n\t    function deepHook(obj, type) {\n\t        do hook(obj, type); while (obj = obj._component);\n\t    }\n\t    function h(nodeName, attributes) {\n\t        var len = arguments.length, attributeChildren = attributes && attributes.children, children = void 0, arr = void 0, lastSimple = void 0;\n\t        if (attributeChildren) {\n\t            delete attributes.children;\n\t            if (3 > len) return h(nodeName, attributes, attributeChildren);\n\t        }\n\t        for (var i = 2; len > i; i++) {\n\t            var _p = arguments[i];\n\t            if (!falsey(_p)) {\n\t                if (!children) children = [];\n\t                if (_p.join) arr = _p; else {\n\t                    arr = SHARED_TEMP_ARRAY;\n\t                    arr[0] = _p;\n\t                }\n\t                for (var j = 0; j < arr.length; j++) {\n\t                    var child = arr[j], simple = !(falsey(child) || child instanceof VNode);\n\t                    if (simple) child = String(child);\n\t                    if (simple && lastSimple) children[children.length - 1] += child; else if (!falsey(child)) children.push(child);\n\t                    lastSimple = simple;\n\t                }\n\t            } else ;\n\t        }\n\t        var p = new VNode(nodeName, attributes || void 0, children || void 0);\n\t        optionsHook('vnode', p);\n\t        return p;\n\t    }\n\t    function createLinkedState(component, key, eventPath) {\n\t        var path = key.split('.'), p0 = path[0], len = path.length;\n\t        return function(e) {\n\t            var _component$setState;\n\t            var t = this, s = component.state, obj = s, v = void 0, i = void 0;\n\t            if (isString(eventPath)) {\n\t                v = delve(e, eventPath);\n\t                if (empty(v) && (t = t._component)) v = delve(t, eventPath);\n\t            } else v = (t.nodeName + t.type).match(/^input(check|rad)/i) ? t.checked : t.value;\n\t            if (isFunction(v)) v = v.call(t);\n\t            if (len > 1) {\n\t                for (i = 0; len - 1 > i; i++) obj = obj[path[i]] || (obj[path[i]] = {});\n\t                obj[path[i]] = v;\n\t                v = s[p0];\n\t            }\n\t            component.setState((_component$setState = {}, _component$setState[p0] = v, _component$setState));\n\t        };\n\t    }\n\t    function enqueueRender(component) {\n\t        if (1 === items.push(component)) (options.debounceRendering || setImmediate)(rerender);\n\t    }\n\t    function rerender() {\n\t        if (items.length) {\n\t            var currentItems = items, p = void 0;\n\t            items = itemsOffline;\n\t            itemsOffline = currentItems;\n\t            for (;p = currentItems.pop(); ) if (p._dirty) renderComponent(p);\n\t        }\n\t    }\n\t    function isFunctionalComponent(_ref) {\n\t        var nodeName = _ref.nodeName;\n\t        return isFunction(nodeName) && !(nodeName.prototype && nodeName.prototype.render);\n\t    }\n\t    function buildFunctionalComponent(vnode, context) {\n\t        return vnode.nodeName(getNodeProps(vnode), context || EMPTY) || EMPTY_BASE;\n\t    }\n\t    function ensureNodeData(node) {\n\t        return node[ATTR_KEY] || (node[ATTR_KEY] = {});\n\t    }\n\t    function getNodeType(node) {\n\t        return node.nodeType;\n\t    }\n\t    function appendChildren(parent, children) {\n\t        var len = children.length, many = len > 2, into = many ? document.createDocumentFragment() : parent;\n\t        for (var i = 0; len > i; i++) into.appendChild(children[i]);\n\t        if (many) parent.appendChild(into);\n\t    }\n\t    function removeNode(node) {\n\t        var p = node.parentNode;\n\t        if (p) p.removeChild(node);\n\t    }\n\t    function getAccessor(node, name, value, cache) {\n\t        if ('type' !== name && 'style' !== name && name in node) return node[name];\n\t        var attrs = node[ATTR_KEY];\n\t        if (cache !== !1 && attrs && hasOwnProperty.call(attrs, name)) return attrs[name];\n\t        if ('class' === name) return node.className;\n\t        if ('style' === name) return node.style.cssText; else return value;\n\t    }\n\t    function setAccessor(node, name, value) {\n\t        if ('class' === name) node.className = value || ''; else if ('style' === name) node.style.cssText = value || ''; else if ('dangerouslySetInnerHTML' === name) {\n\t            if (value && value.__html) node.innerHTML = value.__html;\n\t        } else if ('key' === name || name in node && 'type' !== name) {\n\t            node[name] = value;\n\t            if (falsey(value)) node.removeAttribute(name);\n\t        } else setComplexAccessor(node, name, value);\n\t        ensureNodeData(node)[name] = value;\n\t    }\n\t    function setComplexAccessor(node, name, value) {\n\t        if ('on' !== name.substring(0, 2)) {\n\t            var type = typeof value;\n\t            if (falsey(value)) node.removeAttribute(name); else if ('function' !== type && 'object' !== type) node.setAttribute(name, value);\n\t        } else {\n\t            var _type = normalizeEventName(name), l = node._listeners || (node._listeners = {}), fn = !l[_type] ? 'add' : !value ? 'remove' : null;\n\t            if (fn) node[fn + 'EventListener'](_type, eventProxy);\n\t            l[_type] = value;\n\t        }\n\t    }\n\t    function eventProxy(e) {\n\t        var fn = this._listeners[normalizeEventName(e.type)];\n\t        if (fn) return fn.call(this, optionsHook('event', e) || e); else ;\n\t    }\n\t    function getNodeAttributes(node) {\n\t        return node[ATTR_KEY] || getRawNodeAttributes(node) || EMPTY;\n\t    }\n\t    function getRawNodeAttributes(node) {\n\t        var list = node.attributes;\n\t        if (!list || !list.getNamedItem) return list; else return getAttributesAsObject(list);\n\t    }\n\t    function getAttributesAsObject(list) {\n\t        var attrs = void 0;\n\t        for (var i = list.length; i--; ) {\n\t            var item = list[i];\n\t            if (!attrs) attrs = {};\n\t            attrs[item.name] = item.value;\n\t        }\n\t        return attrs;\n\t    }\n\t    function isSameNodeType(node, vnode) {\n\t        if (isFunctionalComponent(vnode)) return !0;\n\t        var nodeName = vnode.nodeName;\n\t        if (isFunction(nodeName)) return node._componentConstructor === nodeName;\n\t        if (3 === getNodeType(node)) return isString(vnode); else return toLowerCase(node.nodeName) === nodeName;\n\t    }\n\t    function getNodeProps(vnode) {\n\t        var props = clone(vnode.attributes), c = vnode.children;\n\t        if (c) props.children = c;\n\t        var defaultProps = vnode.nodeName.defaultProps;\n\t        if (defaultProps) for (var i in defaultProps) if (hasOwnProperty.call(defaultProps, i) && !(i in props)) props[i] = defaultProps[i];\n\t        return props;\n\t    }\n\t    function collectNode(node) {\n\t        cleanNode(node);\n\t        var name = normalizeName(node.nodeName), list = nodes[name];\n\t        if (list) list.push(node); else nodes[name] = [ node ];\n\t    }\n\t    function createNode(nodeName) {\n\t        var name = normalizeName(nodeName), list = nodes[name], node = list && list.pop() || document.createElement(nodeName);\n\t        ensureNodeData(node);\n\t        return node;\n\t    }\n\t    function cleanNode(node) {\n\t        removeNode(node);\n\t        if (3 !== getNodeType(node)) {\n\t            if (!node[ATTR_KEY]) node[ATTR_KEY] = getRawNodeAttributes(node);\n\t            node._component = node._componentConstructor = null;\n\t        }\n\t    }\n\t    function diff(dom, vnode, context) {\n\t        var originalAttributes = vnode.attributes;\n\t        for (;isFunctionalComponent(vnode); ) vnode = buildFunctionalComponent(vnode, context);\n\t        if (isFunction(vnode.nodeName)) return buildComponentFromVNode(dom, vnode, context);\n\t        if (isString(vnode)) {\n\t            if (dom) {\n\t                var type = getNodeType(dom);\n\t                if (3 === type) {\n\t                    dom[TEXT_CONTENT] = vnode;\n\t                    return dom;\n\t                } else if (1 === type) collectNode(dom);\n\t            }\n\t            return document.createTextNode(vnode);\n\t        }\n\t        var out = dom, nodeName = vnode.nodeName || UNDEFINED_ELEMENT;\n\t        if (!dom) out = createNode(nodeName); else if (toLowerCase(dom.nodeName) !== nodeName) {\n\t            out = createNode(nodeName);\n\t            appendChildren(out, toArray(dom.childNodes));\n\t            recollectNodeTree(dom);\n\t        }\n\t        innerDiffNode(out, vnode, context);\n\t        diffAttributes(out, vnode);\n\t        if (originalAttributes && originalAttributes.ref) (out[ATTR_KEY].ref = originalAttributes.ref)(out);\n\t        return out;\n\t    }\n\t    function innerDiffNode(dom, vnode, context) {\n\t        var children = void 0, keyed = void 0, keyedLen = 0, len = dom.childNodes.length, childrenLen = 0;\n\t        if (len) {\n\t            children = [];\n\t            for (var i = 0; len > i; i++) {\n\t                var child = dom.childNodes[i], key = child._component ? child._component.__key : getAccessor(child, 'key');\n\t                if (!empty(key)) {\n\t                    if (!keyed) keyed = {};\n\t                    keyed[key] = child;\n\t                    keyedLen++;\n\t                } else children[childrenLen++] = child;\n\t            }\n\t        }\n\t        var vchildren = vnode.children, vlen = vchildren && vchildren.length, min = 0;\n\t        if (vlen) for (var i = 0; vlen > i; i++) {\n\t            var vchild = vchildren[i], child = void 0;\n\t            if (keyedLen) {\n\t                var attrs = vchild.attributes, key = attrs && attrs.key;\n\t                if (!empty(key) && hasOwnProperty.call(keyed, key)) {\n\t                    child = keyed[key];\n\t                    keyed[key] = null;\n\t                    keyedLen--;\n\t                }\n\t            }\n\t            if (!child && childrenLen > min) for (var j = min; childrenLen > j; j++) {\n\t                var c = children[j];\n\t                if (c && isSameNodeType(c, vchild)) {\n\t                    child = c;\n\t                    children[j] = null;\n\t                    if (j === childrenLen - 1) childrenLen--;\n\t                    if (j === min) min++;\n\t                    break;\n\t                }\n\t            }\n\t            child = diff(child, vchild, context);\n\t            if (dom.childNodes[i] !== child) {\n\t                var c = child.parentNode !== dom && child._component, next = dom.childNodes[i + 1];\n\t                if (c) deepHook(c, 'componentWillMount');\n\t                if (next) dom.insertBefore(child, next); else dom.appendChild(child);\n\t                if (c) deepHook(c, 'componentDidMount');\n\t            }\n\t        }\n\t        if (keyedLen) for (var i in keyed) if (hasOwnProperty.call(keyed, i) && keyed[i]) children[min = childrenLen++] = keyed[i];\n\t        if (childrenLen > min) removeOrphanedChildren(children);\n\t    }\n\t    function removeOrphanedChildren(children, unmountOnly) {\n\t        for (var i = children.length; i--; ) {\n\t            var child = children[i];\n\t            if (child) recollectNodeTree(child, unmountOnly);\n\t        }\n\t    }\n\t    function recollectNodeTree(node, unmountOnly) {\n\t        var attrs = node[ATTR_KEY];\n\t        if (attrs) hook(attrs, 'ref', null);\n\t        var component = node._component;\n\t        if (component) unmountComponent(component, !unmountOnly); else {\n\t            if (!unmountOnly) {\n\t                if (1 !== getNodeType(node)) {\n\t                    removeNode(node);\n\t                    return;\n\t                }\n\t                collectNode(node);\n\t            }\n\t            var c = node.childNodes;\n\t            if (c && c.length) removeOrphanedChildren(c, unmountOnly);\n\t        }\n\t    }\n\t    function diffAttributes(dom, vnode) {\n\t        var old = getNodeAttributes(dom) || EMPTY, attrs = vnode.attributes || EMPTY, name = void 0, value = void 0;\n\t        for (name in old) if (empty(attrs[name])) setAccessor(dom, name, null);\n\t        if (attrs !== EMPTY) for (name in attrs) if (hasOwnProperty.call(attrs, name)) {\n\t            value = attrs[name];\n\t            if (!empty(value) && value != getAccessor(dom, name)) setAccessor(dom, name, value);\n\t        }\n\t    }\n\t    function collectComponent(component) {\n\t        var name = component.constructor.name, list = components[name];\n\t        if (list) list.push(component); else components[name] = [ component ];\n\t    }\n\t    function createComponent(Ctor, props, context) {\n\t        var list = components[Ctor.name], len = list && list.length, c = void 0;\n\t        for (var i = 0; len > i; i++) {\n\t            c = list[i];\n\t            if (c.constructor === Ctor) {\n\t                list.splice(i, 1);\n\t                var inst = new Ctor(props, context);\n\t                inst.nextBase = c.base;\n\t                return inst;\n\t            }\n\t        }\n\t        return new Ctor(props, context);\n\t    }\n\t    function triggerComponentRender(component) {\n\t        if (!component._dirty) {\n\t            component._dirty = !0;\n\t            enqueueRender(component);\n\t        }\n\t    }\n\t    function setComponentProps(component, props, opts, context) {\n\t        var d = component._disableRendering;\n\t        component.__ref = props.ref;\n\t        component.__key = props.key;\n\t        delete props.ref;\n\t        delete props.key;\n\t        component._disableRendering = !0;\n\t        if (context) {\n\t            if (!component.prevContext) component.prevContext = component.context;\n\t            component.context = context;\n\t        }\n\t        if (component.base) hook(component, 'componentWillReceiveProps', props, component.context);\n\t        if (!component.prevProps) component.prevProps = component.props;\n\t        component.props = props;\n\t        component._disableRendering = d;\n\t        if (!opts || opts.render !== !1) if (opts && opts.renderSync || options.syncComponentUpdates !== !1) renderComponent(component); else triggerComponentRender(component);\n\t        hook(component, '__ref', component);\n\t    }\n\t    function renderComponent(component, opts) {\n\t        if (!component._disableRendering) {\n\t            var skip = void 0, rendered = void 0, props = component.props, state = component.state, context = component.context, previousProps = component.prevProps || props, previousState = component.prevState || state, previousContext = component.prevContext || context, isUpdate = component.base, initialBase = isUpdate || component.nextBase;\n\t            if (isUpdate) {\n\t                component.props = previousProps;\n\t                component.state = previousState;\n\t                component.context = previousContext;\n\t                if (hook(component, 'shouldComponentUpdate', props, state, context) === !1) skip = !0; else hook(component, 'componentWillUpdate', props, state, context);\n\t                component.props = props;\n\t                component.state = state;\n\t                component.context = context;\n\t            }\n\t            component.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\t            component._dirty = !1;\n\t            if (!skip) {\n\t                rendered = hook(component, 'render', props, state, context);\n\t                var childComponent = rendered && rendered.nodeName, childContext = component.getChildContext ? component.getChildContext() : context, toUnmount = void 0, base = void 0;\n\t                if (isFunction(childComponent) && childComponent.prototype.render) {\n\t                    var inst = component._component;\n\t                    if (inst && inst.constructor !== childComponent) {\n\t                        toUnmount = inst;\n\t                        inst = null;\n\t                    }\n\t                    var childProps = getNodeProps(rendered);\n\t                    if (inst) setComponentProps(inst, childProps, SYNC_RENDER, childContext); else {\n\t                        inst = createComponent(childComponent, childProps, childContext);\n\t                        inst._parentComponent = component;\n\t                        component._component = inst;\n\t                        if (isUpdate) deepHook(inst, 'componentWillMount');\n\t                        setComponentProps(inst, childProps, NO_RENDER, childContext);\n\t                        renderComponent(inst, DOM_RENDER);\n\t                        if (isUpdate) deepHook(inst, 'componentDidMount');\n\t                    }\n\t                    base = inst.base;\n\t                } else {\n\t                    var cbase = initialBase;\n\t                    toUnmount = component._component;\n\t                    if (toUnmount) cbase = component._component = null;\n\t                    if (initialBase || opts && opts.build) base = diff(cbase, rendered || EMPTY_BASE, childContext);\n\t                }\n\t                if (initialBase && base !== initialBase) {\n\t                    var p = initialBase.parentNode;\n\t                    if (p && base !== p) p.replaceChild(base, initialBase);\n\t                }\n\t                if (toUnmount) unmountComponent(toUnmount, !0);\n\t                component.base = base;\n\t                if (base) {\n\t                    var componentRef = component, t = component;\n\t                    for (;t = t._parentComponent; ) componentRef = t;\n\t                    base._component = componentRef;\n\t                    base._componentConstructor = componentRef.constructor;\n\t                }\n\t                if (isUpdate) hook(component, 'componentDidUpdate', previousProps, previousState, previousContext);\n\t            }\n\t            var cb = component._renderCallbacks, fn = void 0;\n\t            if (cb) for (;fn = cb.pop(); ) fn.call(component);\n\t            return rendered;\n\t        }\n\t    }\n\t    function buildComponentFromVNode(dom, vnode, context) {\n\t        var c = dom && dom._component, oldDom = dom;\n\t        var isOwner = c && dom._componentConstructor === vnode.nodeName;\n\t        for (;c && !isOwner && (c = c._parentComponent); ) isOwner = c.constructor === vnode.nodeName;\n\t        if (isOwner) {\n\t            setComponentProps(c, getNodeProps(vnode), SYNC_RENDER, context);\n\t            dom = c.base;\n\t        } else {\n\t            if (c) {\n\t                unmountComponent(c, !0);\n\t                dom = oldDom = null;\n\t            }\n\t            dom = createComponentFromVNode(vnode, dom, context);\n\t            if (oldDom && dom !== oldDom) {\n\t                oldDom._component = null;\n\t                recollectNodeTree(oldDom);\n\t            }\n\t        }\n\t        return dom;\n\t    }\n\t    function createComponentFromVNode(vnode, dom, context) {\n\t        var props = getNodeProps(vnode);\n\t        var component = createComponent(vnode.nodeName, props, context);\n\t        if (dom && !component.base) component.base = dom;\n\t        setComponentProps(component, props, NO_RENDER, context);\n\t        renderComponent(component, DOM_RENDER);\n\t        return component.base;\n\t    }\n\t    function unmountComponent(component, remove) {\n\t        hook(component, '__ref', null);\n\t        hook(component, 'componentWillUnmount');\n\t        var inner = component._component;\n\t        if (inner) {\n\t            unmountComponent(inner, remove);\n\t            remove = !1;\n\t        }\n\t        var base = component.base;\n\t        if (base) {\n\t            if (remove !== !1) removeNode(base);\n\t            removeOrphanedChildren(base.childNodes, !0);\n\t        }\n\t        if (remove) {\n\t            component._parentComponent = null;\n\t            collectComponent(component);\n\t        }\n\t        hook(component, 'componentDidUnmount');\n\t    }\n\t    function Component(props, context) {\n\t        this._dirty = this._disableRendering = !1;\n\t        this.prevState = this.prevProps = this.prevContext = this.base = this.nextBase = this._parentComponent = this._component = this.__ref = this.__key = this._linkedStates = this._renderCallbacks = null;\n\t        this.context = context || {};\n\t        this.props = props;\n\t        this.state = hook(this, 'getInitialState') || {};\n\t    }\n\t    function render(vnode, parent, merge) {\n\t        var existing = merge && merge._component && merge._componentConstructor === vnode.nodeName, built = diff(merge, vnode), c = !existing && built._component;\n\t        if (c) deepHook(c, 'componentWillMount');\n\t        if (built.parentNode !== parent) parent.appendChild(built);\n\t        if (c) deepHook(c, 'componentDidMount');\n\t        return built;\n\t    }\n\t    var NO_RENDER = {\n\t        render: !1\n\t    };\n\t    var SYNC_RENDER = {\n\t        renderSync: !0\n\t    };\n\t    var DOM_RENDER = {\n\t        build: !0\n\t    };\n\t    var EMPTY = {};\n\t    var EMPTY_BASE = '';\n\t    var HAS_DOM = 'undefined' != typeof document;\n\t    var TEXT_CONTENT = !HAS_DOM || 'textContent' in document ? 'textContent' : 'nodeValue';\n\t    var ATTR_KEY = 'undefined' != typeof Symbol ? Symbol['for']('preactattr') : '__preactattr_';\n\t    var UNDEFINED_ELEMENT = 'undefined';\n\t    var NON_DIMENSION_PROPS = {\n\t        boxFlex: 1,\n\t        boxFlexGroup: 1,\n\t        columnCount: 1,\n\t        fillOpacity: 1,\n\t        flex: 1,\n\t        flexGrow: 1,\n\t        flexPositive: 1,\n\t        flexShrink: 1,\n\t        flexNegative: 1,\n\t        fontWeight: 1,\n\t        lineClamp: 1,\n\t        lineHeight: 1,\n\t        opacity: 1,\n\t        order: 1,\n\t        orphans: 1,\n\t        strokeOpacity: 1,\n\t        widows: 1,\n\t        zIndex: 1,\n\t        zoom: 1\n\t    };\n\t    var isFunction = function(obj) {\n\t        return 'function' == typeof obj;\n\t    };\n\t    var isString = function(obj) {\n\t        return 'string' == typeof obj;\n\t    };\n\t    var hasOwnProperty = {}.hasOwnProperty;\n\t    var empty = function(x) {\n\t        return null == x;\n\t    };\n\t    var falsey = function(value) {\n\t        return value === !1 || null == value;\n\t    };\n\t    var jsToCss = memoize(function(s) {\n\t        return s.replace(/([A-Z])/g, '-$1').toLowerCase();\n\t    });\n\t    var toLowerCase = memoize(function(s) {\n\t        return s.toLowerCase();\n\t    });\n\t    var ch = void 0;\n\t    try {\n\t        ch = new MessageChannel();\n\t    } catch (e) {}\n\t    var setImmediate = ch ? function(f) {\n\t        ch.port1.onmessage = f;\n\t        ch.port2.postMessage('');\n\t    } : setTimeout;\n\t    var options = {\n\t        vnode: function(n) {\n\t            var attrs = n.attributes;\n\t            if (attrs && !isFunction(n.nodeName)) {\n\t                var p = attrs.className;\n\t                if (p) {\n\t                    attrs['class'] = p;\n\t                    delete attrs.className;\n\t                }\n\t                if (attrs['class']) normalize(attrs, 'class', hashToClassName);\n\t                if (attrs.style) normalize(attrs, 'style', styleObjToCss);\n\t            }\n\t        }\n\t    };\n\t    var SHARED_TEMP_ARRAY = [];\n\t    var items = [];\n\t    var itemsOffline = [];\n\t    var normalizeEventName = memoize(function(t) {\n\t        return t.replace(/^on/i, '').toLowerCase();\n\t    });\n\t    var nodes = {};\n\t    var normalizeName = memoize(function(name) {\n\t        return name.toUpperCase();\n\t    });\n\t    var components = {};\n\t    extend(Component.prototype, {\n\t        linkState: function(key, eventPath) {\n\t            var c = this._linkedStates || (this._linkedStates = {}), cacheKey = key + '|' + (eventPath || '');\n\t            return c[cacheKey] || (c[cacheKey] = createLinkedState(this, key, eventPath));\n\t        },\n\t        setState: function(state, callback) {\n\t            var s = this.state;\n\t            if (!this.prevState) this.prevState = clone(s);\n\t            extend(s, isFunction(state) ? state(s, this.props) : state);\n\t            if (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);\n\t            triggerComponentRender(this);\n\t        },\n\t        forceUpdate: function() {\n\t            renderComponent(this);\n\t        },\n\t        render: function() {\n\t            return null;\n\t        }\n\t    });\n\t    var preact = {\n\t        h: h,\n\t        Component: Component,\n\t        render: render,\n\t        rerender: rerender,\n\t        options: options,\n\t        hooks: options\n\t    };\n\t    return preact;\n\t});\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10).setImmediate))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Config = function Config() {\n\t  _classCallCheck(this, Config);\n\t};\n\t\n\texports.default = Config;\n\t\n\tConfig.SCALE = 15;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(global,factory){if(true){!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}else if(typeof exports !== 'undefined'){factory(exports);}else {var mod={exports:{}};factory(mod.exports);global.decko = mod.exports;}})(this,function(exports){'use strict';exports.__esModule = true;var EMPTY={};var HOP=Object.prototype.hasOwnProperty;var fns={memoize:function memoize(fn){var opt=arguments.length <= 1 || arguments[1] === undefined?EMPTY:arguments[1];var cache=opt.cache || {};return function(){for(var _len=arguments.length,a=Array(_len),_key=0;_key < _len;_key++) {a[_key] = arguments[_key];}var k=String(a[0]);if(opt.caseSensitive === false)k = k.toLowerCase();return HOP.call(cache,k)?cache[k]:cache[k] = fn.apply(this,a);};},debounce:function debounce(fn,opts){if(typeof opts === 'function'){var p=fn;fn = opts;opts = p;}var delay=opts && opts.delay || opts || 0,args=undefined,context=undefined,timer=undefined;return function(){for(var _len2=arguments.length,a=Array(_len2),_key2=0;_key2 < _len2;_key2++) {a[_key2] = arguments[_key2];}args = a;context = this;if(!timer)timer = setTimeout(function(){fn.apply(context,args);args = context = timer = null;},delay);};},bind:function bind(target,key,_ref){var fn=_ref.value;return {configurable:true,get:function get(){var value=fn.bind(this);Object.defineProperty(this,key,{value:value,configurable:true,writable:true});return value;}};}};var memoize=multiMethod(fns.memoize),debounce=multiMethod(fns.debounce),bind=multiMethod(function(f,c){return f.bind(c);},function(){return fns.bind;});exports.memoize = memoize;exports.debounce = debounce;exports.bind = bind;exports['default'] = {memoize:memoize,debounce:debounce,bind:bind};function multiMethod(inner,deco){deco = deco || inner.decorate || decorator(inner);var d=deco();return function(){for(var _len3=arguments.length,args=Array(_len3),_key3=0;_key3 < _len3;_key3++) {args[_key3] = arguments[_key3];}var l=args.length;return (l < 2?deco:l > 2?d:inner).apply(undefined,args);};}function decorator(fn){return function(opt){return typeof opt === 'function'?fn(opt):function(target,key,desc){desc.value = fn(desc.value,opt,target,key,desc);};};}});\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getPrototype = __webpack_require__(38),\n\t    isHostObject = __webpack_require__(39),\n\t    isObjectLike = __webpack_require__(40);\n\t\n\t/** `Object#toString` result references. */\n\tvar objectTag = '[object Object]';\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = Function.prototype.toString;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Used to infer the `Object` constructor. */\n\tvar objectCtorString = funcToString.call(Object);\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/**\n\t * Checks if `value` is a plain object, that is, an object created by the\n\t * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.8.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a plain object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * _.isPlainObject(new Foo);\n\t * // => false\n\t *\n\t * _.isPlainObject([1, 2, 3]);\n\t * // => false\n\t *\n\t * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t * // => true\n\t *\n\t * _.isPlainObject(Object.create(null));\n\t * // => true\n\t */\n\tfunction isPlainObject(value) {\n\t  if (!isObjectLike(value) ||\n\t      objectToString.call(value) != objectTag || isHostObject(value)) {\n\t    return false;\n\t  }\n\t  var proto = getPrototype(value);\n\t  if (proto === null) {\n\t    return true;\n\t  }\n\t  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t  return (typeof Ctor == 'function' &&\n\t    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t}\n\t\n\tmodule.exports = isPlainObject;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(43), __webpack_require__(42), __webpack_require__(2)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'proptypes', 'preact-svg', 'preact'], factory) :\n\t\t(factory((global.preactCompat = global.preactCompat || {}),global.PropTypes,global.preactSvg,global.preact));\n\t}(this, function (exports,PropTypes,SVG,preact) { 'use strict';\n\t\n\t\tPropTypes = 'default' in PropTypes ? PropTypes['default'] : PropTypes;\n\t\tSVG = 'default' in SVG ? SVG['default'] : SVG;\n\t\n\t\tvar babelHelpers = {};\n\t\n\t\tbabelHelpers.classCallCheck = function (instance, Constructor) {\n\t\t  if (!(instance instanceof Constructor)) {\n\t\t    throw new TypeError(\"Cannot call a class as a function\");\n\t\t  }\n\t\t};\n\t\n\t\tbabelHelpers.createClass = function () {\n\t\t  function defineProperties(target, props) {\n\t\t    for (var i = 0; i < props.length; i++) {\n\t\t      var descriptor = props[i];\n\t\t      descriptor.enumerable = descriptor.enumerable || false;\n\t\t      descriptor.configurable = true;\n\t\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t\t    }\n\t\t  }\n\t\n\t\t  return function (Constructor, protoProps, staticProps) {\n\t\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t\t    return Constructor;\n\t\t  };\n\t\t}();\n\t\n\t\tbabelHelpers.inherits = function (subClass, superClass) {\n\t\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t\t    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n\t\t  }\n\t\n\t\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t\t    constructor: {\n\t\t      value: subClass,\n\t\t      enumerable: false,\n\t\t      writable: true,\n\t\t      configurable: true\n\t\t    }\n\t\t  });\n\t\t  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t\t};\n\t\n\t\tbabelHelpers.possibleConstructorReturn = function (self, call) {\n\t\t  if (!self) {\n\t\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t\t  }\n\t\n\t\t  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n\t\t};\n\t\n\t\tbabelHelpers;\n\t\n\t\tvar ELEMENTS = 'a abbr address area article aside audio b base bdi bdo big blockquote body br button canvas caption cite code col colgroup data datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 head header hgroup hr html i iframe img input ins kbd keygen label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td textarea tfoot th thead time title tr track u ul var video wbr circle clipPath defs ellipse g image line linearGradient mask path pattern polygon polyline radialGradient rect stop svg text tspan'.split(' ');\n\t\n\t\tvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\t\n\t\tvar AUTOBIND_BLACKLIST = {\n\t\t\tconstructor: 1,\n\t\t\trender: 1,\n\t\t\tshouldComponentUpdate: 1,\n\t\t\tcomponentWillRecieveProps: 1,\n\t\t\tcomponentWillUpdate: 1,\n\t\t\tcomponentDidUpdate: 1,\n\t\t\tcomponentWillMount: 1,\n\t\t\tcomponentDidMount: 1,\n\t\t\tcomponentWillUnmount: 1,\n\t\t\tcomponentDidUnmount: 1\n\t\t};\n\t\n\t\tvar BYPASS_HOOK = {};\n\t\n\t\tvar DEV = typeof process !== 'undefined' && process.env && (\"production\") !== 'production';\n\t\n\t\tvar EmptyComponent = function () {\n\t\t\treturn null;\n\t\t};\n\t\n\t\tvar VNode = preact.h('').constructor;\n\t\tVNode.prototype.$$typeof = REACT_ELEMENT_TYPE;\n\t\n\t\tObject.defineProperty(VNode.prototype, 'type', {\n\t\t\tget: function () {\n\t\t\t\treturn this.nodeName;\n\t\t\t},\n\t\t\tset: function (v) {\n\t\t\t\tthis.nodeName = v;\n\t\t\t}\n\t\t});\n\t\n\t\tObject.defineProperty(VNode.prototype, 'props', {\n\t\t\tget: function () {\n\t\t\t\treturn this.attributes;\n\t\t\t},\n\t\t\tset: function (v) {\n\t\t\t\tthis.attributes = v;\n\t\t\t}\n\t\t});\n\t\n\t\tfunction render$1(vnode, parent, callback) {\n\t\t\tvar prev = parent._preactCompatRendered;\n\t\t\tif (prev && prev.parentNode !== parent) prev = null;\n\t\t\tvar out = preact.render(vnode, parent, prev);\n\t\t\tparent._preactCompatRendered = out;\n\t\t\tif (typeof callback === 'function') callback();\n\t\t\treturn out && out._component;\n\t\t}\n\t\n\t\tfunction unmountComponentAtNode(container) {\n\t\t\tvar existing = container._preactCompatRendered;\n\t\t\tif (existing && existing.parentNode === container) {\n\t\t\t\tpreact.render(preact.h(EmptyComponent), container, existing);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\n\t\tvar ARR = [];\n\t\n\t\tvar Children = {\n\t\t\tmap: function (children, fn, ctx) {\n\t\t\t\tchildren = Children.toArray(children);\n\t\t\t\tif (ctx && ctx !== children) fn = fn.bind(ctx);\n\t\t\t\treturn children.map(fn);\n\t\t\t},\n\t\t\tforEach: function (children, fn, ctx) {\n\t\t\t\tchildren = Children.toArray(children);\n\t\t\t\tif (ctx && ctx !== children) fn = fn.bind(ctx);\n\t\t\t\tchildren.forEach(fn);\n\t\t\t},\n\t\t\tcount: function (children) {\n\t\t\t\tchildren = Children.toArray(children);\n\t\t\t\treturn children.length;\n\t\t\t},\n\t\t\tonly: function (children) {\n\t\t\t\tchildren = Children.toArray(children);\n\t\t\t\tif (children.length !== 1) throw new Error('Children.only() expects only one child.');\n\t\t\t\treturn children[0];\n\t\t\t},\n\t\t\ttoArray: function (children) {\n\t\t\t\treturn Array.isArray && Array.isArray(children) ? children : ARR.concat(children);\n\t\t\t}\n\t\t};\n\t\n\t\tvar currentComponent = void 0;\n\t\n\t\tfunction createFactory(type) {\n\t\t\treturn function () {\n\t\t\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\t\targs[_key] = arguments[_key];\n\t\t\t\t}\n\t\n\t\t\t\treturn createElement.apply(undefined, [type].concat(args));\n\t\t\t};\n\t\t}\n\t\n\t\tvar DOM = {};\n\t\tfor (var i = ELEMENTS.length; i--;) {\n\t\t\tDOM[ELEMENTS[i]] = createFactory(ELEMENTS[i]);\n\t\t}\n\t\n\t\tfunction createElement() {\n\t\t\tvar vnode = preact.h.apply(undefined, arguments);\n\t\n\t\t\tif (vnode.nodeName === 'svg') {\n\t\t\t\tvnode.nodeName = SVG;\n\t\t\t}\n\t\n\t\t\tapplyClassName(vnode);\n\t\n\t\t\tvar ref = vnode.attributes && vnode.attributes.ref;\n\t\t\tif (currentComponent && ref && typeof ref === 'string') {\n\t\t\t\tvnode.attributes.ref = createStringRefProxy(ref, currentComponent);\n\t\t\t}\n\t\n\t\t\treturn vnode;\n\t\t}\n\t\n\t\tfunction cloneElement(element, props) {\n\t\t\tfor (var _len2 = arguments.length, children = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t\t\t\tchildren[_key2 - 2] = arguments[_key2];\n\t\t\t}\n\t\n\t\t\treturn createElement.apply(undefined, [element.nodeName || element.type, extend({}, element.attributes || element.props || {}, props)].concat(children));\n\t\t}\n\t\n\t\tfunction isValidElement(element) {\n\t\t\treturn element && (element instanceof VNode || element.$$typeof === REACT_ELEMENT_TYPE);\n\t\t}\n\t\n\t\tfunction createStringRefProxy(name, component) {\n\t\t\treturn component._refProxies[name] || (component._refProxies[name] = function (resolved) {\n\t\t\t\tif (component && component.refs) {\n\t\t\t\t\tcomponent.refs[name] = resolved;\n\t\t\t\t\tif (resolved === null) {\n\t\t\t\t\t\tdelete component._refProxies[name];\n\t\t\t\t\t\tcomponent = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\tfunction applyClassName(_ref) {\n\t\t\tvar attributes = _ref.attributes;\n\t\n\t\t\tif (!attributes) return;\n\t\t\tvar cl = attributes.className || attributes.class;\n\t\t\tif (cl) attributes.className = cl;\n\t\t}\n\t\n\t\tfunction extend(base) {\n\t\t\tfor (var _len3 = arguments.length, objs = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t\t\t\tobjs[_key3 - 1] = arguments[_key3];\n\t\t\t}\n\t\n\t\t\tfor (var i = 0; i < objs.length; i++) {\n\t\t\t\tfor (var key in objs[i]) {\n\t\t\t\t\tif (objs[i].hasOwnProperty(key)) {\n\t\t\t\t\t\tvar v = objs[i][key];\n\t\t\t\t\t\tif (v !== null && v !== undefined) {\n\t\t\t\t\t\t\tbase[key] = v;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\t\n\t\tvar findDOMNode = function (component) {\n\t\t\treturn component.base || component;\n\t\t};\n\t\n\t\tfunction F() {}\n\t\n\t\tfunction createClass(obj) {\n\t\t\tvar cl = function (props, context) {\n\t\t\t\textend(this, obj);\n\t\t\t\tComponent$1.call(this, props, context, BYPASS_HOOK);\n\t\t\t\tbindAll(this);\n\t\t\t\tnewComponentHook.call(this, props, context);\n\t\t\t};\n\t\n\t\t\tif (obj.propTypes) {\n\t\t\t\tcl.propTypes = obj.propTypes;\n\t\t\t}\n\t\t\tif (obj.defaultProps) {\n\t\t\t\tcl.defaultProps = obj.defaultProps;\n\t\t\t}\n\t\t\tif (obj.getDefaultProps) {\n\t\t\t\tcl.defaultProps = obj.getDefaultProps();\n\t\t\t}\n\t\n\t\t\tF.prototype = Component$1.prototype;\n\t\t\tcl.prototype = new F();\n\t\t\tcl.prototype.constructor = cl;\n\t\n\t\t\tcl.displayName = obj.displayName || 'Component';\n\t\n\t\t\treturn cl;\n\t\t}\n\t\n\t\tfunction bindAll(ctx) {\n\t\t\tfor (var i in ctx) {\n\t\t\t\tvar v = ctx[i];\n\t\t\t\tif (typeof v === 'function' && !v.__bound && !AUTOBIND_BLACKLIST.hasOwnProperty(i)) {\n\t\t\t\t\t(ctx[i] = v.bind(ctx)).__bound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction callMethod(ctx, m, args) {\n\t\t\tif (typeof m === 'string') {\n\t\t\t\tm = ctx.constructor.prototype[m];\n\t\t\t}\n\t\t\tif (typeof m === 'function') {\n\t\t\t\treturn m.apply(ctx, args);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction multihook() {\n\t\t\tfor (var _len4 = arguments.length, hooks = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t\t\t\thooks[_key4] = arguments[_key4];\n\t\t\t}\n\t\n\t\t\treturn function () {\n\t\t\t\tvar ret = void 0;\n\t\n\t\t\t\tfor (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n\t\t\t\t\targs[_key5] = arguments[_key5];\n\t\t\t\t}\n\t\n\t\t\t\tfor (var i = 0; i < hooks.length; i++) {\n\t\t\t\t\tvar r = callMethod(this, hooks[i], args);\n\t\t\t\t\tif (r !== undefined) ret = r;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t};\n\t\t}\n\t\n\t\tfunction newComponentHook(props, context) {\n\t\t\tpropsHook.call(this, props, context);\n\t\t\tthis.componentWillReceiveProps = multihook(this.componentWillReceiveProps || 'componentWillReceiveProps', propsHook);\n\t\t\tthis.render = multihook(beforeRender, this.render || 'render', afterRender);\n\t\t}\n\t\n\t\tfunction propsHook(props) {\n\t\t\tif (!props) return;\n\t\n\t\t\tvar c = props.children;\n\t\t\tif (c && c.length === 1) {\n\t\t\t\tprops.children = c[0];\n\t\n\t\t\t\tif (props.children && typeof props.children === 'object') {\n\t\t\t\t\tprops.children.length = 1;\n\t\t\t\t\tprops.children[0] = props.children;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (DEV) {\n\t\t\t\tvar propTypes = this.propTypes || this.constructor.propTypes;\n\t\t\t\tif (propTypes) {\n\t\t\t\t\tfor (var prop in propTypes) {\n\t\t\t\t\t\tif (propTypes.hasOwnProperty(prop) && typeof propTypes[prop] === 'function') {\n\t\t\t\t\t\t\tvar err = propTypes[prop](props, prop, this.constructor.name, 'prop');\n\t\t\t\t\t\t\tif (err) throw err;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction beforeRender() {\n\t\t\tcurrentComponent = this;\n\t\t}\n\t\n\t\tfunction afterRender() {\n\t\t\tif (currentComponent === this) {\n\t\t\t\tcurrentComponent = null;\n\t\t\t}\n\t\t}\n\t\n\t\tvar Component$1 = function (_PreactComponent) {\n\t\t\tbabelHelpers.inherits(Component, _PreactComponent);\n\t\n\t\t\tfunction Component(props, context, opts) {\n\t\t\t\tbabelHelpers.classCallCheck(this, Component);\n\t\n\t\t\t\tvar _this = babelHelpers.possibleConstructorReturn(this, Object.getPrototypeOf(Component).call(this, props, context));\n\t\n\t\t\t\t_this.refs = {};\n\t\t\t\t_this._refProxies = {};\n\t\t\t\tif (opts !== BYPASS_HOOK) {\n\t\t\t\t\tnewComponentHook.call(_this, props, context);\n\t\t\t\t}\n\t\t\t\treturn _this;\n\t\t\t}\n\t\n\t\t\tbabelHelpers.createClass(Component, [{\n\t\t\t\tkey: 'getDOMNode',\n\t\t\t\tvalue: function getDOMNode() {\n\t\t\t\t\treturn this.base;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'isMounted',\n\t\t\t\tvalue: function isMounted() {\n\t\t\t\t\treturn !!this.base;\n\t\t\t\t}\n\t\t\t}]);\n\t\t\treturn Component;\n\t\t}(preact.Component);\n\t\n\t\tvar index = { DOM: DOM, PropTypes: PropTypes, Children: Children, render: render$1, createClass: createClass, createFactory: createFactory, createElement: createElement, cloneElement: cloneElement, isValidElement: isValidElement, findDOMNode: findDOMNode, unmountComponentAtNode: unmountComponentAtNode, Component: Component$1 };\n\t\n\t\texports.DOM = DOM;\n\t\texports.PropTypes = PropTypes;\n\t\texports.Children = Children;\n\t\texports.render = render$1;\n\t\texports.createClass = createClass;\n\t\texports.createFactory = createFactory;\n\t\texports.createElement = createElement;\n\t\texports.cloneElement = cloneElement;\n\t\texports.isValidElement = isValidElement;\n\t\texports.findDOMNode = findDOMNode;\n\t\texports.unmountComponentAtNode = unmountComponentAtNode;\n\t\texports.Component = Component$1;\n\t\texports['default'] = index;\n\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.connect = exports.Provider = undefined;\n\t\n\tvar _Provider = __webpack_require__(45);\n\t\n\tvar _Provider2 = _interopRequireDefault(_Provider);\n\t\n\tvar _connect = __webpack_require__(46);\n\t\n\tvar _connect2 = _interopRequireDefault(_connect);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\texports.Provider = _Provider2[\"default\"];\n\texports.connect = _connect2[\"default\"];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\t\n\tvar _createStore = __webpack_require__(19);\n\t\n\tvar _createStore2 = _interopRequireDefault(_createStore);\n\t\n\tvar _combineReducers = __webpack_require__(51);\n\t\n\tvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\t\n\tvar _bindActionCreators = __webpack_require__(50);\n\t\n\tvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\t\n\tvar _applyMiddleware = __webpack_require__(49);\n\t\n\tvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\t\n\tvar _compose = __webpack_require__(18);\n\t\n\tvar _compose2 = _interopRequireDefault(_compose);\n\t\n\tvar _warning = __webpack_require__(20);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t/*\n\t* This is a dummy function to check if the function name has been altered by minification.\n\t* If the function has been minified and NODE_ENV !== 'production', warn the user.\n\t*/\n\tfunction isCrushed() {}\n\t\n\tif (false) {\n\t  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n\t}\n\t\n\texports.createStore = _createStore2[\"default\"];\n\texports.combineReducers = _combineReducers2[\"default\"];\n\texports.bindActionCreators = _bindActionCreators2[\"default\"];\n\texports.applyMiddleware = _applyMiddleware2[\"default\"];\n\texports.compose = _compose2[\"default\"];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(7).nextTick;\n\tvar apply = Function.prototype.apply;\n\tvar slice = Array.prototype.slice;\n\tvar immediateIds = {};\n\tvar nextImmediateId = 0;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) { timeout.close(); };\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// That's not how node.js implements it but the exposed api is the same.\n\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n\t  var id = nextImmediateId++;\n\t  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\t\n\t  immediateIds[id] = true;\n\t\n\t  nextTick(function onNextTick() {\n\t    if (immediateIds[id]) {\n\t      // fn.call() is faster so we optimize for the common use-case\n\t      // @see http://jsperf.com/call-apply-segu\n\t      if (args) {\n\t        fn.apply(null, args);\n\t      } else {\n\t        fn.call(null);\n\t      }\n\t      // Prevent ids from leaking\n\t      exports.clearImmediate(id);\n\t    }\n\t  });\n\t\n\t  return id;\n\t};\n\t\n\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n\t  delete immediateIds[id];\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10).setImmediate, __webpack_require__(10).clearImmediate))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.addTodo = addTodo;\n\texports.removeTodo = removeTodo;\n\tfunction addTodo(text) {\n\t\treturn {\n\t\t\ttype: 'ADD_TODO',\n\t\t\ttext: text\n\t\t};\n\t}\n\t\n\tfunction removeTodo(todo) {\n\t\treturn {\n\t\t\ttype: 'REMOVE_TODO',\n\t\t\ttodo: todo\n\t\t};\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _desc, _value, _class;\n\t\n\tvar _preact = __webpack_require__(2);\n\t\n\tvar _decko = __webpack_require__(4);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n\t\tvar desc = {};\n\t\tObject['ke' + 'ys'](descriptor).forEach(function (key) {\n\t\t\tdesc[key] = descriptor[key];\n\t\t});\n\t\tdesc.enumerable = !!desc.enumerable;\n\t\tdesc.configurable = !!desc.configurable;\n\t\n\t\tif ('value' in desc || desc.initializer) {\n\t\t\tdesc.writable = true;\n\t\t}\n\t\n\t\tdesc = decorators.slice().reverse().reduce(function (desc, decorator) {\n\t\t\treturn decorator(target, property, desc) || desc;\n\t\t}, desc);\n\t\n\t\tif (context && desc.initializer !== void 0) {\n\t\t\tdesc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n\t\t\tdesc.initializer = undefined;\n\t\t}\n\t\n\t\tif (desc.initializer === void 0) {\n\t\t\tObject['define' + 'Property'](target, property, desc);\n\t\t\tdesc = null;\n\t\t}\n\t\n\t\treturn desc;\n\t}\n\t\n\tvar TodoItem = (_class = function (_Component) {\n\t\t_inherits(TodoItem, _Component);\n\t\n\t\tfunction TodoItem() {\n\t\t\t_classCallCheck(this, TodoItem);\n\t\n\t\t\treturn _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t\t}\n\t\n\t\tTodoItem.prototype.shouldComponentUpdate = function shouldComponentUpdate(_ref) {\n\t\t\tvar todo = _ref.todo;\n\t\t\tvar onRemove = _ref.onRemove;\n\t\n\t\t\treturn todo !== this.props.todo || onRemove !== this.props.onRemove;\n\t\t};\n\t\n\t\tTodoItem.prototype.remove = function remove() {\n\t\t\tvar _props = this.props;\n\t\t\tvar onRemove = _props.onRemove;\n\t\t\tvar todo = _props.todo;\n\t\n\t\t\tonRemove(todo);\n\t\t};\n\t\n\t\tTodoItem.prototype.render = function render(_ref2) {\n\t\t\tvar todo = _ref2.todo;\n\t\n\t\t\treturn (0, _preact.h)(\n\t\t\t\t'li',\n\t\t\t\tnull,\n\t\t\t\t(0, _preact.h)(\n\t\t\t\t\t'button',\n\t\t\t\t\t{ onClick: this.remove },\n\t\t\t\t\t'×'\n\t\t\t\t),\n\t\t\t\t' ' + todo.text\n\t\t\t);\n\t\t};\n\t\n\t\treturn TodoItem;\n\t}(_preact.Component), (_applyDecoratedDescriptor(_class.prototype, 'remove', [_decko.bind], Object.getOwnPropertyDescriptor(_class.prototype, 'remove'), _class.prototype)), _class);\n\texports.default = TodoItem;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Egg = function () {\n\t    function Egg(x, z, scale, scene) {\n\t        _classCallCheck(this, Egg);\n\t\n\t        this.hatchtime = (Math.floor(Math.random() * 12) + 4) * 1000;\n\t        var geometry = new _three2.default.BoxGeometry(15, 24, 15);\n\t        var material = new _three2.default.MeshBasicMaterial({ color: 0xffffff });\n\t        this.mesh = new _three2.default.Mesh(geometry, material);\n\t        this.mesh.position.set(x * scale, -15, z * scale);\n\t        this.scene = scene;\n\t        this.scene.add(this.mesh);\n\t    }\n\t\n\t    Egg.prototype.incubate = function incubate() {\n\t        var self = this;\n\t        return new Promise(function (fulfill, reject) {\n\t            setTimeout(function () {\n\t                fulfill(self.mesh.position);\n\t                self.scene.remove(self.mesh);\n\t            }, self.hatchtime);\n\t        });\n\t    };\n\t\n\t    return Egg;\n\t}();\n\t\n\texports.default = Egg;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar EMPTY = {};\n\t\n\texports.default = function (store) {\n\t\treturn store || EMPTY;\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.bindActions = bindActions;\n\t\n\tvar _redux = __webpack_require__(9);\n\t\n\tfunction bindActions(actions) {\n\t\treturn function (dispatch) {\n\t\t\treturn _extends({}, (0, _redux.bindActionCreators)(actions, dispatch));\n\t\t};\n\t}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(6);\n\t\n\texports[\"default\"] = _react.PropTypes.shape({\n\t  subscribe: _react.PropTypes.func.isRequired,\n\t  dispatch: _react.PropTypes.func.isRequired,\n\t  getState: _react.PropTypes.func.isRequired\n\t});\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = warning;\n\t/**\n\t * Prints a warning in the console if it exists.\n\t *\n\t * @param {String} message The warning message.\n\t * @returns {void}\n\t */\n\tfunction warning(message) {\n\t  /* eslint-disable no-console */\n\t  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t    console.error(message);\n\t  }\n\t  /* eslint-enable no-console */\n\t  try {\n\t    // This error was thrown as a convenience so that you can use this stack\n\t    // to find the callsite that caused this warning to fire.\n\t    throw new Error(message);\n\t    /* eslint-disable no-empty */\n\t  } catch (e) {}\n\t  /* eslint-enable no-empty */\n\t}\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = compose;\n\t/**\n\t * Composes single-argument functions from right to left. The rightmost\n\t * function can take multiple arguments as it provides the signature for\n\t * the resulting composite function.\n\t *\n\t * @param {...Function} funcs The functions to compose.\n\t * @returns {Function} A function obtained by composing the argument functions\n\t * from right to left. For example, compose(f, g, h) is identical to doing\n\t * (...args) => f(g(h(...args))).\n\t */\n\t\n\tfunction compose() {\n\t  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n\t    funcs[_key] = arguments[_key];\n\t  }\n\t\n\t  if (funcs.length === 0) {\n\t    return function (arg) {\n\t      return arg;\n\t    };\n\t  } else {\n\t    var _ret = function () {\n\t      var last = funcs[funcs.length - 1];\n\t      var rest = funcs.slice(0, -1);\n\t      return {\n\t        v: function v() {\n\t          return rest.reduceRight(function (composed, f) {\n\t            return f(composed);\n\t          }, last.apply(undefined, arguments));\n\t        }\n\t      };\n\t    }();\n\t\n\t    if (typeof _ret === \"object\") return _ret.v;\n\t  }\n\t}\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.ActionTypes = undefined;\n\texports[\"default\"] = createStore;\n\t\n\tvar _isPlainObject = __webpack_require__(5);\n\t\n\tvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\t\n\tvar _symbolObservable = __webpack_require__(52);\n\t\n\tvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t/**\n\t * These are private action types reserved by Redux.\n\t * For any unknown actions, you must return the current state.\n\t * If the current state is undefined, you must return the initial state.\n\t * Do not reference these action types directly in your code.\n\t */\n\tvar ActionTypes = exports.ActionTypes = {\n\t  INIT: '@@redux/INIT'\n\t};\n\t\n\t/**\n\t * Creates a Redux store that holds the state tree.\n\t * The only way to change the data in the store is to call `dispatch()` on it.\n\t *\n\t * There should only be a single store in your app. To specify how different\n\t * parts of the state tree respond to actions, you may combine several reducers\n\t * into a single reducer function by using `combineReducers`.\n\t *\n\t * @param {Function} reducer A function that returns the next state tree, given\n\t * the current state tree and the action to handle.\n\t *\n\t * @param {any} [initialState] The initial state. You may optionally specify it\n\t * to hydrate the state from the server in universal apps, or to restore a\n\t * previously serialized user session.\n\t * If you use `combineReducers` to produce the root reducer function, this must be\n\t * an object with the same shape as `combineReducers` keys.\n\t *\n\t * @param {Function} enhancer The store enhancer. You may optionally specify it\n\t * to enhance the store with third-party capabilities such as middleware,\n\t * time travel, persistence, etc. The only store enhancer that ships with Redux\n\t * is `applyMiddleware()`.\n\t *\n\t * @returns {Store} A Redux store that lets you read the state, dispatch actions\n\t * and subscribe to changes.\n\t */\n\tfunction createStore(reducer, initialState, enhancer) {\n\t  var _ref2;\n\t\n\t  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n\t    enhancer = initialState;\n\t    initialState = undefined;\n\t  }\n\t\n\t  if (typeof enhancer !== 'undefined') {\n\t    if (typeof enhancer !== 'function') {\n\t      throw new Error('Expected the enhancer to be a function.');\n\t    }\n\t\n\t    return enhancer(createStore)(reducer, initialState);\n\t  }\n\t\n\t  if (typeof reducer !== 'function') {\n\t    throw new Error('Expected the reducer to be a function.');\n\t  }\n\t\n\t  var currentReducer = reducer;\n\t  var currentState = initialState;\n\t  var currentListeners = [];\n\t  var nextListeners = currentListeners;\n\t  var isDispatching = false;\n\t\n\t  function ensureCanMutateNextListeners() {\n\t    if (nextListeners === currentListeners) {\n\t      nextListeners = currentListeners.slice();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reads the state tree managed by the store.\n\t   *\n\t   * @returns {any} The current state tree of your application.\n\t   */\n\t  function getState() {\n\t    return currentState;\n\t  }\n\t\n\t  /**\n\t   * Adds a change listener. It will be called any time an action is dispatched,\n\t   * and some part of the state tree may potentially have changed. You may then\n\t   * call `getState()` to read the current state tree inside the callback.\n\t   *\n\t   * You may call `dispatch()` from a change listener, with the following\n\t   * caveats:\n\t   *\n\t   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n\t   * If you subscribe or unsubscribe while the listeners are being invoked, this\n\t   * will not have any effect on the `dispatch()` that is currently in progress.\n\t   * However, the next `dispatch()` call, whether nested or not, will use a more\n\t   * recent snapshot of the subscription list.\n\t   *\n\t   * 2. The listener should not expect to see all state changes, as the state\n\t   * might have been updated multiple times during a nested `dispatch()` before\n\t   * the listener is called. It is, however, guaranteed that all subscribers\n\t   * registered before the `dispatch()` started will be called with the latest\n\t   * state by the time it exits.\n\t   *\n\t   * @param {Function} listener A callback to be invoked on every dispatch.\n\t   * @returns {Function} A function to remove this change listener.\n\t   */\n\t  function subscribe(listener) {\n\t    if (typeof listener !== 'function') {\n\t      throw new Error('Expected listener to be a function.');\n\t    }\n\t\n\t    var isSubscribed = true;\n\t\n\t    ensureCanMutateNextListeners();\n\t    nextListeners.push(listener);\n\t\n\t    return function unsubscribe() {\n\t      if (!isSubscribed) {\n\t        return;\n\t      }\n\t\n\t      isSubscribed = false;\n\t\n\t      ensureCanMutateNextListeners();\n\t      var index = nextListeners.indexOf(listener);\n\t      nextListeners.splice(index, 1);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Dispatches an action. It is the only way to trigger a state change.\n\t   *\n\t   * The `reducer` function, used to create the store, will be called with the\n\t   * current state tree and the given `action`. Its return value will\n\t   * be considered the **next** state of the tree, and the change listeners\n\t   * will be notified.\n\t   *\n\t   * The base implementation only supports plain object actions. If you want to\n\t   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n\t   * wrap your store creating function into the corresponding middleware. For\n\t   * example, see the documentation for the `redux-thunk` package. Even the\n\t   * middleware will eventually dispatch plain object actions using this method.\n\t   *\n\t   * @param {Object} action A plain object representing “what changed”. It is\n\t   * a good idea to keep actions serializable so you can record and replay user\n\t   * sessions, or use the time travelling `redux-devtools`. An action must have\n\t   * a `type` property which may not be `undefined`. It is a good idea to use\n\t   * string constants for action types.\n\t   *\n\t   * @returns {Object} For convenience, the same action object you dispatched.\n\t   *\n\t   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n\t   * return something else (for example, a Promise you can await).\n\t   */\n\t  function dispatch(action) {\n\t    if (!(0, _isPlainObject2[\"default\"])(action)) {\n\t      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n\t    }\n\t\n\t    if (typeof action.type === 'undefined') {\n\t      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n\t    }\n\t\n\t    if (isDispatching) {\n\t      throw new Error('Reducers may not dispatch actions.');\n\t    }\n\t\n\t    try {\n\t      isDispatching = true;\n\t      currentState = currentReducer(currentState, action);\n\t    } finally {\n\t      isDispatching = false;\n\t    }\n\t\n\t    var listeners = currentListeners = nextListeners;\n\t    for (var i = 0; i < listeners.length; i++) {\n\t      listeners[i]();\n\t    }\n\t\n\t    return action;\n\t  }\n\t\n\t  /**\n\t   * Replaces the reducer currently used by the store to calculate the state.\n\t   *\n\t   * You might need this if your app implements code splitting and you want to\n\t   * load some of the reducers dynamically. You might also need this if you\n\t   * implement a hot reloading mechanism for Redux.\n\t   *\n\t   * @param {Function} nextReducer The reducer for the store to use instead.\n\t   * @returns {void}\n\t   */\n\t  function replaceReducer(nextReducer) {\n\t    if (typeof nextReducer !== 'function') {\n\t      throw new Error('Expected the nextReducer to be a function.');\n\t    }\n\t\n\t    currentReducer = nextReducer;\n\t    dispatch({ type: ActionTypes.INIT });\n\t  }\n\t\n\t  /**\n\t   * Interoperability point for observable/reactive libraries.\n\t   * @returns {observable} A minimal observable of state changes.\n\t   * For more information, see the observable proposal:\n\t   * https://github.com/zenparsing/es-observable\n\t   */\n\t  function observable() {\n\t    var _ref;\n\t\n\t    var outerSubscribe = subscribe;\n\t    return _ref = {\n\t      /**\n\t       * The minimal observable subscription method.\n\t       * @param {Object} observer Any object that can be used as an observer.\n\t       * The observer object should have a `next` method.\n\t       * @returns {subscription} An object with an `unsubscribe` method that can\n\t       * be used to unsubscribe the observable from the store, and prevent further\n\t       * emission of values from the observable.\n\t       */\n\t\n\t      subscribe: function subscribe(observer) {\n\t        if (typeof observer !== 'object') {\n\t          throw new TypeError('Expected the observer to be an object.');\n\t        }\n\t\n\t        function observeState() {\n\t          if (observer.next) {\n\t            observer.next(getState());\n\t          }\n\t        }\n\t\n\t        observeState();\n\t        var unsubscribe = outerSubscribe(observeState);\n\t        return { unsubscribe: unsubscribe };\n\t      }\n\t    }, _ref[_symbolObservable2[\"default\"]] = function () {\n\t      return this;\n\t    }, _ref;\n\t  }\n\t\n\t  // When a store is created, an \"INIT\" action is dispatched so that every\n\t  // reducer returns their initial state. This effectively populates\n\t  // the initial state tree.\n\t  dispatch({ type: ActionTypes.INIT });\n\t\n\t  return _ref2 = {\n\t    dispatch: dispatch,\n\t    subscribe: subscribe,\n\t    getState: getState,\n\t    replaceReducer: replaceReducer\n\t  }, _ref2[_symbolObservable2[\"default\"]] = observable, _ref2;\n\t}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = warning;\n\t/**\n\t * Prints a warning in the console if it exists.\n\t *\n\t * @param {String} message The warning message.\n\t * @returns {void}\n\t */\n\tfunction warning(message) {\n\t  /* eslint-disable no-console */\n\t  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t    console.error(message);\n\t  }\n\t  /* eslint-enable no-console */\n\t  try {\n\t    // This error was thrown as a convenience so that if you enable\n\t    // \"break on all exceptions\" in your console,\n\t    // it would pause the execution at this line.\n\t    throw new Error(message);\n\t    /* eslint-disable no-empty */\n\t  } catch (e) {}\n\t  /* eslint-enable no-empty */\n\t}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _dec, _class, _desc, _value, _class2;\n\t\n\tvar _preact = __webpack_require__(2);\n\t\n\tvar _decko = __webpack_require__(4);\n\t\n\tvar _reactRedux = __webpack_require__(8);\n\t\n\tvar _util = __webpack_require__(15);\n\t\n\tvar _reducers = __webpack_require__(14);\n\t\n\tvar _reducers2 = _interopRequireDefault(_reducers);\n\t\n\tvar _actions = __webpack_require__(11);\n\t\n\tvar actions = _interopRequireWildcard(_actions);\n\t\n\tvar _todoItem = __webpack_require__(12);\n\t\n\tvar _todoItem2 = _interopRequireDefault(_todoItem);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n\t  var desc = {};\n\t  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n\t    desc[key] = descriptor[key];\n\t  });\n\t  desc.enumerable = !!desc.enumerable;\n\t  desc.configurable = !!desc.configurable;\n\t\n\t  if ('value' in desc || desc.initializer) {\n\t    desc.writable = true;\n\t  }\n\t\n\t  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n\t    return decorator(target, property, desc) || desc;\n\t  }, desc);\n\t\n\t  if (context && desc.initializer !== void 0) {\n\t    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n\t    desc.initializer = undefined;\n\t  }\n\t\n\t  if (desc.initializer === void 0) {\n\t    Object['define' + 'Property'](target, property, desc);\n\t    desc = null;\n\t  }\n\t\n\t  return desc;\n\t}\n\t\n\tvar App = (_dec = (0, _reactRedux.connect)(_reducers2.default, (0, _util.bindActions)(actions)), _dec(_class = (_class2 = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App() {\n\t    _classCallCheck(this, App);\n\t\n\t    return _possibleConstructorReturn(this, _Component.call(this));\n\t  }\n\t\n\t  App.prototype.addTodos = function addTodos() {\n\t    var text = this.state.text;\n\t\n\t    this.setState({ text: '' });\n\t    this.props.addTodo(text);\n\t    return false;\n\t  };\n\t\n\t  App.prototype.removeTodo = function removeTodo(todo) {\n\t    this.props.removeTodo(todo);\n\t  };\n\t\n\t  App.prototype.render = function render(_ref, _ref2) {\n\t    var _this2 = this;\n\t\n\t    var todos = _ref.todos;\n\t    var text = _ref2.text;\n\t\n\t    return (0, _preact.h)(\n\t      'div',\n\t      { id: 'app' },\n\t      (0, _preact.h)(\n\t        'form',\n\t        { onSubmit: this.addTodos, action: 'javascript:' },\n\t        (0, _preact.h)('input', { value: text, onInput: this.linkState('text'), placeholder: 'New ToDo...' })\n\t      ),\n\t      (0, _preact.h)(\n\t        'ul',\n\t        null,\n\t        todos.map(function (todo) {\n\t          return (0, _preact.h)(_todoItem2.default, { key: todo.id, todo: todo, onRemove: _this2.removeTodo });\n\t        })\n\t      )\n\t    );\n\t  };\n\t\n\t  return App;\n\t}(_preact.Component), (_applyDecoratedDescriptor(_class2.prototype, 'addTodos', [_decko.bind], Object.getOwnPropertyDescriptor(_class2.prototype, 'addTodos'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, 'removeTodo', [_decko.bind], Object.getOwnPropertyDescriptor(_class2.prototype, 'removeTodo'), _class2.prototype)), _class2)) || _class);\n\texports.default = App;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _dec, _class, _dec2, _class2;\n\t\n\tvar _preact = __webpack_require__(2);\n\t\n\tvar _decko = __webpack_require__(4);\n\t\n\tvar _reactRedux = __webpack_require__(8);\n\t\n\tvar _util = __webpack_require__(15);\n\t\n\tvar _reducers = __webpack_require__(14);\n\t\n\tvar _reducers2 = _interopRequireDefault(_reducers);\n\t\n\tvar _actions = __webpack_require__(11);\n\t\n\tvar actions = _interopRequireWildcard(_actions);\n\t\n\tvar _todoItem = __webpack_require__(12);\n\t\n\tvar _todoItem2 = _interopRequireDefault(_todoItem);\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tvar _loadmodel = __webpack_require__(29);\n\t\n\tvar _loadmodel2 = _interopRequireDefault(_loadmodel);\n\t\n\tvar _chicken = __webpack_require__(24);\n\t\n\tvar _chicken2 = _interopRequireDefault(_chicken);\n\t\n\tvar _egg = __webpack_require__(13);\n\t\n\tvar _egg2 = _interopRequireDefault(_egg);\n\t\n\tvar _grid = __webpack_require__(26);\n\t\n\tvar _grid2 = _interopRequireDefault(_grid);\n\t\n\tvar _box = __webpack_require__(23);\n\t\n\tvar _box2 = _interopRequireDefault(_box);\n\t\n\tvar _ground = __webpack_require__(27);\n\t\n\tvar _ground2 = _interopRequireDefault(_ground);\n\t\n\tvar _label = __webpack_require__(28);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tvar _papergirl = __webpack_require__(41);\n\t\n\tvar _papergirl2 = _interopRequireDefault(_papergirl);\n\t\n\tvar _randomcolor = __webpack_require__(44);\n\t\n\tvar _randomcolor2 = _interopRequireDefault(_randomcolor);\n\t\n\tvar _forest = __webpack_require__(25);\n\t\n\tvar _forest2 = _interopRequireDefault(_forest);\n\t\n\tvar _traffic = __webpack_require__(31);\n\t\n\tvar _traffic2 = _interopRequireDefault(_traffic);\n\t\n\tvar _config = __webpack_require__(3);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _logo = __webpack_require__(30);\n\t\n\tvar _logo2 = _interopRequireDefault(_logo);\n\t\n\tvar _OBJMTLLoader = __webpack_require__(33);\n\t\n\tvar _OBJMTLLoader2 = _interopRequireDefault(_OBJMTLLoader);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure undefined\"); }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TOUCH = 'Touch' in window && navigator.maxTouchPoints > 1;\n\tvar coords = function (e) {\n\t  return e = e.touches && e.touches[0] || e, { x: e.pageX, y: e.pageY };\n\t};\n\t\n\tvar Game = (_dec = (0, _reactRedux.connect)(_reducers2.default, (0, _util.bindActions)(actions)), _dec(_class = function (_Component) {\n\t  _inherits(Game, _Component);\n\t\n\t  function Game() {\n\t    _classCallCheck(this, Game);\n\t\n\t    return _possibleConstructorReturn(this, _Component.call(this));\n\t  }\n\t\n\t  Game.prototype.render = function render(_ref, _ref2) {\n\t    var _ref2$zoom = _ref2.zoom;\n\t    var zoom = _ref2$zoom === undefined ? 1 : _ref2$zoom;\n\t    var _ref2$rotateX = _ref2.rotateX;\n\t    var rotateX = _ref2$rotateX === undefined ? 0 : _ref2$rotateX;\n\t    var _ref2$rotationY = _ref2.rotationY;\n\t    var rotationY = _ref2$rotationY === undefined ? 0 : _ref2$rotationY;\n\t\n\t    _objectDestructuringEmpty(_ref);\n\t\n\t    return (0, _preact.h)(\n\t      'div',\n\t      { id: 'game' },\n\t      (0, _preact.h)(\n\t        'main',\n\t        this.events,\n\t        (0, _preact.h)(Scene, { zoom: zoom, rotateX: rotateX, rotationY: rotationY })\n\t      )\n\t    );\n\t  };\n\t\n\t  return Game;\n\t}(_preact.Component)) || _class);\n\texports.default = Game;\n\tvar Scene = (_dec2 = (0, _reactRedux.connect)(_reducers2.default, (0, _util.bindActions)(actions)), _dec2(_class2 = function (_Component2) {\n\t  _inherits(Scene, _Component2);\n\t\n\t  function Scene() {\n\t    _classCallCheck(this, Scene);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, _Component2.call(this));\n\t\n\t    _this2.state = 'wait';\n\t\n\t    _this2.raycaster = new _three2.default.Raycaster();\n\t    _this2.mouse = new _three2.default.Vector2();\n\t    _this2.mouse_status = 'up';\n\t\n\t    _this2.targetRadian = 0;\n\t\n\t    /*\n\t        this.events = {\n\t          [TOUCH ? 'onTouchStart' : 'onMouseDown']: ::this.mouseDown,\n\t          [TOUCH ? 'onTouchMove' : 'onMouseMove']: ::this.mouseMove,\n\t          [TOUCH ? 'onTouchEnd' : 'onMouseUp']: ::this.mouseUp\n\t        };\n\t        */\n\t\n\t    var self = _this2;\n\t    window.oncontextmenu = function (event) {\n\t      console.log('oncontextmenu');\n\t      event.preventDefault();\n\t      event.stopPropagation();\n\t\n\t      return false;\n\t    };\n\t\n\t    var mousedown = function (e) {\n\t      console.log('mousedown:' + coords(e).x);\n\t      e.preventDefault();\n\t\n\t      self.calculateTarget(self, coords(e));\n\t      self.mouse_status = 'down';\n\t\n\t      // First click\n\t      if (self.state === 'wait') {\n\t        self.state = 'intro';\n\t      }\n\t    };\n\t\n\t    var mousemove = function (e) {\n\t      console.log('mouseMove:' + coords(e).x);\n\t      e.preventDefault();\n\t\n\t      if (self.mouse_status !== 'down') return;\n\t\n\t      self.calculateTarget(self, coords(e));\n\t    };\n\t\n\t    var mouseup = function (e) {\n\t      console.log('mouseUp:' + coords(e));\n\t      e.preventDefault();\n\t\n\t      self.mouse_status = 'up';\n\t    };\n\t\n\t    document.addEventListener('mousedown', mousedown, false);\n\t    document.addEventListener('touchstart', mousedown, false);\n\t\n\t    document.addEventListener('mousemove', mousemove, false);\n\t    document.addEventListener('touchmove', mousemove, false);\n\t\n\t    document.addEventListener('touchend', mouseup, false);\n\t    document.addEventListener('mouseup', mouseup, false);\n\t    return _this2;\n\t  }\n\t\n\t  Scene.prototype.shouldComponentUpdate = function shouldComponentUpdate() {\n\t    return false;\n\t  };\n\t\n\t  Scene.prototype.componentWillReceiveProps = function componentWillReceiveProps() {\n\t    if (this.base) this.update();\n\t  };\n\t\n\t  Scene.prototype.calculateTarget = function calculateTarget(self, coords) {\n\t    // calculate mouse position in normalized device coordinates\n\t    // (-1 to +1) for both components\n\t    self.mouse.x = coords.x / window.innerWidth * 2 - 1;\n\t    self.mouse.y = -(coords.y / window.innerHeight) * 2 + 1;\n\t\n\t    var radian = Math.atan2(self.mouse.y, self.mouse.x);\n\t    //let theta = radian * 180 / Math.PI;\n\t    //this.targetTheta = Math.floor(theta / 90) * 90;\n\t    //this.targetRadian = this.targetTheta * Math.PI / 180;\n\t    self.targetRadian = radian;\n\t  };\n\t\n\t  //@debounce\n\t\n\t\n\t  Scene.prototype.update = function update() {\n\t    //console.log(this.props);\n\t    var _props = this.props;\n\t    var events = _props.events;\n\t    var zoom = _props.zoom;\n\t    var rotateX = _props.rotateX;\n\t    var rotationY = _props.rotationY;\n\t\n\t    this.camera.rotation.y = rotateX * Math.PI;\n\t    this.camera.rotation.z = -rotationY * Math.PI;\n\t    this.scene.scale.addScalar(zoom - this.scene.scale.x);\n\t    this.rerender();\n\t  };\n\t\n\t  Scene.prototype.componentDidMount = function componentDidMount() {\n\t    var _this3 = this;\n\t\n\t    setTimeout(function () {\n\t      return _this3.setup();\n\t    }, 1);\n\t  };\n\t\n\t  Scene.prototype.setup = function setup() {\n\t    var self = this;\n\t    //console.log(\"setup\");\n\t\n\t    var _base$getBoundingClie = this.base.getBoundingClientRect();\n\t\n\t    var width = _base$getBoundingClie.width;\n\t    var height = _base$getBoundingClie.height;\n\t\n\t    this.renderer = new _three2.default.WebGLRenderer({ antialias: true });\n\t    this.renderer.setPixelRatio(window.devicePixelRatio);\n\t    this.renderer.setSize(window.innerWidth, window.innerHeight);\n\t    this.renderer.autoClear = false;\n\t    this.base.appendChild(this.renderer.domElement);\n\t\n\t    this.clock = new _three2.default.Clock();\n\t    this.scene = new _three2.default.Scene();\n\t\n\t    /*\n\t    this.camera = new THREE.PerspectiveCamera(\n\t            35,         // FOV\n\t            800 / 640,  // Aspect\n\t            0.1,        // Near\n\t            10000       // Far\n\t    );\n\t    this.camera.position.set(-15, 10, 15);\n\t    this.camera.lookAt(this.scene.position);\n\t    */\n\t    /*\n\t    var aspect = window.innerWidth / window.innerHeight;\n\t    var d = 20;\n\t    this.camera = new THREE.OrthographicCamera( - d * aspect, d * aspect, d, - d, 1, 1000 );\n\t    this.camera.position.set( 20, 20, 20 ); // all components equal\n\t    this.camera.lookAt( this.scene.position ); // or the origin\n\t    */\n\t\n\t    this.camera = new _three2.default.PerspectiveCamera(10, // FOV\n\t    window.innerWidth / window.innerHeight, // Aspect\n\t    100, // Near\n\t    10000 // Far\n\t    );\n\t\n\t    // HUD\n\t    this.setupHUD();\n\t\n\t    this.letCameraFollowTarget(new _three2.default.Vector3(0, 0, 0));\n\t\n\t    //this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n\t    //this.controls.damping = 0.2;\n\t    //this.controls.maxPolarAngle = Math.PI / 2;\n\t    //this.controls.minDistance = 500;\n\t\n\t    this.onWindowResize(self);\n\t    this.renderObject();\n\t    this.renderLighting();\n\t    this.rerender();\n\t\n\t    this.decorate(['data/01_client.json', 'data/02_dev.json', 'data/03_server.json']);\n\t\n\t    // Forest\n\t    new _forest2.default(this.scene, 640, 640, 10);\n\t    this.traffic = new _traffic2.default(this.scene);\n\t\n\t    this.animate();\n\t\n\t    // Logo\n\t    this.logo = new _logo2.default(this.scene);\n\t\n\t    // TODO : move to external?\n\t\n\t    window.addEventListener('resize', function () {\n\t      self.onWindowResize(self);\n\t    }, false);\n\t  };\n\t\n\t  Scene.prototype.setupHUD = function setupHUD() {\n\t    var self = this;\n\t\n\t    var width = window.innerWidth;\n\t    var height = window.innerHeight;\n\t    this.cameraOrtho = new _three2.default.OrthographicCamera(-width / 2, width / 2, height / 2, -height / 2, 1, 10);\n\t    this.cameraOrtho.position.z = 10;\n\t\n\t    this.sceneOrtho = new _three2.default.Scene();\n\t\n\t    new _three2.default.TextureLoader().load(\"textures/devscape_logo.png\", function (texture) {\n\t      var material = new _three2.default.SpriteMaterial({ map: texture });\n\t      self.spriteC = new _three2.default.Sprite(material);\n\t      var tw = material.map.image.width;\n\t      var th = material.map.image.height;\n\t\n\t      // media query\n\t      var logo_y = 120;\n\t      if (width <= 320) {\n\t        tw = tw / 2;\n\t        th = th / 2;\n\t      } else if (width <= 414) {\n\t        tw = tw / 1.75;\n\t        th = th / 1.75;\n\t        logo_y = 200;\n\t      }\n\t\n\t      self.spriteC.scale.set(tw, th, 1);\n\t      self.sceneOrtho.add(self.spriteC);\n\t      self.spriteC.position.set(0, logo_y, 1); // center\n\t    });\n\t  };\n\t\n\t  Scene.prototype.toRad = function toRad(degree) {\n\t    return degree * Math.PI / 180;\n\t  };\n\t\n\t  Scene.prototype.letCameraFollowTarget = function letCameraFollowTarget(target) {\n\t    this.camera.position.set(target.x, target.y, target.z);\n\t    this.camera.rotation.set(this.toRad(-45), this.toRad(16), this.toRad(16));\n\t    this.camera.translateZ(4600);\n\t    this.camera.target = target;\n\t    this.camera.lookAt(this.camera.target);\n\t\n\t    /*\n\t    // for top view test\n\t    this.camera.position.set(-640, 0, 0);\n\t    this.camera.rotation.set(-Math.PI/2, 0, 0);\n\t    this.camera.translateZ(1600*3);\n\t    //this.camera.lookAt(new THREE.Vector3( 0, 0, 0 ));\n\t    */\n\t  };\n\t\n\t  Scene.prototype.animate = function animate() {\n\t    var _this4 = this;\n\t\n\t    setInterval(function () {\n\t      _this4.chickens && _this4.chickens.forEach(function (chicken) {\n\t        chicken.update();\n\t      });\n\t    }, Math.floor(Math.random() * 7000) + 3000);\n\t  };\n\t\n\t  Scene.prototype.decorate = function decorate(sections) {\n\t    var self = this;\n\t\n\t    // ground\n\t    var ground = new _ground2.default(self.scene);\n\t\n\t    // sections\n\t    var i = 0;\n\t    sections.forEach(function (sectionURL) {\n\t      // TODO : queue load\n\t      _papergirl2.default.watch().onSync(function (jsonString, url, options) {\n\t        var json = JSON.parse(jsonString);\n\t        self.build(options.index, json);\n\t      }).request(sectionURL, { index: i++ });\n\t    });\n\t  };\n\t\n\t  Scene.prototype.build = function build(sectionIndex, sectionData) {\n\t    var self = this;\n\t\n\t    // label style\n\t    var X0 = -sectionIndex * 800 - 100;\n\t    var Z0 = 180;\n\t    var LABEL_X = 64;\n\t    var group_x = 0;\n\t    var group_h = 64;\n\t    var item_h = 64;\n\t\n\t    // header\n\t    var header_label = new _label2.default(self.scene, sectionData.title, X0 + 64, 0, Z0 + 64, \"normal small-caps bold 64px arial\", \"black\", \"yellow\", 0);\n\t\n\t    // section\n\t    sectionData.group.forEach(function (group) {\n\t\n\t      var j = 0;\n\t      var items_h = group.items.length * item_h;\n\t\n\t      group.items.forEach(function (item) {\n\t\n\t        // chart\n\t        var trend = 64 * item.trend / 10;\n\t        var w = trend < 128 ? trend : 128;\n\t        var item_x = Z0 - (group_x + group_h + j);\n\t        var h = 64 + 128 * item.percent / 100;\n\t        var color = (0, _randomcolor2.default)({ luminosity: 'bright', format: 'rgb' });\n\t        var box = new _box2.default(self.scene, X0 - h / 2 + 64, item_x, h, w, item_h, color);\n\t\n\t        // label\n\t        var item_label = new _label2.default(self.scene, item.title, X0 + LABEL_X, 0, item_x, \"normal small-caps bold 40px arial\", \"white\", color, 24);\n\t\n\t        j += 64;\n\t      });\n\t\n\t      // group\n\t      var group_label = new _label2.default(self.scene, group.title, X0 + LABEL_X, 0, Z0 - group_x, \"normal small-caps bold 56px arial\", \"#b0e65a\", \"#black\", 10);\n\t      group_x += items_h + group_h;\n\t    });\n\t  };\n\t\n\t  // render ////////////////////////////\n\t\n\t  Scene.prototype.rerender = function rerender() {\n\t    var self = this;\n\t    window.requestAnimationFrame(function () {\n\t      self.rerender();\n\t    });\n\t\n\t    if (this.state === 'intro') {\n\t      // Bye HUD\n\t      if (this.spriteC.position.x < window.innerWidth) {\n\t        this.spriteC.position.x += 16;\n\t        this.spriteC.position.y -= 1;\n\t      } else {\n\t        this.state = 'play';\n\t      }\n\t    }\n\t\n\t    self.traffic && self.traffic.update();\n\t\n\t    var delta = this.clock.getDelta();\n\t\n\t    this.chickens && this.chickens.forEach(function (chicken) {\n\t\n\t      //let randomness = Math.random();\n\t      //chicken.rotationY = Math.PI / 2 * randomness;//self.targetTheta;\n\t      if (self.mouse_status === 'down') {\n\t\n\t        // console.log(\"targetRadian : \" + self.targetRadian);       \n\t        //chicken.rotationY = self.targetRadian;\n\t        chicken.rotationY = 0;\n\t        var f = chicken.speed * delta * chicken.scale;\n\t        chicken.group.position.set(chicken.group.position.x + f * Math.cos(self.targetRadian), 20, chicken.group.position.z - f * Math.sin(self.targetRadian));\n\t        chicken.rotationY = self.targetRadian;\n\t        chicken.group.children.forEach(function (mesh) {\n\t          mesh.updateAnimation(1000 * delta);\n\t          //mesh.translateX(chicken.speed * delta);\n\t        });\n\t      }\n\t    });\n\t\n\t    // follow camera\n\t    if (this.chickens && this.chickens[0] && this.chickens[0].group.children[0]) {\n\t      //console.log(this.chickens[0].group.children[0].position);\n\t      //this.camera.position.set(900, 900, 900);\n\t      //var target = this.chickens[0].group.children[0].position.clone();\n\t      var target = this.chickens[0].group.position.clone();\n\t      this.letCameraFollowTarget(target);\n\t    }\n\t\n\t    // light\n\t    if (this.traffic_light) {\n\t      this.traffic_light.intensity = Math.sin(this.theta += Math.PI / 15) / 2 + 0.5;\n\t    }\n\t\n\t    this.renderer.clear();\n\t    this.renderer.setViewport(0, 0, window.innerWidth, window.innerHeight);\n\t\n\t    // render\n\t    this.renderer.render(this.scene, this.camera);\n\t\n\t    if (this.state !== 'play') {\n\t      this.renderer.clearDepth();\n\t      this.renderer.render(this.sceneOrtho, this.cameraOrtho);\n\t    }\n\t  };\n\t\n\t  Scene.prototype.renderObject = function renderObject() {\n\t    var self = this;\n\t    self.chickens = [];\n\t\n\t    this.reference = new _loadmodel2.default();\n\t    this.reference.load().then(function () {\n\t      new _chicken2.default(-64, 20, 1264, _config2.default.SCALE, self.reference, self.scene, self.chickens);\n\t    });\n\t  };\n\t\n\t  Scene.prototype.renderLighting = function renderLighting() {\n\t    /*\n\t    let light = new THREE.PointLight(0xFF0000, 1, 100);\n\t    light.position.set(10, 0, 10);\n\t    this.scene.add(light);\n\t     light = new THREE.PointLight(0xFF0000, 1, 50);\n\t    light.position.set(-20, 15, 10);\n\t    this.scene.add(light);\n\t    */\n\t\n\t    //this.renderer.setClearColor(0x222222, 1);\n\t\n\t    this.ambientLight = new _three2.default.AmbientLight(\"#FFFFFF\");\n\t    this.scene.add(this.ambientLight);\n\t\n\t    this.xLight = new _three2.default.DirectionalLight(0xffffff, 0.382);\n\t    this.xLight.position.set(1, 0, 0).normalize();\n\t    this.scene.add(this.xLight);\n\t\n\t    this.yLight = new _three2.default.DirectionalLight(0xffffff, 0.2);\n\t    this.yLight.position.set(0, 1, 0).normalize();\n\t    this.scene.add(this.yLight);\n\t\n\t    this.zLight = new _three2.default.DirectionalLight(0x111111, 0.1);\n\t    this.zLight.position.set(0, 0, 1).normalize();\n\t    this.scene.add(this.zLight);\n\t\n\t    /*\n\t    // for debug traffic_light\n\t    var geometry = new THREE.SphereGeometry( 4, 16, 16 );\n\t    var material = new THREE.MeshBasicMaterial( {color: 0xff0000} );\n\t    var sphere = new THREE.Mesh( geometry, material );\n\t    this.scene.add( sphere );\n\t    sphere.position.set(-220, 200, 930);\n\t    */\n\t\n\t    this.theta = 0;\n\t    // PointLight( color, intensity, distance, decay )\n\t    this.traffic_light = new _three2.default.PointLight(0xFF0000, Math.sin(this.theta), 500);\n\t    //this.traffic_light.position.set(sphere.position.x, sphere.position.y, sphere.position.z);\n\t    this.traffic_light.position.set(-220, 200, 930);\n\t    this.scene.add(this.traffic_light);\n\t\n\t    /*\n\t    var spotLight = new THREE.SpotLight(0x00ff00);\n\t    spotLight.position.set(100, 1000, 100);\n\t     spotLight.castShadow = true;\n\t     spotLight.shadowMapWidth = 1024;\n\t    spotLight.shadowMapHeight = 1024;\n\t     spotLight.shadowCameraNear = 500;\n\t    spotLight.shadowCameraFar = 4000;\n\t    spotLight.shadowCameraFov = 30;\n\t     this.scene.add(spotLight);\n\t    */\n\t  };\n\t\n\t  Scene.prototype.render = function render() {\n\t    return (0, _preact.h)(\n\t      'main',\n\t      this.events,\n\t      (0, _preact.h)('div', { 'class': 'scene' })\n\t    );\n\t  };\n\t\n\t  Scene.prototype.onWindowResize = function onWindowResize(self) {\n\t    var width = window.innerWidth;\n\t    var height = window.innerHeight;\n\t\n\t    self.camera.aspect = window.innerWidth / window.innerHeight;\n\t    self.camera.updateProjectionMatrix();\n\t    self.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\n\t    // HUD\n\t    self.cameraOrtho.left = -width / 2;\n\t    self.cameraOrtho.right = width / 2;\n\t    self.cameraOrtho.top = height / 2;\n\t    self.cameraOrtho.bottom = -height / 2;\n\t    self.cameraOrtho.updateProjectionMatrix();\n\t  };\n\t\n\t  return Scene;\n\t}(_preact.Component)) || _class2);\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Box = function Box(scene, x, z, w, h, d, color) {\n\t    _classCallCheck(this, Box);\n\t\n\t    var geometry = new _three2.default.BoxGeometry(w, h, d);\n\t    var material = new _three2.default.MeshPhongMaterial({ color: color }); //, emissive: 0x111111});\n\t\n\t    this.mesh = new _three2.default.Mesh(geometry, material);\n\t    this.mesh.position.set(x, h / 2, z);\n\t\n\t    this.scene = scene;\n\t    this.scene.add(this.mesh);\n\t};\n\t\n\texports.default = Box;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tvar _egg = __webpack_require__(13);\n\t\n\tvar _egg2 = _interopRequireDefault(_egg);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Chicken = function () {\n\t    function Chicken(x, y, z, scale, reference, scene, chickens) {\n\t        _classCallCheck(this, Chicken);\n\t\n\t        var self = this;\n\t        this.scale = scale;\n\t        this.position = new _three2.default.Vector3(x, y, z);\n\t        this.group = new _three2.default.Group();\n\t        this.scene = scene;\n\t        this.speed = 12;\n\t        this.rotation = 0;\n\t        this.chickens = chickens;\n\t        this.body = reference.body.clone();\n\t        this.foot1 = reference.foot1.clone();\n\t        this.foot2 = reference.foot2.clone();\n\t        /*\n\t        setInterval(() => {\n\t            let randomness = Math.random();\n\t            self.group.children.forEach(function (model) {\n\t                //model.rotation.y += Math.PI / 2 * randomness;\n\t            });\n\t        }, Math.floor(Math.random() * 7000) + 3000);\n\t         setInterval(() => {\n\t            let o = self.body.position;\n\t            let x = self.position.x !== 0 ? self.position.x / self.scale : self.position.x;\n\t            let z = self.position.z !== 0 ? self.position.z / self.scale : self.position.z;\n\t            let egg = new Egg(o.x + x, o.z + z, self.scale, self.scene);\n\t            egg.incubate().then((pos) => {\n\t                //new Chicken(pos.x, pos.z, self.scale, reference, self.scene, self.chickens)\n\t            });\n\t        }, Math.floor(Math.random() * 7000) + 3000);\n\t        */\n\t\n\t        this.loadModel();\n\t        this.chickens.push(this);\n\t    }\n\t\n\t    Chicken.prototype.loadModel = function loadModel() {\n\t        this.group.add(this.body);\n\t        this.group.add(this.foot1);\n\t        this.group.add(this.foot2);\n\t        this.group.scale.set(this.scale, this.scale, this.scale);\n\t        this.group.position.set(this.position.x, this.position.y, this.position.z);\n\t        this.scene.add(this.group);\n\t\n\t        this.rotationY = Math.PI * 3 / 2;\n\t    };\n\t\n\t    Chicken.prototype.update = function update() {};\n\t\n\t    /*\n\t    update() {\n\t        let randomness = Math.random();\n\t        self.group.children.forEach(function(model) {\n\t            console.log(\"update\");\n\t            model.rotation.y += Math.PI / 2 * randomness;\n\t        });\n\t    }\n\t    */\n\t\n\t\n\t    _createClass(Chicken, [{\n\t        key: 'rotationY',\n\t        set: function (theta) {\n\t            var self = this;\n\t            self.group.children.forEach(function (model) {\n\t                model.rotation.y = theta;\n\t            });\n\t        },\n\t        get: function () {\n\t            var self = this;\n\t            return self.group.children[0].rotation.y;\n\t        }\n\t    }]);\n\t\n\t    return Chicken;\n\t}();\n\t\n\texports.default = Chicken;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tvar _config = __webpack_require__(3);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Forest = function Forest(scene, w, h, dens) {\n\t    _classCallCheck(this, Forest);\n\t\n\t    var self = this;\n\t    var _W = 640;\n\t    var _H = 400;\n\t    var _Z0 = 480;\n\t    var _X0 = -_W * 2 - 480 - 106;\n\t    var _Y0 = -_H * 3 + 32;\n\t    var _SPAN = 128;\n\t\n\t    var maps = [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\n\t\n\t    var loader = new _three2.default.OBJMTLLoader();\n\t    loader.load('3d/Coin.obj', '3d/Coin.mtl', function (coin) {\n\t        coin.scale.set(_config2.default.SCALE * 2, _config2.default.SCALE * 2, _config2.default.SCALE * 2);\n\t\n\t        var object = coin;\n\t        object.traverse(function (child) {\n\t            if (child instanceof _three2.default.Mesh) {\n\t                child.material.shininess = 100;\n\t                child.material.blending = _three2.default.AdditiveBlending;\n\t            }\n\t        });\n\t        //coin.material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n\t\n\t        var loader = new _three2.default.OBJMTLLoader();\n\t        loader.load('3d/Tree01.obj', '3d/Tree01.mtl', function (tree) {\n\t\n\t            tree.scale.set(_config2.default.SCALE, _config2.default.SCALE, _config2.default.SCALE);\n\t\n\t            for (var i = 0; i < maps.length; i++) {\n\t                if (maps[i] == 0) {\n\t\n\t                    var positionX = _X0 + i % 20 * _SPAN;\n\t                    var positionY = _Y0 + Math.floor(i / 20) * _SPAN;\n\t\n\t                    var mesh;\n\t                    if (Math.random() > 0.2) {\n\t                        mesh = tree.clone();\n\t                    } else {\n\t                        mesh = coin.clone();\n\t                    }\n\t\n\t                    mesh.position.set(positionX, 0, positionY);\n\t                    scene.add(mesh);\n\t                }\n\t            }\n\t        });\n\t    });\n\t};\n\t\n\texports.default = Forest;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Grid = function Grid(size, step, scene) {\n\t    _classCallCheck(this, Grid);\n\t\n\t    var size = 640,\n\t        step = 64;\n\t    var geometry = new _three2.default.Geometry();\n\t    for (var i = -size; i <= size; i += step) {\n\t        geometry.vertices.push(new _three2.default.Vector3(-size, 0, i));\n\t        geometry.vertices.push(new _three2.default.Vector3(size, 0, i));\n\t        geometry.vertices.push(new _three2.default.Vector3(i, 0, -size));\n\t        geometry.vertices.push(new _three2.default.Vector3(i, 0, size));\n\t    }\n\t    var material = new _three2.default.LineBasicMaterial({ color: 0x000000, opacity: 0.2 });\n\t    var line = new _three2.default.LineSegments(geometry, material);\n\t    scene.add(line);\n\t};\n\t\n\texports.default = Grid;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Ground = function () {\n\t    /*\n\t    constructor(scene) {\n\t        var _W = 800;\n\t        var _H = 240;\n\t         this._buildRoad(scene, 2, -_W, _H, _W * 5, _H, 32);\n\t        this._buildGrass(scene, -_W, -_W + _H * .5, _W * 5, _W * 2, 32);\n\t        this._buildGrass(scene, -_W, _H + 128 * .5 + 128, _W * 5, 128, 32);\n\t         this._buildSoil(scene, -_W, _H + 128 * .5 + 128, _W * 5, 128, 320);\n\t        this._buildSoil2(scene, 1200, - _W * 5 - 128 - 30, 2000 - 20, 128, 320);\n\t    }\n\t    */\n\t\n\t    function Ground(scene) {\n\t        _classCallCheck(this, Ground);\n\t\n\t        var _W = 640;\n\t        var _H = 400;\n\t        var _Z0 = 480;\n\t\n\t        this.HGAP = 0.5;\n\t\n\t        this._buildGrass(scene, -_W, -_Z0, _W * 4, _H * 4, 32);\n\t        this._buildRoad(scene, 2, -_W, _Z0 - 38, _W * 4, _H, 32);\n\t\n\t        this._buildGrass(scene, -_W, _Z0 + 128 + 26, _W * 4, 128, 32);\n\t        this._buildRailRoad(scene, 1, -_W, _Z0 + 128 + 128 + 36, _W * 4, _H, 32);\n\t\n\t        this._buildRail(scene, -_W, _Z0 + 240, _W * 4, 16, 16);\n\t        this._buildGrass(scene, -_W, _Z0 + 640, _W * 4, 520, 32);\n\t\n\t        this._buildSoil(scene, -_W, _Z0 + 18 + _W + 170, _W * 4, 0, _W);\n\t        this._buildSoil2(scene, _W, 0, _W * 4 + 60, 0, _W);\n\t    }\n\t\n\t    Ground.prototype._buildRail = function _buildRail(scene, x, z, w, d, h) {\n\t        // rail1\n\t        var geometry = new _three2.default.BoxGeometry(w, h, d);\n\t        var material = new _three2.default.MeshPhongMaterial({ color: 0x726994 }); //, emissive: 0x333333, specular: 0x333333 });\n\t\n\t        this.mesh = new _three2.default.Mesh(geometry, material);\n\t        this.mesh.position.set(x, -h / 2 - 0.3 + 16, z + 16);\n\t        scene.add(this.mesh);\n\t\n\t        // rail2\n\t        var _obj3d = this.mesh.clone();\n\t        this.mesh.position.set(x, -h / 2 - 0.3 + 16, z + 110);\n\t        scene.add(_obj3d);\n\t\n\t        // pillows\n\t        var geometry = new _three2.default.BoxGeometry(128, h, d);\n\t        var material = new _three2.default.MeshPhongMaterial({ color: 0x70343a });\n\t        this.mesh = new _three2.default.Mesh(geometry, material);\n\t        this.mesh.rotation.y = -Math.PI / 2;\n\t\n\t        for (var i = 0; i < 26; i++) {\n\t            var _obj3d = this.mesh.clone();\n\t            _obj3d.position.set(i * 100 + x - w / 2, -h / 2 - 0.3, z + 128 / 2);\n\t            scene.add(_obj3d);\n\t        }\n\t    };\n\t\n\t    Ground.prototype._buildGrass = function _buildGrass(scene, x, z, w, d, h) {\n\t        var geometry = new _three2.default.BoxGeometry(w, h, d);\n\t        var material = new _three2.default.MeshPhongMaterial({ color: 0xb0e65a }); //, emissive: 0x000000, specular: 0x000000, shininess: 0});\n\t\n\t        this.mesh = new _three2.default.Mesh(geometry, material);\n\t        this.mesh.position.set(x, -h / 2 - this.HGAP, z);\n\t\n\t        scene.add(this.mesh);\n\t    };\n\t\n\t    Ground.prototype._buildSoil = function _buildSoil(scene, x, z, w, d, h) {\n\t        var self = this;\n\t\n\t        var _SECTION_W = 320;\n\t        var texture = new _three2.default.TextureLoader().load(\"textures/soil_decal.png\", function (texture) {\n\t            texture.wrapS = _three2.default.RepeatWrapping;\n\t            texture.wrapT = _three2.default.RepeatWrapping;\n\t            texture.repeat.set(w / _SECTION_W, 1);\n\t            var material = new _three2.default.MeshBasicMaterial({ map: texture });\n\t            var geometry = new _three2.default.PlaneGeometry(w, _SECTION_W, 1);\n\t            var plane = new _three2.default.Mesh(geometry, material);\n\t            plane.position.set(x, -320 * 0.5 - self.HGAP - 32, z + 128 * 0.5);\n\t            //plane.rotation.x = -Math.PI / 2;\n\t            scene.add(plane);\n\t        });\n\t    };\n\t\n\t    Ground.prototype._buildSoil2 = function _buildSoil2(scene, x, z, w, d, h) {\n\t        var self = this;\n\t\n\t        var _SECTION_W = 320;\n\t        var texture = new _three2.default.TextureLoader().load(\"textures/soil_decal.png\", function (texture) {\n\t            texture.wrapS = _three2.default.RepeatWrapping;\n\t            texture.wrapT = _three2.default.RepeatWrapping;\n\t            texture.repeat.set(w / _SECTION_W, 1);\n\t            var material = new _three2.default.MeshBasicMaterial({ map: texture });\n\t            var geometry = new _three2.default.PlaneGeometry(w, _SECTION_W, 1);\n\t            var plane = new _three2.default.Mesh(geometry, material);\n\t            plane.position.set(x, -320 * 0.5 - self.HGAP - 32, z + 128 * 0.5);\n\t            plane.rotation.y = Math.PI / 2;\n\t            scene.add(plane);\n\t        });\n\t    };\n\t\n\t    Ground.prototype._buildRoad = function _buildRoad(scene, lane, x, z, w, d, h) {\n\t        // decal : 0x7b8496\n\t        // road : 0x525763\n\t        var _SECTION_W = 128;\n\t        var texture = new _three2.default.TextureLoader().load(\"textures/road_decal.png\", function (texture) {\n\t            texture.wrapS = _three2.default.RepeatWrapping;\n\t            texture.wrapT = _three2.default.RepeatWrapping;\n\t            texture.repeat.set(w / _SECTION_W, 2);\n\t            var material = new _three2.default.MeshBasicMaterial({ map: texture });\n\t            var geometry = new _three2.default.PlaneGeometry(w, _SECTION_W * lane, 1);\n\t            var plane = new _three2.default.Mesh(geometry, material);\n\t            plane.position.set(x, -h / 2 - 0.3, z);\n\t            plane.rotation.x = -Math.PI / 2;\n\t            scene.add(plane);\n\t        });\n\t    };\n\t\n\t    Ground.prototype._buildRailRoad = function _buildRailRoad(scene, lane, x, z, w, d, h) {\n\t        var _SECTION_W = 160;\n\t        var material = new _three2.default.MeshPhongMaterial({ color: 0x525763 });\n\t        var geometry = new _three2.default.PlaneGeometry(w, _SECTION_W * lane, 1);\n\t        var plane = new _three2.default.Mesh(geometry, material);\n\t        plane.position.set(x, -h / 2 - 0.3, z);\n\t        plane.rotation.x = -Math.PI / 2;\n\t        scene.add(plane);\n\t    };\n\t\n\t    return Ground;\n\t}();\n\t\n\texports.default = Ground;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Label =\n\t\n\t// context.font=\"italic small-caps bold 12px arial\";\n\tfunction Label(scene, text, x, y, z, font, color, backGroundColor, backgroundMargin) {\n\t    _classCallCheck(this, Label);\n\t\n\t    if (typeof backgroundMargin === 'undefined') backgroundMargin = 8;\n\t\n\t    var canvas = document.createElement(\"canvas\");\n\t\n\t    var context = canvas.getContext(\"2d\");\n\t    var fonts = font.split(' ');\n\t    var size = parseInt(fonts[3].split('px')[0]);\n\t    var textAlign = 'left';\n\t\n\t    // Autosize canvas\n\t    context.font = fonts.join(' ');\n\t    var textWidth = context.measureText(text).width;\n\t    canvas.width = textWidth + backgroundMargin;\n\t    canvas.height = size + backgroundMargin;\n\t\n\t    // Autosize text\n\t    context.font = fonts.join(' ');\n\t    if (backGroundColor) {\n\t        context.fillStyle = backGroundColor;\n\t    }\n\t\n\t    switch (textAlign) {\n\t        case 'left':\n\t            context.fillRect(0, canvas.height / 2 - size / 2 - backgroundMargin / 2, textWidth + backgroundMargin, size + backgroundMargin);\n\t            break;\n\t        case 'center':\n\t            context.fillRect(canvas.width / 2 - textWidth / 2 - backgroundMargin / 2, canvas.height / 2 - size / 2 - backgroundMargin / 2, textWidth + backgroundMargin, size + backgroundMargin);\n\t            break;\n\t    }\n\t\n\t    context.textAlign = textAlign;\n\t    context.textBaseline = \"middle\";\n\t    context.fillStyle = color;\n\t\n\t    switch (textAlign) {\n\t        case 'left':\n\t            context.fillText(text, backgroundMargin / 2, canvas.height / 2);\n\t            break;\n\t        case 'center':\n\t            context.fillText(text, canvas.width / 2, canvas.height / 2);\n\t            break;\n\t    }\n\t\n\t    // context.strokeStyle = \"black\";\n\t    // context.strokeRect(0, 0, canvas.width, canvas.height);    \n\t    var texture = new _three2.default.Texture(canvas);\n\t    texture.needsUpdate = true;\n\t    var material = new _three2.default.MeshBasicMaterial({\n\t        map: texture\n\t    });\n\t    var mesh = new _three2.default.Mesh(new _three2.default.PlaneGeometry(canvas.width, canvas.height), material);\n\t    // mesh.overdraw = true;\n\t    //mesh.doubleSided = true;\n\t\n\t    switch (textAlign) {\n\t        case 'left':\n\t            mesh.position.x = x + canvas.width / 2;\n\t            break;\n\t        case 'center':\n\t            mesh.position.x = x; // - canvas.width;\n\t            break;\n\t    }\n\t\n\t    mesh.position.y = y; // - canvas.height;\n\t    mesh.position.z = z;\n\t    mesh.rotation.x = -Math.PI / 2;\n\t\n\t    scene.add(mesh);\n\t    return mesh;\n\t};\n\t\n\texports.default = Label;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t//import MorphAnimMesh from '../lib/MorphAnimMesh';\n\t\n\tvar LoadModels = function () {\n\t    function LoadModels() {\n\t        _classCallCheck(this, LoadModels);\n\t\n\t        this.foot1 = null;\n\t        this.foot2 = null;\n\t        this.body = null;\n\t    }\n\t\n\t    LoadModels.prototype.load = function load() {\n\t        var self = this;\n\t        return new Promise(function (fulfill, reject) {\n\t            var loader = new _three2.default.JSONLoader();\n\t            loader.load('3d/body.json', function (geometry, materials) {\n\t                materials.forEach(function (e) {\n\t                    e.morphTargets = true;\n\t                });\n\t                var material = new _three2.default.MeshFaceMaterial(materials);\n\t                self.body = new _three2.default.MorphAnimMesh(geometry, material);\n\t                self.body.duration = 1200;\n\t\n\t                loader.load('3d/foot1.json', function (geometry, materials) {\n\t                    materials.forEach(function (e) {\n\t                        e.morphTargets = true;\n\t                    });\n\t                    var material = new _three2.default.MeshFaceMaterial(materials);\n\t                    self.foot1 = new _three2.default.MorphAnimMesh(geometry, material);\n\t                    self.foot1.duration = 1200;\n\t\n\t                    loader.load('3d/foot2.json', function (geometry, materials) {\n\t                        materials.forEach(function (e) {\n\t                            e.morphTargets = true;\n\t                        });\n\t                        var material = new _three2.default.MeshFaceMaterial(materials);\n\t                        self.foot2 = new _three2.default.MorphAnimMesh(geometry, material);\n\t                        self.foot2.duration = 1200;\n\t                        fulfill();\n\t                    });\n\t                });\n\t            });\n\t        });\n\t    };\n\t\n\t    return LoadModels;\n\t}();\n\t\n\texports.default = LoadModels;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Logo = function Logo(scene) {\n\t    _classCallCheck(this, Logo);\n\t\n\t    var map = new _three2.default.TextureLoader().load(\"textures/devscape_logo.png\", function (texture) {\n\t        var material = new _three2.default.SpriteMaterial({ map: texture, color: 0xffffff });\n\t        var sprite = new _three2.default.Sprite(material);\n\t        sprite.position.set(-220, 200, 1);\n\t        sprite.position.normalize();\n\t        scene.add(sprite);\n\t    });\n\t};\n\t\n\texports.default = Logo;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = undefined;\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tvar _config = __webpack_require__(3);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Traffic = function () {\n\t    function Traffic(scene) {\n\t        _classCallCheck(this, Traffic);\n\t\n\t        var self = this;\n\t        self.MIN_EDGE = -3200;\n\t        self.MAX_EDGE = 1600;\n\t        self.Z0 = 200;\n\t\n\t        // vehicles\n\t        self.vehicles = [];\n\t        var loader = new _three2.default.OBJMTLLoader();\n\t        loader.load('3d/Truck.obj', '3d/Truck.mtl', function (obj3d) {\n\t            obj3d.scale.set(_config2.default.SCALE * 2, _config2.default.SCALE * 2, _config2.default.SCALE * 2);\n\t            var _obj3d;\n\t\n\t            // truck 1 : max -> min\n\t            _obj3d = obj3d.clone();\n\t            _obj3d.position.set(self.MAX_EDGE, 0, self.Z0 + 320 - 16);\n\t            _obj3d.rotation.y = Math.PI / 2;\n\t            scene.add(_obj3d);\n\t            self.vehicles.push(_obj3d);\n\t\n\t            // truck 1.1 : max -> min\n\t            _obj3d = _obj3d.clone();\n\t            _obj3d.position.set(self.MAX_EDGE - 320, 0, self.Z0 + 320 - 16);\n\t            scene.add(_obj3d);\n\t            self.vehicles.push(_obj3d);\n\t\n\t            // truck 2 : min -> max\n\t            _obj3d = obj3d.clone();\n\t            _obj3d.position.set(self.MIN_EDGE + 320 + 400, 0, self.Z0 + 200 - 16);\n\t            _obj3d.rotation.y = -Math.PI / 2;\n\t            scene.add(_obj3d);\n\t            self.vehicles.push(_obj3d);\n\t\n\t            // truck 2.1 : min -> max\n\t            _obj3d = _obj3d.clone();\n\t            _obj3d.position.set(self.MIN_EDGE + 320 + 400 + 400, 0, self.Z0 + 200 - 16);\n\t            scene.add(_obj3d);\n\t            self.vehicles.push(_obj3d);\n\t        });\n\t\n\t        /*\n\t        // bus\n\t        var loader = new THREE.OBJMTLLoader();\n\t        loader.load('3d/BusNo8.obj', '3d/BusNo8.mtl', function(obj3d) {\n\t            obj3d.scale.set(Config.SCALE*2 , Config.SCALE*2 , Config.SCALE*2 );\n\t            var _obj3d;\n\t            \n\t            // bus 1 : max -> min\n\t            _obj3d = obj3d.clone();\n\t            _obj3d.position.set(self.MAX_EDGE - 640 - 320, 0, self.Z0 + 320 - 16);\n\t            _obj3d.rotation.y = Math.PI/2;\n\t            scene.add(_obj3d);\n\t            self.vehicles.push(_obj3d);\n\t            \n\t            _obj3d.name = 'bus';\n\t        });\n\t        */\n\t\n\t        // cars\n\t        var loader = new _three2.default.OBJMTLLoader();\n\t        loader.load('3d/Car.obj', '3d/Car.mtl', function (obj3d) {\n\t            obj3d.scale.set(_config2.default.SCALE * 2, _config2.default.SCALE * 2, _config2.default.SCALE * 2);\n\t            var _obj3d;\n\t\n\t            // car 1 : max -> min\n\t            _obj3d = obj3d.clone();\n\t            _obj3d.position.set(self.MAX_EDGE - 640, 0, self.Z0 + 320 - 16);\n\t            _obj3d.rotation.y = Math.PI / 2;\n\t            scene.add(_obj3d);\n\t            self.vehicles.push(_obj3d);\n\t            _obj3d.name = 'car';\n\t        });\n\t\n\t        // cars yellow\n\t        var loader = new _three2.default.OBJMTLLoader();\n\t        loader.load('3d/Car.obj', '3d/CarYellow.mtl', function (obj3d) {\n\t            obj3d.scale.set(_config2.default.SCALE * 2, _config2.default.SCALE * 2, _config2.default.SCALE * 2);\n\t            var _obj3d;\n\t\n\t            // car yellow : min -> max\n\t            _obj3d = obj3d.clone();\n\t            _obj3d.position.set(self.MIN_EDGE, 0, self.Z0 + 200 - 16);\n\t            _obj3d.rotation.y = -Math.PI / 2;\n\t            scene.add(_obj3d);\n\t            self.vehicles.push(_obj3d);\n\t            //_obj3d.name = 'car';\n\t        });\n\t\n\t        // train\n\t        var loader = new _three2.default.OBJMTLLoader();\n\t        loader.load('3d/Train.obj', '3d/Train.mtl', function (obj3d) {\n\t            obj3d.scale.set(_config2.default.SCALE * 2, _config2.default.SCALE * 2, _config2.default.SCALE * 2);\n\t            var _obj3d;\n\t            var train_x0 = 1500;\n\t\n\t            // Train 1 : max -> min\n\t            _obj3d = obj3d.clone();\n\t            _obj3d.position.set(self.MAX_EDGE + train_x0, 32, self.Z0 + 480 - 16 + 96);\n\t            _obj3d.rotation.y = Math.PI / 2;\n\t            scene.add(_obj3d);\n\t            self.vehicles.push(_obj3d);\n\t            _obj3d.name = 'train';\n\t        });\n\t\n\t        // train light\n\t        var loader = new _three2.default.OBJMTLLoader();\n\t        loader.load('3d/TrafficLight.obj', '3d/TrafficLight.mtl', function (obj3d) {\n\t            obj3d.scale.set(_config2.default.SCALE * 2, _config2.default.SCALE * 2, _config2.default.SCALE * 2);\n\t            var _obj3d;\n\t\n\t            _obj3d = obj3d.clone();\n\t            _obj3d.position.set(-240, 0, 900);\n\t            _obj3d.rotation.y = -Math.PI / 2;\n\t            scene.add(_obj3d);\n\t        });\n\t\n\t        return this;\n\t    }\n\t\n\t    Traffic.prototype.update = function update() {\n\t        var self = this;\n\t\n\t        self.vehicles.forEach(function (obj3d) {\n\t            // bound\n\t            if (obj3d.position.x < self.MIN_EDGE) {\n\t                obj3d.position.x = self.MAX_EDGE;\n\t            } else if (obj3d.position.x > self.MAX_EDGE) {\n\t                obj3d.position.x = self.MIN_EDGE;\n\t            }\n\t\n\t            // move baby move\n\t            if (obj3d.name == 'train') {\n\t                obj3d.translateZ(-16);\n\t            } else {\n\t                obj3d.translateZ(-8);\n\t            }\n\t        });\n\t    };\n\t\n\t    return Traffic;\n\t}();\n\t\n\texports.default = Traffic;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_three2.default.MTLLoader = function (manager) {\n\t\n\t\tthis.manager = manager !== undefined ? manager : _three2.default.DefaultLoadingManager;\n\t}; /**\n\t    * Loads a Wavefront .mtl file specifying materials\n\t    *\n\t    * @author angelxuanchang\n\t    */\n\t\n\t\n\t_three2.default.MTLLoader.prototype = {\n\t\n\t\tconstructor: _three2.default.MTLLoader,\n\t\n\t\tload: function (url, onLoad, onProgress, onError) {\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar loader = new _three2.default.XHRLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.load(url, function (text) {\n\t\n\t\t\t\tonLoad(scope.parse(text));\n\t\t\t}, onProgress, onError);\n\t\t},\n\t\n\t\tsetBaseUrl: function (value) {\n\t\n\t\t\tthis.baseUrl = value;\n\t\t},\n\t\n\t\tsetCrossOrigin: function (value) {\n\t\n\t\t\tthis.crossOrigin = value;\n\t\t},\n\t\n\t\tsetMaterialOptions: function (value) {\n\t\n\t\t\tthis.materialOptions = value;\n\t\t},\n\t\n\t\t/**\n\t  * Parses loaded MTL file\n\t  * @param text - Content of MTL file\n\t  * @return {THREE.MTLLoader.MaterialCreator}\n\t  */\n\t\tparse: function (text) {\n\t\n\t\t\tvar lines = text.split(\"\\n\");\n\t\t\tvar info = {};\n\t\t\tvar delimiter_pattern = /\\s+/;\n\t\t\tvar materialsInfo = {};\n\t\n\t\t\tfor (var i = 0; i < lines.length; i++) {\n\t\n\t\t\t\tvar line = lines[i];\n\t\t\t\tline = line.trim();\n\t\n\t\t\t\tif (line.length === 0 || line.charAt(0) === '#') {\n\t\n\t\t\t\t\t// Blank line or comment ignore\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tvar pos = line.indexOf(' ');\n\t\n\t\t\t\tvar key = pos >= 0 ? line.substring(0, pos) : line;\n\t\t\t\tkey = key.toLowerCase();\n\t\n\t\t\t\tvar value = pos >= 0 ? line.substring(pos + 1) : \"\";\n\t\t\t\tvalue = value.trim();\n\t\n\t\t\t\tif (key === \"newmtl\") {\n\t\n\t\t\t\t\t// New material\n\t\n\t\t\t\t\tinfo = { name: value };\n\t\t\t\t\tmaterialsInfo[value] = info;\n\t\t\t\t} else if (info) {\n\t\n\t\t\t\t\tif (key === \"ka\" || key === \"kd\" || key === \"ks\") {\n\t\n\t\t\t\t\t\tvar ss = value.split(delimiter_pattern, 3);\n\t\t\t\t\t\tinfo[key] = [parseFloat(ss[0]), parseFloat(ss[1]), parseFloat(ss[2])];\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tinfo[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar materialCreator = new _three2.default.MTLLoader.MaterialCreator(this.baseUrl, this.materialOptions);\n\t\t\tmaterialCreator.setCrossOrigin(this.crossOrigin);\n\t\t\tmaterialCreator.setManager(this.manager);\n\t\t\tmaterialCreator.setMaterials(materialsInfo);\n\t\t\treturn materialCreator;\n\t\t}\n\t\n\t};\n\t\n\t/**\n\t * Create a new THREE-MTLLoader.MaterialCreator\n\t * @param baseUrl - Url relative to which textures are loaded\n\t * @param options - Set of options on how to construct the materials\n\t *                  side: Which side to apply the material\n\t *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n\t *                  wrap: What type of wrapping to apply for textures\n\t *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n\t *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n\t *                                Default: false, assumed to be already normalized\n\t *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n\t *                                  Default: false\n\t *                  invertTransparency: If transparency need to be inverted (inversion is needed if d = 0 is fully opaque)\n\t *                                      Default: false (d = 1 is fully opaque)\n\t * @constructor\n\t */\n\t\n\t_three2.default.MTLLoader.MaterialCreator = function (baseUrl, options) {\n\t\n\t\tthis.baseUrl = baseUrl;\n\t\tthis.options = options;\n\t\tthis.materialsInfo = {};\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\t\n\t\tthis.side = this.options && this.options.side ? this.options.side : _three2.default.FrontSide;\n\t\tthis.wrap = this.options && this.options.wrap ? this.options.wrap : _three2.default.RepeatWrapping;\n\t};\n\t\n\t_three2.default.MTLLoader.MaterialCreator.prototype = {\n\t\n\t\tconstructor: _three2.default.MTLLoader.MaterialCreator,\n\t\n\t\tsetCrossOrigin: function (value) {\n\t\n\t\t\tthis.crossOrigin = value;\n\t\t},\n\t\n\t\tsetManager: function (value) {\n\t\n\t\t\tthis.manager = value;\n\t\t},\n\t\n\t\tsetMaterials: function (materialsInfo) {\n\t\n\t\t\tthis.materialsInfo = this.convert(materialsInfo);\n\t\t\tthis.materials = {};\n\t\t\tthis.materialsArray = [];\n\t\t\tthis.nameLookup = {};\n\t\t},\n\t\n\t\tconvert: function (materialsInfo) {\n\t\n\t\t\tif (!this.options) return materialsInfo;\n\t\n\t\t\tvar converted = {};\n\t\n\t\t\tfor (var mn in materialsInfo) {\n\t\n\t\t\t\t// Convert materials info into normalized form based on options\n\t\n\t\t\t\tvar mat = materialsInfo[mn];\n\t\n\t\t\t\tvar covmat = {};\n\t\n\t\t\t\tconverted[mn] = covmat;\n\t\n\t\t\t\tfor (var prop in mat) {\n\t\n\t\t\t\t\tvar save = true;\n\t\t\t\t\tvar value = mat[prop];\n\t\t\t\t\tvar lprop = prop.toLowerCase();\n\t\n\t\t\t\t\tswitch (lprop) {\n\t\n\t\t\t\t\t\tcase 'kd':\n\t\t\t\t\t\tcase 'ka':\n\t\t\t\t\t\tcase 'ks':\n\t\n\t\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\t\n\t\t\t\t\t\t\tif (this.options && this.options.normalizeRGB) {\n\t\n\t\t\t\t\t\t\t\tvalue = [value[0] / 255, value[1] / 255, value[2] / 255];\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (this.options && this.options.ignoreZeroRGBs) {\n\t\n\t\t\t\t\t\t\t\tif (value[0] === 0 && value[1] === 0 && value[1] === 0) {\n\t\n\t\t\t\t\t\t\t\t\t// ignore\n\t\n\t\t\t\t\t\t\t\t\tsave = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tcase 'd':\n\t\n\t\t\t\t\t\t\t// According to MTL format (http://paulbourke.net/dataformats/mtl/):\n\t\t\t\t\t\t\t//   d is dissolve for current material\n\t\t\t\t\t\t\t//   factor of 1.0 is fully opaque, a factor of 0 is fully dissolved (completely transparent)\n\t\n\t\t\t\t\t\t\tif (this.options && this.options.invertTransparency) {\n\t\n\t\t\t\t\t\t\t\tvalue = 1 - value;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (save) {\n\t\n\t\t\t\t\t\tcovmat[lprop] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn converted;\n\t\t},\n\t\n\t\tpreload: function () {\n\t\n\t\t\tfor (var mn in this.materialsInfo) {\n\t\n\t\t\t\tthis.create(mn);\n\t\t\t}\n\t\t},\n\t\n\t\tgetIndex: function (materialName) {\n\t\n\t\t\treturn this.nameLookup[materialName];\n\t\t},\n\t\n\t\tgetAsArray: function () {\n\t\n\t\t\tvar index = 0;\n\t\n\t\t\tfor (var mn in this.materialsInfo) {\n\t\n\t\t\t\tthis.materialsArray[index] = this.create(mn);\n\t\t\t\tthis.nameLookup[mn] = index;\n\t\t\t\tindex++;\n\t\t\t}\n\t\n\t\t\treturn this.materialsArray;\n\t\t},\n\t\n\t\tcreate: function (materialName) {\n\t\n\t\t\tif (this.materials[materialName] === undefined) {\n\t\n\t\t\t\tthis.createMaterial_(materialName);\n\t\t\t}\n\t\n\t\t\treturn this.materials[materialName];\n\t\t},\n\t\n\t\tcreateMaterial_: function (materialName) {\n\t\n\t\t\t// Create material\n\t\n\t\t\tvar mat = this.materialsInfo[materialName];\n\t\t\tvar params = {\n\t\n\t\t\t\tname: materialName,\n\t\t\t\tside: this.side\n\t\n\t\t\t};\n\t\n\t\t\tfor (var prop in mat) {\n\t\n\t\t\t\tvar value = mat[prop];\n\t\n\t\t\t\tswitch (prop.toLowerCase()) {\n\t\n\t\t\t\t\t// Ns is material specular exponent\n\t\n\t\t\t\t\tcase 'kd':\n\t\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\t\n\t\t\t\t\t\tparams['diffuse'] = new _three2.default.Color().fromArray(value);\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 'ka':\n\t\n\t\t\t\t\t\t// Ambient color (color under shadow) using RGB values\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 'ks':\n\t\n\t\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\t\tparams['specular'] = new _three2.default.Color().fromArray(value);\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 'map_kd':\n\t\n\t\t\t\t\t\t// Diffuse texture map\n\t\n\t\t\t\t\t\tparams['map'] = this.loadTexture(this.baseUrl + value);\n\t\t\t\t\t\tparams['map'].wrapS = this.wrap;\n\t\t\t\t\t\tparams['map'].wrapT = this.wrap;\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 'ns':\n\t\n\t\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\t\n\t\t\t\t\t\tparams['shininess'] = value;\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 'd':\n\t\n\t\t\t\t\t\t// According to MTL format (http://paulbourke.net/dataformats/mtl/):\n\t\t\t\t\t\t//   d is dissolve for current material\n\t\t\t\t\t\t//   factor of 1.0 is fully opaque, a factor of 0 is fully dissolved (completely transparent)\n\t\n\t\t\t\t\t\tif (value < 1) {\n\t\n\t\t\t\t\t\t\tparams['transparent'] = true;\n\t\t\t\t\t\t\tparams['opacity'] = value;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 'map_bump':\n\t\t\t\t\tcase 'bump':\n\t\n\t\t\t\t\t\t// Bump texture map\n\t\n\t\t\t\t\t\tif (params['bumpMap']) break; // Avoid loading twice.\n\t\n\t\t\t\t\t\tparams['bumpMap'] = this.loadTexture(this.baseUrl + value);\n\t\t\t\t\t\tparams['bumpMap'].wrapS = this.wrap;\n\t\t\t\t\t\tparams['bumpMap'].wrapT = this.wrap;\n\t\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (params['diffuse']) {\n\t\n\t\t\t\tparams['color'] = params['diffuse'];\n\t\t\t}\n\t\n\t\t\tthis.materials[materialName] = new _three2.default.MeshPhongMaterial(params);\n\t\t\treturn this.materials[materialName];\n\t\t},\n\t\n\t\tloadTexture: function (url, mapping, onLoad, onProgress, onError) {\n\t\n\t\t\tvar texture;\n\t\t\tvar loader = _three2.default.Loader.Handlers.get(url);\n\t\t\tvar manager = this.manager !== undefined ? this.manager : _three2.default.DefaultLoadingManager;\n\t\n\t\t\tif (loader !== null) {\n\t\n\t\t\t\ttexture = loader.load(url, onLoad);\n\t\t\t} else {\n\t\n\t\t\t\ttexture = new _three2.default.Texture();\n\t\n\t\t\t\tloader = new _three2.default.ImageLoader(manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\t\tloader.load(url, function (image) {\n\t\n\t\t\t\t\ttexture.image = _three2.default.MTLLoader.ensurePowerOfTwo_(image);\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\n\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\t\n\t\t\tif (mapping !== undefined) texture.mapping = mapping;\n\t\n\t\t\treturn texture;\n\t\t}\n\t\n\t};\n\t\n\t_three2.default.MTLLoader.ensurePowerOfTwo_ = function (image) {\n\t\n\t\tif (!_three2.default.Math.isPowerOfTwo(image.width) || !_three2.default.Math.isPowerOfTwo(image.height)) {\n\t\n\t\t\tvar canvas = document.createElement(\"canvas\");\n\t\t\tcanvas.width = _three2.default.MTLLoader.nextHighestPowerOfTwo_(image.width);\n\t\t\tcanvas.height = _three2.default.MTLLoader.nextHighestPowerOfTwo_(image.height);\n\t\n\t\t\tvar ctx = canvas.getContext(\"2d\");\n\t\t\tctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n\t\t\treturn canvas;\n\t\t}\n\t\n\t\treturn image;\n\t};\n\t\n\t_three2.default.MTLLoader.nextHighestPowerOfTwo_ = function (x) {\n\t\n\t\t--x;\n\t\n\t\tfor (var i = 1; i < 32; i <<= 1) {\n\t\n\t\t\tx = x | x >> i;\n\t\t}\n\t\n\t\treturn x + 1;\n\t};\n\t\n\t_three2.default.EventDispatcher.prototype.apply(_three2.default.MTLLoader.prototype);\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tvar _MTLLoader = __webpack_require__(32);\n\t\n\tvar _MTLLoader2 = _interopRequireDefault(_MTLLoader);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Loads a Wavefront .obj file with materials\n\t *\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author angelxuanchang\n\t */\n\t\n\t_three2.default.OBJMTLLoader = function (manager) {\n\t\n\t\tthis.manager = manager !== undefined ? manager : _three2.default.DefaultLoadingManager;\n\t};\n\t\n\t_three2.default.OBJMTLLoader.prototype = {\n\t\n\t\tconstructor: _three2.default.OBJMTLLoader,\n\t\n\t\tload: function (url, mtlurl, onLoad, onProgress, onError) {\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar mtlLoader = new _three2.default.MTLLoader(this.manager);\n\t\t\tmtlLoader.setBaseUrl(url.substr(0, url.lastIndexOf(\"/\") + 1));\n\t\t\tmtlLoader.setCrossOrigin(this.crossOrigin);\n\t\t\tmtlLoader.load(mtlurl, function (materials) {\n\t\n\t\t\t\tvar materialsCreator = materials;\n\t\t\t\tmaterialsCreator.preload();\n\t\n\t\t\t\tvar loader = new _three2.default.XHRLoader(scope.manager);\n\t\t\t\tloader.setCrossOrigin(scope.crossOrigin);\n\t\t\t\tloader.load(url, function (text) {\n\t\n\t\t\t\t\tvar object = scope.parse(text);\n\t\n\t\t\t\t\tobject.traverse(function (object) {\n\t\n\t\t\t\t\t\tif (object instanceof _three2.default.Mesh) {\n\t\n\t\t\t\t\t\t\tif (object.material.name) {\n\t\n\t\t\t\t\t\t\t\tvar material = materialsCreator.create(object.material.name);\n\t\n\t\t\t\t\t\t\t\tif (material) object.material = material;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\tonLoad(object);\n\t\t\t\t}, onProgress, onError);\n\t\t\t}, onProgress, onError);\n\t\t},\n\t\n\t\tsetCrossOrigin: function (value) {\n\t\n\t\t\tthis.crossOrigin = value;\n\t\t},\n\t\n\t\t/**\n\t  * Parses loaded .obj file\n\t  * @param data - content of .obj file\n\t  * @param mtllibCallback - callback to handle mtllib declaration (optional)\n\t  * @return {THREE.Object3D} - Object3D (with default material)\n\t  */\n\t\n\t\tparse: function (data, mtllibCallback) {\n\t\n\t\t\tfunction vector(x, y, z) {\n\t\n\t\t\t\treturn new _three2.default.Vector3(x, y, z);\n\t\t\t}\n\t\n\t\t\tfunction uv(u, v) {\n\t\n\t\t\t\treturn new _three2.default.Vector2(u, v);\n\t\t\t}\n\t\n\t\t\tfunction face3(a, b, c, normals) {\n\t\n\t\t\t\treturn new _three2.default.Face3(a, b, c, normals);\n\t\t\t}\n\t\n\t\t\tvar face_offset = 0;\n\t\n\t\t\tfunction meshN(meshName, materialName) {\n\t\n\t\t\t\tif (vertices.length > 0) {\n\t\n\t\t\t\t\tgeometry.vertices = vertices;\n\t\n\t\t\t\t\tgeometry.mergeVertices();\n\t\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\t\tgeometry.computeBoundingSphere();\n\t\n\t\t\t\t\tobject.add(mesh);\n\t\n\t\t\t\t\tgeometry = new _three2.default.Geometry();\n\t\t\t\t\tmesh = new _three2.default.Mesh(geometry, material);\n\t\t\t\t}\n\t\n\t\t\t\tif (meshName !== undefined) mesh.name = meshName;\n\t\n\t\t\t\tif (materialName !== undefined) {\n\t\n\t\t\t\t\tmaterial = new _three2.default.MeshLambertMaterial();\n\t\t\t\t\tmaterial.name = materialName;\n\t\n\t\t\t\t\tmesh.material = material;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar group = new _three2.default.Group();\n\t\t\tvar object = group;\n\t\n\t\t\tvar geometry = new _three2.default.Geometry();\n\t\t\tvar material = new _three2.default.MeshLambertMaterial();\n\t\t\tvar mesh = new _three2.default.Mesh(geometry, material);\n\t\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\tfunction add_face(a, b, c, normals_inds) {\n\t\n\t\t\t\tif (normals_inds === undefined) {\n\t\n\t\t\t\t\tgeometry.faces.push(face3(parseInt(a) - (face_offset + 1), parseInt(b) - (face_offset + 1), parseInt(c) - (face_offset + 1)));\n\t\t\t\t} else {\n\t\n\t\t\t\t\tgeometry.faces.push(face3(parseInt(a) - (face_offset + 1), parseInt(b) - (face_offset + 1), parseInt(c) - (face_offset + 1), [normals[parseInt(normals_inds[0]) - 1].clone(), normals[parseInt(normals_inds[1]) - 1].clone(), normals[parseInt(normals_inds[2]) - 1].clone()]));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction add_uvs(a, b, c) {\n\t\n\t\t\t\tgeometry.faceVertexUvs[0].push([uvs[parseInt(a) - 1].clone(), uvs[parseInt(b) - 1].clone(), uvs[parseInt(c) - 1].clone()]);\n\t\t\t}\n\t\n\t\t\tfunction handle_face_line(faces, uvs, normals_inds) {\n\t\n\t\t\t\tif (faces[3] === undefined) {\n\t\n\t\t\t\t\tadd_face(faces[0], faces[1], faces[2], normals_inds);\n\t\n\t\t\t\t\tif (!(uvs === undefined) && uvs.length > 0) {\n\t\n\t\t\t\t\t\tadd_uvs(uvs[0], uvs[1], uvs[2]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\n\t\t\t\t\tif (!(normals_inds === undefined) && normals_inds.length > 0) {\n\t\n\t\t\t\t\t\tadd_face(faces[0], faces[1], faces[3], [normals_inds[0], normals_inds[1], normals_inds[3]]);\n\t\t\t\t\t\tadd_face(faces[1], faces[2], faces[3], [normals_inds[1], normals_inds[2], normals_inds[3]]);\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tadd_face(faces[0], faces[1], faces[3]);\n\t\t\t\t\t\tadd_face(faces[1], faces[2], faces[3]);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (!(uvs === undefined) && uvs.length > 0) {\n\t\n\t\t\t\t\t\tadd_uvs(uvs[0], uvs[1], uvs[3]);\n\t\t\t\t\t\tadd_uvs(uvs[1], uvs[2], uvs[3]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// v float float float\n\t\n\t\t\tvar vertex_pattern = /v( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)/;\n\t\n\t\t\t// vn float float float\n\t\n\t\t\tvar normal_pattern = /vn( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)/;\n\t\n\t\t\t// vt float float\n\t\n\t\t\tvar uv_pattern = /vt( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)/;\n\t\n\t\t\t// f vertex vertex vertex ...\n\t\n\t\t\tvar face_pattern1 = /f( +\\d+)( +\\d+)( +\\d+)( +\\d+)?/;\n\t\n\t\t\t// f vertex/uv vertex/uv vertex/uv ...\n\t\n\t\t\tvar face_pattern2 = /f( +(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+))?/;\n\t\n\t\t\t// f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n\t\n\t\t\tvar face_pattern3 = /f( +(\\d+)\\/(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+)\\/(\\d+))?/;\n\t\n\t\t\t// f vertex//normal vertex//normal vertex//normal ...\n\t\n\t\t\tvar face_pattern4 = /f( +(\\d+)\\/\\/(\\d+))( +(\\d+)\\/\\/(\\d+))( +(\\d+)\\/\\/(\\d+))( +(\\d+)\\/\\/(\\d+))?/;\n\t\n\t\t\t//\n\t\n\t\t\tvar lines = data.split(\"\\n\");\n\t\n\t\t\tfor (var i = 0; i < lines.length; i++) {\n\t\n\t\t\t\tvar line = lines[i];\n\t\t\t\tline = line.trim();\n\t\n\t\t\t\tvar result;\n\t\n\t\t\t\tif (line.length === 0 || line.charAt(0) === '#') {\n\t\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if ((result = vertex_pattern.exec(line)) !== null) {\n\t\n\t\t\t\t\t// [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n\t\n\t\t\t\t\tvertices.push(vector(parseFloat(result[1]), parseFloat(result[2]), parseFloat(result[3])));\n\t\t\t\t} else if ((result = normal_pattern.exec(line)) !== null) {\n\t\n\t\t\t\t\t// [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n\t\n\t\t\t\t\tnormals.push(vector(parseFloat(result[1]), parseFloat(result[2]), parseFloat(result[3])));\n\t\t\t\t} else if ((result = uv_pattern.exec(line)) !== null) {\n\t\n\t\t\t\t\t// [\"vt 0.1 0.2\", \"0.1\", \"0.2\"]\n\t\n\t\t\t\t\tuvs.push(uv(parseFloat(result[1]), parseFloat(result[2])));\n\t\t\t\t} else if ((result = face_pattern1.exec(line)) !== null) {\n\t\n\t\t\t\t\t// [\"f 1 2 3\", \"1\", \"2\", \"3\", undefined]\n\t\n\t\t\t\t\thandle_face_line([result[1], result[2], result[3], result[4]]);\n\t\t\t\t} else if ((result = face_pattern2.exec(line)) !== null) {\n\t\n\t\t\t\t\t// [\"f 1/1 2/2 3/3\", \" 1/1\", \"1\", \"1\", \" 2/2\", \"2\", \"2\", \" 3/3\", \"3\", \"3\", undefined, undefined, undefined]\n\t\n\t\t\t\t\thandle_face_line([result[2], result[5], result[8], result[11]], //faces\n\t\t\t\t\t[result[3], result[6], result[9], result[12]] //uv\n\t\t\t\t\t);\n\t\t\t\t} else if ((result = face_pattern3.exec(line)) !== null) {\n\t\n\t\t\t\t\t\t// [\"f 1/1/1 2/2/2 3/3/3\", \" 1/1/1\", \"1\", \"1\", \"1\", \" 2/2/2\", \"2\", \"2\", \"2\", \" 3/3/3\", \"3\", \"3\", \"3\", undefined, undefined, undefined, undefined]\n\t\n\t\t\t\t\t\thandle_face_line([result[2], result[6], result[10], result[14]], //faces\n\t\t\t\t\t\t[result[3], result[7], result[11], result[15]], //uv\n\t\t\t\t\t\t[result[4], result[8], result[12], result[16]] //normal\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if ((result = face_pattern4.exec(line)) !== null) {\n\t\n\t\t\t\t\t\t\t// [\"f 1//1 2//2 3//3\", \" 1//1\", \"1\", \"1\", \" 2//2\", \"2\", \"2\", \" 3//3\", \"3\", \"3\", undefined, undefined, undefined]\n\t\n\t\t\t\t\t\t\thandle_face_line([result[2], result[5], result[8], result[11]], //faces\n\t\t\t\t\t\t\t[], //uv\n\t\t\t\t\t\t\t[result[3], result[6], result[9], result[12]] //normal\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (/^o /.test(line)) {\n\t\n\t\t\t\t\t\t\t\t// object\n\t\n\t\t\t\t\t\t\t\tmeshN();\n\t\t\t\t\t\t\t\tface_offset = face_offset + vertices.length;\n\t\t\t\t\t\t\t\tvertices = [];\n\t\t\t\t\t\t\t\tobject = new _three2.default.Object3D();\n\t\t\t\t\t\t\t\tobject.name = line.substring(2).trim();\n\t\t\t\t\t\t\t\tgroup.add(object);\n\t\t\t\t\t\t\t} else if (/^g /.test(line)) {\n\t\n\t\t\t\t\t\t\t\t// group\n\t\n\t\t\t\t\t\t\t\tmeshN(line.substring(2).trim(), undefined);\n\t\t\t\t\t\t\t} else if (/^usemtl /.test(line)) {\n\t\n\t\t\t\t\t\t\t\t// material\n\t\n\t\t\t\t\t\t\t\tmeshN(undefined, line.substring(7).trim());\n\t\t\t\t\t\t\t} else if (/^mtllib /.test(line)) {\n\t\n\t\t\t\t\t\t\t\t// mtl file\n\t\n\t\t\t\t\t\t\t\tif (mtllibCallback) {\n\t\n\t\t\t\t\t\t\t\t\tvar mtlfile = line.substring(7);\n\t\t\t\t\t\t\t\t\tmtlfile = mtlfile.trim();\n\t\t\t\t\t\t\t\t\tmtllibCallback(mtlfile);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (/^s /.test(line)) {\n\t\n\t\t\t\t\t\t\t\t// Smooth shading\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tconsole.log(\"THREE.OBJMTLLoader: Unhandled line \" + line);\n\t\t\t\t\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t//Add last object\n\t\t\tmeshN(undefined, undefined);\n\t\n\t\t\treturn group;\n\t\t}\n\t\n\t};\n\t\n\t_three2.default.EventDispatcher.prototype.apply(_three2.default.OBJMTLLoader.prototype);\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _redux = __webpack_require__(9);\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar ACTIONS = {\n\t\tADD_TODO: function (_ref, _ref2) {\n\t\t\tvar todos = _ref.todos;\n\t\n\t\t\tvar state = _objectWithoutProperties(_ref, ['todos']);\n\t\n\t\t\tvar text = _ref2.text;\n\t\t\treturn _extends({\n\t\t\t\ttodos: [].concat(todos, [{\n\t\t\t\t\tid: Math.random().toString(36).substring(2),\n\t\t\t\t\ttext: text\n\t\t\t\t}])\n\t\t\t}, state);\n\t\t},\n\t\n\t\tREMOVE_TODO: function (_ref3, _ref4) {\n\t\t\tvar todos = _ref3.todos;\n\t\n\t\t\tvar state = _objectWithoutProperties(_ref3, ['todos']);\n\t\n\t\t\tvar todo = _ref4.todo;\n\t\t\treturn _extends({\n\t\t\t\ttodos: todos.filter(function (i) {\n\t\t\t\t\treturn i !== todo;\n\t\t\t\t})\n\t\t\t}, state);\n\t\t}\n\t};\n\t\n\tvar INITIAL = {\n\t\ttodos: []\n\t};\n\t\n\texports.default = (0, _redux.createStore)(function (state, action) {\n\t\treturn action && ACTIONS[action.type] ? ACTIONS[action.type](state, action) : state || INITIAL;\n\t});\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2015, Yahoo! Inc.\n\t * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n\t */\n\t'use strict';\n\t\n\tvar REACT_STATICS = {\n\t    childContextTypes: true,\n\t    contextTypes: true,\n\t    defaultProps: true,\n\t    displayName: true,\n\t    getDefaultProps: true,\n\t    mixins: true,\n\t    propTypes: true,\n\t    type: true\n\t};\n\t\n\tvar KNOWN_STATICS = {\n\t    name: true,\n\t    length: true,\n\t    prototype: true,\n\t    caller: true,\n\t    arguments: true,\n\t    arity: true\n\t};\n\t\n\tmodule.exports = function hoistNonReactStatics(targetComponent, sourceComponent) {\n\t    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\t        var keys = Object.getOwnPropertyNames(sourceComponent);\n\t        for (var i=0; i<keys.length; ++i) {\n\t            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]]) {\n\t                try {\n\t                    targetComponent[keys[i]] = sourceComponent[keys[i]];\n\t                } catch (error) {\n\t\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    return targetComponent;\n\t};\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar invariant = function(condition, format, a, b, c, d, e, f) {\n\t  if (false) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  }\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error(\n\t        'Minified exception occurred; use the non-minified dev environment ' +\n\t        'for the full error message and additional helpful warnings.'\n\t      );\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(\n\t        format.replace(/%s/g, function() { return args[argIndex++]; })\n\t      );\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t};\n\t\n\tmodule.exports = invariant;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeGetPrototype = Object.getPrototypeOf;\n\t\n\t/**\n\t * Gets the `[[Prototype]]` of `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {null|Object} Returns the `[[Prototype]]`.\n\t */\n\tfunction getPrototype(value) {\n\t  return nativeGetPrototype(Object(value));\n\t}\n\t\n\tmodule.exports = getPrototype;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is a host object in IE < 9.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t */\n\tfunction isHostObject(value) {\n\t  // Many host objects are `Object` objects that can coerce to strings\n\t  // despite having improperly defined `toString` methods.\n\t  var result = false;\n\t  if (value != null && typeof value.toString != 'function') {\n\t    try {\n\t      result = !!(value + '');\n\t    } catch (e) {}\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = isHostObject;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\tmodule.exports = isObjectLike;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;/* WEBPACK VAR INJECTION */(function(global, process) {/*!\r\n\t    Papergirl -- XHR+ETAG\r\n\t    Version 0.6.1\r\n\t*/\r\n\t(function() {\r\n\tvar define, requireModule, require, requirejs;\r\n\t\r\n\t(function() {\r\n\t  var registry = {}, seen = {};\r\n\t\r\n\t  define = function(name, deps, callback) {\r\n\t    registry[name] = { deps: deps, callback: callback };\r\n\t  };\r\n\t\r\n\t  requirejs = require = requireModule = function(name) {\r\n\t  requirejs._eak_seen = registry;\r\n\t\r\n\t    if (seen[name]) { return seen[name]; }\r\n\t    seen[name] = {};\r\n\t\r\n\t    if (!registry[name]) {\r\n\t      throw new Error(\"Could not find module \" + name);\r\n\t    }\r\n\t\r\n\t    var mod = registry[name],\r\n\t        deps = mod.deps,\r\n\t        callback = mod.callback,\r\n\t        reified = [],\r\n\t        exports;\r\n\t\r\n\t    for (var i=0, l=deps.length; i<l; i++) {\r\n\t      if (deps[i] === 'exports') {\r\n\t        reified.push(exports = {});\r\n\t      } else {\r\n\t        reified.push(requireModule(resolve(deps[i])));\r\n\t      }\r\n\t    }\r\n\t\r\n\t    var value = callback.apply(this, reified);\r\n\t    return seen[name] = exports || value;\r\n\t\r\n\t    function resolve(child) {\r\n\t      if (child.charAt(0) !== '.') { return child; }\r\n\t      var parts = child.split(\"/\");\r\n\t      var parentBase = name.split(\"/\").slice(0, -1);\r\n\t\r\n\t      for (var i=0, l=parts.length; i<l; i++) {\r\n\t        var part = parts[i];\r\n\t\r\n\t        if (part === '..') { parentBase.pop(); }\r\n\t        else if (part === '.') { continue; }\r\n\t        else { parentBase.push(part); }\r\n\t      }\r\n\t\r\n\t      return parentBase.join(\"/\");\r\n\t    }\r\n\t  };\r\n\t})();\r\n\t\r\n\tdefine(\"promise/all\", \r\n\t  [\"./utils\",\"exports\"],\r\n\t  function(__dependency1__, __exports__) {\r\n\t    \"use strict\";\r\n\t    /* global toString */\r\n\t\r\n\t    var isArray = __dependency1__.isArray;\r\n\t    var isFunction = __dependency1__.isFunction;\r\n\t\r\n\t    /**\r\n\t      Returns a promise that is fulfilled when all the given promises have been\r\n\t      fulfilled, or rejected if any of them become rejected. The return promise\r\n\t      is fulfilled with an array that gives all the values in the order they were\r\n\t      passed in the `promises` array argument.\r\n\t\r\n\t      Example:\r\n\t\r\n\t      ```javascript\r\n\t      var promise1 = RSVP.resolve(1);\r\n\t      var promise2 = RSVP.resolve(2);\r\n\t      var promise3 = RSVP.resolve(3);\r\n\t      var promises = [ promise1, promise2, promise3 ];\r\n\t\r\n\t      RSVP.all(promises).then(function(array){\r\n\t        // The array here would be [ 1, 2, 3 ];\r\n\t      });\r\n\t      ```\r\n\t\r\n\t      If any of the `promises` given to `RSVP.all` are rejected, the first promise\r\n\t      that is rejected will be given as an argument to the returned promises's\r\n\t      rejection handler. For example:\r\n\t\r\n\t      Example:\r\n\t\r\n\t      ```javascript\r\n\t      var promise1 = RSVP.resolve(1);\r\n\t      var promise2 = RSVP.reject(new Error(\"2\"));\r\n\t      var promise3 = RSVP.reject(new Error(\"3\"));\r\n\t      var promises = [ promise1, promise2, promise3 ];\r\n\t\r\n\t      RSVP.all(promises).then(function(array){\r\n\t        // Code here never runs because there are rejected promises!\r\n\t      }, function(error) {\r\n\t        // error.message === \"2\"\r\n\t      });\r\n\t      ```\r\n\t\r\n\t      @method all\r\n\t      @for RSVP\r\n\t      @param {Array} promises\r\n\t      @param {String} label\r\n\t      @return {Promise} promise that is fulfilled when all `promises` have been\r\n\t      fulfilled, or rejected if any of them become rejected.\r\n\t    */\r\n\t    function all(promises) {\r\n\t      /*jshint validthis:true */\r\n\t      var Promise = this;\r\n\t\r\n\t      if (!isArray(promises)) {\r\n\t        throw new TypeError('You must pass an array to all.');\r\n\t      }\r\n\t\r\n\t      return new Promise(function(resolve, reject) {\r\n\t        var results = [], remaining = promises.length,\r\n\t        promise;\r\n\t\r\n\t        if (remaining === 0) {\r\n\t          resolve([]);\r\n\t        }\r\n\t\r\n\t        function resolver(index) {\r\n\t          return function(value) {\r\n\t            resolveAll(index, value);\r\n\t          };\r\n\t        }\r\n\t\r\n\t        function resolveAll(index, value) {\r\n\t          results[index] = value;\r\n\t          if (--remaining === 0) {\r\n\t            resolve(results);\r\n\t          }\r\n\t        }\r\n\t\r\n\t        for (var i = 0; i < promises.length; i++) {\r\n\t          promise = promises[i];\r\n\t\r\n\t          if (promise && isFunction(promise.then)) {\r\n\t            promise.then(resolver(i), reject);\r\n\t          } else {\r\n\t            resolveAll(i, promise);\r\n\t          }\r\n\t        }\r\n\t      });\r\n\t    }\r\n\t\r\n\t    __exports__.all = all;\r\n\t  });\r\n\tdefine(\"promise/asap\", \r\n\t  [\"exports\"],\r\n\t  function(__exports__) {\r\n\t    \"use strict\";\r\n\t    var browserGlobal = (typeof window !== 'undefined') ? window : {};\r\n\t    var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\r\n\t    var local = (typeof global !== 'undefined') ? global : (this === undefined? window:this);\r\n\t\r\n\t    // node\r\n\t    function useNextTick() {\r\n\t      return function() {\r\n\t        process.nextTick(flush);\r\n\t      };\r\n\t    }\r\n\t\r\n\t    function useMutationObserver() {\r\n\t      var iterations = 0;\r\n\t      var observer = new BrowserMutationObserver(flush);\r\n\t      var node = document.createTextNode('');\r\n\t      observer.observe(node, { characterData: true });\r\n\t\r\n\t      return function() {\r\n\t        node.data = (iterations = ++iterations % 2);\r\n\t      };\r\n\t    }\r\n\t\r\n\t    function useSetTimeout() {\r\n\t      return function() {\r\n\t        local.setTimeout(flush, 1);\r\n\t      };\r\n\t    }\r\n\t\r\n\t    var queue = [];\r\n\t    function flush() {\r\n\t      for (var i = 0; i < queue.length; i++) {\r\n\t        var tuple = queue[i];\r\n\t        var callback = tuple[0], arg = tuple[1];\r\n\t        callback(arg);\r\n\t      }\r\n\t      queue = [];\r\n\t    }\r\n\t\r\n\t    var scheduleFlush;\r\n\t\r\n\t    // Decide what async method to use to triggering processing of queued callbacks:\r\n\t    if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\r\n\t      scheduleFlush = useNextTick();\r\n\t    } else if (BrowserMutationObserver) {\r\n\t      scheduleFlush = useMutationObserver();\r\n\t    } else {\r\n\t      scheduleFlush = useSetTimeout();\r\n\t    }\r\n\t\r\n\t    function asap(callback, arg) {\r\n\t      var length = queue.push([callback, arg]);\r\n\t      if (length === 1) {\r\n\t        // If length is 1, that means that we need to schedule an async flush.\r\n\t        // If additional callbacks are queued before the queue is flushed, they\r\n\t        // will be processed by this flush that we are scheduling.\r\n\t        scheduleFlush();\r\n\t      }\r\n\t    }\r\n\t\r\n\t    __exports__.asap = asap;\r\n\t  });\r\n\tdefine(\"promise/config\", \r\n\t  [\"exports\"],\r\n\t  function(__exports__) {\r\n\t    \"use strict\";\r\n\t    var config = {\r\n\t      instrument: false\r\n\t    };\r\n\t\r\n\t    function configure(name, value) {\r\n\t      if (arguments.length === 2) {\r\n\t        config[name] = value;\r\n\t      } else {\r\n\t        return config[name];\r\n\t      }\r\n\t    }\r\n\t\r\n\t    __exports__.config = config;\r\n\t    __exports__.configure = configure;\r\n\t  });\r\n\tdefine(\"promise/polyfill\", \r\n\t  [\"./promise\",\"./utils\",\"exports\"],\r\n\t  function(__dependency1__, __dependency2__, __exports__) {\r\n\t    \"use strict\";\r\n\t    /*global self*/\r\n\t    var RSVPPromise = __dependency1__.Promise;\r\n\t    var isFunction = __dependency2__.isFunction;\r\n\t\r\n\t    function polyfill() {\r\n\t      var local;\r\n\t\r\n\t      if (typeof global !== 'undefined') {\r\n\t        local = global;\r\n\t      } else if (typeof window !== 'undefined' && window.document) {\r\n\t        local = window;\r\n\t      } else {\r\n\t        local = self;\r\n\t      }\r\n\t\r\n\t      var es6PromiseSupport = \r\n\t        \"Promise\" in local &&\r\n\t        // Some of these methods are missing from\r\n\t        // Firefox/Chrome experimental implementations\r\n\t        \"resolve\" in local.Promise &&\r\n\t        \"reject\" in local.Promise &&\r\n\t        \"all\" in local.Promise &&\r\n\t        \"race\" in local.Promise &&\r\n\t        // Older version of the spec had a resolver object\r\n\t        // as the arg rather than a function\r\n\t        (function() {\r\n\t          var resolve;\r\n\t          new local.Promise(function(r) { resolve = r; });\r\n\t          return isFunction(resolve);\r\n\t        }());\r\n\t\r\n\t      if (!es6PromiseSupport) {\r\n\t        local.Promise = RSVPPromise;\r\n\t      }\r\n\t    }\r\n\t\r\n\t    __exports__.polyfill = polyfill;\r\n\t  });\r\n\tdefine(\"promise/promise\", \r\n\t  [\"./config\",\"./utils\",\"./all\",\"./race\",\"./resolve\",\"./reject\",\"./asap\",\"exports\"],\r\n\t  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __dependency6__, __dependency7__, __exports__) {\r\n\t    \"use strict\";\r\n\t    var config = __dependency1__.config;\r\n\t    var configure = __dependency1__.configure;\r\n\t    var objectOrFunction = __dependency2__.objectOrFunction;\r\n\t    var isFunction = __dependency2__.isFunction;\r\n\t    var now = __dependency2__.now;\r\n\t    var all = __dependency3__.all;\r\n\t    var race = __dependency4__.race;\r\n\t    var staticResolve = __dependency5__.resolve;\r\n\t    var staticReject = __dependency6__.reject;\r\n\t    var asap = __dependency7__.asap;\r\n\t\r\n\t    var counter = 0;\r\n\t\r\n\t    config.async = asap; // default async is asap;\r\n\t\r\n\t    function Promise(resolver) {\r\n\t      if (!isFunction(resolver)) {\r\n\t        throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\r\n\t      }\r\n\t\r\n\t      if (!(this instanceof Promise)) {\r\n\t        throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\r\n\t      }\r\n\t\r\n\t      this._subscribers = [];\r\n\t\r\n\t      invokeResolver(resolver, this);\r\n\t    }\r\n\t\r\n\t    function invokeResolver(resolver, promise) {\r\n\t      function resolvePromise(value) {\r\n\t        resolve(promise, value);\r\n\t      }\r\n\t\r\n\t      function rejectPromise(reason) {\r\n\t        reject(promise, reason);\r\n\t      }\r\n\t\r\n\t      try {\r\n\t        resolver(resolvePromise, rejectPromise);\r\n\t      } catch(e) {\r\n\t        rejectPromise(e);\r\n\t      }\r\n\t    }\r\n\t\r\n\t    function invokeCallback(settled, promise, callback, detail) {\r\n\t      var hasCallback = isFunction(callback),\r\n\t          value, error, succeeded, failed;\r\n\t\r\n\t      if (hasCallback) {\r\n\t        try {\r\n\t          value = callback(detail);\r\n\t          succeeded = true;\r\n\t        } catch(e) {\r\n\t          failed = true;\r\n\t          error = e;\r\n\t        }\r\n\t      } else {\r\n\t        value = detail;\r\n\t        succeeded = true;\r\n\t      }\r\n\t\r\n\t      if (handleThenable(promise, value)) {\r\n\t        return;\r\n\t      } else if (hasCallback && succeeded) {\r\n\t        resolve(promise, value);\r\n\t      } else if (failed) {\r\n\t        reject(promise, error);\r\n\t      } else if (settled === FULFILLED) {\r\n\t        resolve(promise, value);\r\n\t      } else if (settled === REJECTED) {\r\n\t        reject(promise, value);\r\n\t      }\r\n\t    }\r\n\t\r\n\t    var PENDING   = void 0;\r\n\t    var SEALED    = 0;\r\n\t    var FULFILLED = 1;\r\n\t    var REJECTED  = 2;\r\n\t\r\n\t    function subscribe(parent, child, onFulfillment, onRejection) {\r\n\t      var subscribers = parent._subscribers;\r\n\t      var length = subscribers.length;\r\n\t\r\n\t      subscribers[length] = child;\r\n\t      subscribers[length + FULFILLED] = onFulfillment;\r\n\t      subscribers[length + REJECTED]  = onRejection;\r\n\t    }\r\n\t\r\n\t    function publish(promise, settled) {\r\n\t      var child, callback, subscribers = promise._subscribers, detail = promise._detail;\r\n\t\r\n\t      for (var i = 0; i < subscribers.length; i += 3) {\r\n\t        child = subscribers[i];\r\n\t        callback = subscribers[i + settled];\r\n\t\r\n\t        invokeCallback(settled, child, callback, detail);\r\n\t      }\r\n\t\r\n\t      promise._subscribers = null;\r\n\t    }\r\n\t\r\n\t    Promise.prototype = {\r\n\t      constructor: Promise,\r\n\t\r\n\t      _state: undefined,\r\n\t      _detail: undefined,\r\n\t      _subscribers: undefined,\r\n\t\r\n\t      then: function(onFulfillment, onRejection) {\r\n\t        var promise = this;\r\n\t\r\n\t        var thenPromise = new this.constructor(function() {});\r\n\t\r\n\t        if (this._state) {\r\n\t          var callbacks = arguments;\r\n\t          config.async(function invokePromiseCallback() {\r\n\t            invokeCallback(promise._state, thenPromise, callbacks[promise._state - 1], promise._detail);\r\n\t          });\r\n\t        } else {\r\n\t          subscribe(this, thenPromise, onFulfillment, onRejection);\r\n\t        }\r\n\t\r\n\t        return thenPromise;\r\n\t      },\r\n\t\r\n\t      'catch': function(onRejection) {\r\n\t        return this.then(null, onRejection);\r\n\t      }\r\n\t    };\r\n\t\r\n\t    Promise.all = all;\r\n\t    Promise.race = race;\r\n\t    Promise.resolve = staticResolve;\r\n\t    Promise.reject = staticReject;\r\n\t\r\n\t    function handleThenable(promise, value) {\r\n\t      var then = null,\r\n\t      resolved;\r\n\t\r\n\t      try {\r\n\t        if (promise === value) {\r\n\t          throw new TypeError(\"A promises callback cannot return that same promise.\");\r\n\t        }\r\n\t\r\n\t        if (objectOrFunction(value)) {\r\n\t          then = value.then;\r\n\t\r\n\t          if (isFunction(then)) {\r\n\t            then.call(value, function(val) {\r\n\t              if (resolved) { return true; }\r\n\t              resolved = true;\r\n\t\r\n\t              if (value !== val) {\r\n\t                resolve(promise, val);\r\n\t              } else {\r\n\t                fulfill(promise, val);\r\n\t              }\r\n\t            }, function(val) {\r\n\t              if (resolved) { return true; }\r\n\t              resolved = true;\r\n\t\r\n\t              reject(promise, val);\r\n\t            });\r\n\t\r\n\t            return true;\r\n\t          }\r\n\t        }\r\n\t      } catch (error) {\r\n\t        if (resolved) { return true; }\r\n\t        reject(promise, error);\r\n\t        return true;\r\n\t      }\r\n\t\r\n\t      return false;\r\n\t    }\r\n\t\r\n\t    function resolve(promise, value) {\r\n\t      if (promise === value) {\r\n\t        fulfill(promise, value);\r\n\t      } else if (!handleThenable(promise, value)) {\r\n\t        fulfill(promise, value);\r\n\t      }\r\n\t    }\r\n\t\r\n\t    function fulfill(promise, value) {\r\n\t      if (promise._state !== PENDING) { return; }\r\n\t      promise._state = SEALED;\r\n\t      promise._detail = value;\r\n\t\r\n\t      config.async(publishFulfillment, promise);\r\n\t    }\r\n\t\r\n\t    function reject(promise, reason) {\r\n\t      if (promise._state !== PENDING) { return; }\r\n\t      promise._state = SEALED;\r\n\t      promise._detail = reason;\r\n\t\r\n\t      config.async(publishRejection, promise);\r\n\t    }\r\n\t\r\n\t    function publishFulfillment(promise) {\r\n\t      publish(promise, promise._state = FULFILLED);\r\n\t    }\r\n\t\r\n\t    function publishRejection(promise) {\r\n\t      publish(promise, promise._state = REJECTED);\r\n\t    }\r\n\t\r\n\t    __exports__.Promise = Promise;\r\n\t  });\r\n\tdefine(\"promise/race\", \r\n\t  [\"./utils\",\"exports\"],\r\n\t  function(__dependency1__, __exports__) {\r\n\t    \"use strict\";\r\n\t    /* global toString */\r\n\t    var isArray = __dependency1__.isArray;\r\n\t\r\n\t    /**\r\n\t      `RSVP.race` allows you to watch a series of promises and act as soon as the\r\n\t      first promise given to the `promises` argument fulfills or rejects.\r\n\t\r\n\t      Example:\r\n\t\r\n\t      ```javascript\r\n\t      var promise1 = new RSVP.Promise(function(resolve, reject){\r\n\t        setTimeout(function(){\r\n\t          resolve(\"promise 1\");\r\n\t        }, 200);\r\n\t      });\r\n\t\r\n\t      var promise2 = new RSVP.Promise(function(resolve, reject){\r\n\t        setTimeout(function(){\r\n\t          resolve(\"promise 2\");\r\n\t        }, 100);\r\n\t      });\r\n\t\r\n\t      RSVP.race([promise1, promise2]).then(function(result){\r\n\t        // result === \"promise 2\" because it was resolved before promise1\r\n\t        // was resolved.\r\n\t      });\r\n\t      ```\r\n\t\r\n\t      `RSVP.race` is deterministic in that only the state of the first completed\r\n\t      promise matters. For example, even if other promises given to the `promises`\r\n\t      array argument are resolved, but the first completed promise has become\r\n\t      rejected before the other promises became fulfilled, the returned promise\r\n\t      will become rejected:\r\n\t\r\n\t      ```javascript\r\n\t      var promise1 = new RSVP.Promise(function(resolve, reject){\r\n\t        setTimeout(function(){\r\n\t          resolve(\"promise 1\");\r\n\t        }, 200);\r\n\t      });\r\n\t\r\n\t      var promise2 = new RSVP.Promise(function(resolve, reject){\r\n\t        setTimeout(function(){\r\n\t          reject(new Error(\"promise 2\"));\r\n\t        }, 100);\r\n\t      });\r\n\t\r\n\t      RSVP.race([promise1, promise2]).then(function(result){\r\n\t        // Code here never runs because there are rejected promises!\r\n\t      }, function(reason){\r\n\t        // reason.message === \"promise2\" because promise 2 became rejected before\r\n\t        // promise 1 became fulfilled\r\n\t      });\r\n\t      ```\r\n\t\r\n\t      @method race\r\n\t      @for RSVP\r\n\t      @param {Array} promises array of promises to observe\r\n\t      @param {String} label optional string for describing the promise returned.\r\n\t      Useful for tooling.\r\n\t      @return {Promise} a promise that becomes fulfilled with the value the first\r\n\t      completed promises is resolved with if the first completed promise was\r\n\t      fulfilled, or rejected with the reason that the first completed promise\r\n\t      was rejected with.\r\n\t    */\r\n\t    function race(promises) {\r\n\t      /*jshint validthis:true */\r\n\t      var Promise = this;\r\n\t\r\n\t      if (!isArray(promises)) {\r\n\t        throw new TypeError('You must pass an array to race.');\r\n\t      }\r\n\t      return new Promise(function(resolve, reject) {\r\n\t        var results = [], promise;\r\n\t\r\n\t        for (var i = 0; i < promises.length; i++) {\r\n\t          promise = promises[i];\r\n\t\r\n\t          if (promise && typeof promise.then === 'function') {\r\n\t            promise.then(resolve, reject);\r\n\t          } else {\r\n\t            resolve(promise);\r\n\t          }\r\n\t        }\r\n\t      });\r\n\t    }\r\n\t\r\n\t    __exports__.race = race;\r\n\t  });\r\n\tdefine(\"promise/reject\", \r\n\t  [\"exports\"],\r\n\t  function(__exports__) {\r\n\t    \"use strict\";\r\n\t    /**\r\n\t      `RSVP.reject` returns a promise that will become rejected with the passed\r\n\t      `reason`. `RSVP.reject` is essentially shorthand for the following:\r\n\t\r\n\t      ```javascript\r\n\t      var promise = new RSVP.Promise(function(resolve, reject){\r\n\t        reject(new Error('WHOOPS'));\r\n\t      });\r\n\t\r\n\t      promise.then(function(value){\r\n\t        // Code here doesn't run because the promise is rejected!\r\n\t      }, function(reason){\r\n\t        // reason.message === 'WHOOPS'\r\n\t      });\r\n\t      ```\r\n\t\r\n\t      Instead of writing the above, your code now simply becomes the following:\r\n\t\r\n\t      ```javascript\r\n\t      var promise = RSVP.reject(new Error('WHOOPS'));\r\n\t\r\n\t      promise.then(function(value){\r\n\t        // Code here doesn't run because the promise is rejected!\r\n\t      }, function(reason){\r\n\t        // reason.message === 'WHOOPS'\r\n\t      });\r\n\t      ```\r\n\t\r\n\t      @method reject\r\n\t      @for RSVP\r\n\t      @param {Any} reason value that the returned promise will be rejected with.\r\n\t      @param {String} label optional string for identifying the returned promise.\r\n\t      Useful for tooling.\r\n\t      @return {Promise} a promise that will become rejected with the given\r\n\t      `reason`.\r\n\t    */\r\n\t    function reject(reason) {\r\n\t      /*jshint validthis:true */\r\n\t      var Promise = this;\r\n\t\r\n\t      return new Promise(function (resolve, reject) {\r\n\t        reject(reason);\r\n\t      });\r\n\t    }\r\n\t\r\n\t    __exports__.reject = reject;\r\n\t  });\r\n\tdefine(\"promise/resolve\", \r\n\t  [\"exports\"],\r\n\t  function(__exports__) {\r\n\t    \"use strict\";\r\n\t    function resolve(value) {\r\n\t      /*jshint validthis:true */\r\n\t      if (value && typeof value === 'object' && value.constructor === this) {\r\n\t        return value;\r\n\t      }\r\n\t\r\n\t      var Promise = this;\r\n\t\r\n\t      return new Promise(function(resolve) {\r\n\t        resolve(value);\r\n\t      });\r\n\t    }\r\n\t\r\n\t    __exports__.resolve = resolve;\r\n\t  });\r\n\tdefine(\"promise/utils\", \r\n\t  [\"exports\"],\r\n\t  function(__exports__) {\r\n\t    \"use strict\";\r\n\t    function objectOrFunction(x) {\r\n\t      return isFunction(x) || (typeof x === \"object\" && x !== null);\r\n\t    }\r\n\t\r\n\t    function isFunction(x) {\r\n\t      return typeof x === \"function\";\r\n\t    }\r\n\t\r\n\t    function isArray(x) {\r\n\t      return Object.prototype.toString.call(x) === \"[object Array]\";\r\n\t    }\r\n\t\r\n\t    // Date.now is not available in browsers < IE9\r\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility\r\n\t    var now = Date.now || function() { return new Date().getTime(); };\r\n\t\r\n\t\r\n\t    __exports__.objectOrFunction = objectOrFunction;\r\n\t    __exports__.isFunction = isFunction;\r\n\t    __exports__.isArray = isArray;\r\n\t    __exports__.now = now;\r\n\t  });\r\n\trequireModule('promise/polyfill').polyfill();\r\n\t}());(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"papergirl\"] = factory();\n\t\telse\n\t\t\troot[\"papergirl\"] = factory();\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t\n\t\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t'use strict';\n\t\n\t\texports.__esModule = true;\n\t\n\t\tvar _localforage = __webpack_require__(1);\n\t\n\t\tvar _localforage2 = _interopRequireDefault(_localforage);\n\t\n\t\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t\tvar papergirl = function (globalObject) {\n\t\t    'use strict';\n\t\n\t\t    var GLOBAL_NAMESPACE = 'papergirl';\n\t\t    var _S_ = '|';\n\t\t    var _NS_ = GLOBAL_NAMESPACE + _S_;\n\t\t    var version = '1.0.0';\n\t\n\t\t    var _window = function (window) {\n\t\t        return window;\n\t\t    }(globalObject);\n\t\n\t\t    function executeCallback(promise, callback, errorCallback) {\n\t\t        if (typeof callback === 'function') {\n\t\t            promise.then(callback);\n\t\t        }\n\t\n\t\t        if (typeof errorCallback === 'function') {\n\t\t            promise[\"catch\"](errorCallback);\n\t\t        }\n\t\t    }\n\t\n\t\t    var Papergirl = function () {\n\t\t        function Papergirl(options) {\n\t\t            _classCallCheck(this, Papergirl);\n\t\n\t\t            this.cacheFirst = 'cacheFirst';\n\t\t            this.networkFirst = 'networkFirst';\n\t\t            this.cacheOnly = 'cacheOnly';\n\t\t            this.networkOnly = 'networkOnly';\n\t\n\t\t            // Global storage.\n\t\t            options = options || {};\n\t\t            options.name = options.name || _NS_ + 'public' + _S_ + version;\n\t\t            this.storage = _localforage2[\"default\"].createInstance(options);\n\t\t        }\n\t\n\t\t        Papergirl.prototype.ready = function ready(callback) {\n\t\t            var promise = new Promise(function (resolve, reject) {\n\t\t                if (!_window) {\n\t\t                    reject(new Error('Something wrong.'));\n\t\t                } else {\n\t\t                    resolve(_window);\n\t\t                }\n\t\t            });\n\t\n\t\t            executeCallback(promise, callback, callback);\n\t\t            return promise;\n\t\t        };\n\t\n\t\t        Papergirl.prototype.createInstance = function createInstance(options) {\n\t\t            return new Papergirl(options);\n\t\t        };\n\t\n\t\t        // Methods -----------------------------------------------------------------------------------------------\n\t\n\t\t        Papergirl.prototype._request = function _request(url, options) {\n\t\t            var self = this;\n\t\n\t\t            // Options?\n\t\t            options = options || {};\n\t\n\t\t            // Return a new promise.\n\t\t            return new Promise(function (resolve, reject) {\n\t\t                // Do the usual XHR stuff\n\t\t                var xhr = options.xhr = XMLHttpRequest ? new XMLHttpRequest() : new window.ActiveXObject('Microsoft.XMLHTTP');\n\t\n\t\t                xhr.open('GET', url);\n\t\n\t\t                if (options.etag) {\n\t\t                    xhr.setRequestHeader('If-None-Match', options.etag);\n\t\t                }\n\t\n\t\t                xhr.onload = function () {\n\t\n\t\t                    // Hook onload state.\n\t\t                    self._hook(options, 'onload', [xhr]);\n\t\n\t\t                    // Free some ram.\n\t\t                    self.delloc = function (options) {\n\t\t                        if (options) {\n\t\t                            delete options.xhr;\n\t\t                            delete options.data;\n\t\t                            delete options.etag;\n\t\t                        }\n\t\t                    };\n\t\n\t\t                    switch (xhr.status) {\n\t\t                        case 200:\n\t\t                            // For faster reponse.\n\t\t                            var responseText = xhr.responseText || null;\n\t\n\t\t                            // Set data with etag.\n\t\t                            var etag;\n\t\t                            try {\n\t\t                                etag = options.etag = xhr.getResponseHeader('etag') || null;\n\t\t                            } catch (error) {\n\t\t                                console.log(error);\n\t\t                            }\n\t\n\t\t                            self.setData(url, responseText, etag).then(function (data) {\n\t\t                                // Has cached?\n\t\t                                if (options.data === null || typeof options.data === 'undefined') {\n\t\t                                    // Insert : no cached data\n\t\t                                    self._hook(options, 'insert', [data, url, options]);\n\t\n\t\t                                    // Will hook upsert\n\t\t                                    self._hook(options, 'upsert', [data, url, options]);\n\t\t                                } else {\n\t\t                                    // Cached, but equal?\n\t\t                                    if (options.data.length !== data.length || options.data !== data) {\n\t\t                                        // Update : cached size not equal new data size || cached data not equal new data\n\t\t                                        self._hook(options, 'update', [data, url, options]);\n\t\n\t\t                                        // Will hook upsert\n\t\t                                        self._hook(options, 'upsert', [data, url, options]);\n\t\t                                    } else {\n\t\t                                        // Local cached === Remote\n\t\t                                        self._hook(options, 'match', [data, url, options]);\n\t\t                                    }\n\t\t                                }\n\t\n\t\t                                // OK + cached\n\t\t                                self._hook(options, 'sync', [data, url, options]);\n\t\n\t\t                                // Done\n\t\t                                resolve(responseText);\n\t\n\t\t                                // Free some ram.\n\t\t                                self.delloc(options);\n\t\t                            });\n\t\n\t\t                            break;\n\t\t                        case 304:\n\t\t                            // No update, will use data in local storage.\n\t\t                            if (options.data) {\n\t\t                                // Hook not modify\n\t\t                                self._hook(options, 'not_mod', [options.data, url, options]);\n\t\n\t\t                                // OK, from cached\n\t\t                                self._hook(options, 'sync', [options.data, url, options]);\n\t\n\t\t                                // Cached data.\n\t\t                                resolve(options.data);\n\t\n\t\t                                // Free some ram.\n\t\t                                self.delloc(options);\n\t\t                            } else {\n\t\t                                // Clear invalid data.\n\t\t                                self.storage.removeData(url);\n\t\n\t\t                                // Free some ram.\n\t\t                                self.delloc(options);\n\t\n\t\t                                // Retry without etag, should get 200.\n\t\t                                self.request(url, options).then(resolve);\n\t\t                            }\n\t\n\t\t                            break;\n\t\t                        default:\n\t\t                            // Something wrong\n\t\t                            reject(new Error(xhr.statusText));\n\t\n\t\t                            // Free some ram.\n\t\t                            self.delloc(options);\n\t\t                            break;\n\t\t                    }\n\t\t                };\n\t\n\t\t                // Handle network errors.\n\t\t                xhr.onerror = function (e) {\n\t\t                    reject(new Error('Request Error : ' + e.target.status));\n\t\t                };\n\t\n\t\t                // Hook beforeSend state.\n\t\t                self._hook(options, 'beforeSend', [xhr]);\n\t\n\t\t                // Make a request.\n\t\t                xhr.send();\n\t\t            });\n\t\t        };\n\t\n\t\t        Papergirl.prototype._hook = function _hook(options, functionName, args) {\n\t\t            if (options && typeof options[functionName] === 'function') {\n\t\t                options[functionName].apply(this, args);\n\t\n\t\t                // Each events should happen only once.\n\t\t                options[functionName] = null;\n\t\t            }\n\t\t        };\n\t\n\t\t        // Expected : options.name as String\n\t\t        // Expected : upsert, insert, update, not_mod, remote, remote as function\n\t\t        // Expected : options.strategy as papergirl.cacheFirst, papergirl.networkFirst, papergirl.cacheOnly, papergirl.networkOnly\n\t\n\t\t        Papergirl.prototype.request = function request(url, options) {\n\t\t            var self = this;\n\t\n\t\t            // Options?\n\t\t            options = options || {};\n\t\n\t\t            // networkFirst\n\t\t            options.strategy = options.strategy || this.cacheFirst;\n\t\n\t\t            // Remote only\n\t\t            if (options.strategy === this.networkOnly) {\n\t\t                return self._request(url, options);\n\t\t            }\n\t\n\t\t            // networkFirst\n\t\t            if (options.strategy === this.networkFirst) {\n\t\t                return new Promise(function (resolve, reject) {\n\t\t                    return self._request(url, options).then(function (data) {\n\t\t                        // Success.\n\t\t                        resolve(data);\n\t\t                    })[\"catch\"](function (error) {\n\t\t                        // Fail, try cache.\n\t\t                        self.getData(url).then(function (data) {\n\t\t                            if (data) {\n\t\t                                resolve(data);\n\t\t                            } else {\n\t\t                                reject(new Error('Network Error and no cached. : ' + error));\n\t\t                            }\n\t\t                        });\n\t\t                    });\n\t\t                });\n\t\t            }\n\t\n\t\t            // cacheFirst\n\t\t            return self.storage.getItem(_NS_ + url).then(function (item) {\n\t\n\t\t                // Temporary inject : Use for speed look up overhead.\n\t\t                var data = item ? item[0] : null;\n\t\t                var etag = item ? item[1] : null;\n\t\t                options.data = data;\n\t\t                options.etag = etag;\n\t\n\t\t                // Rarely use, cache or die.\n\t\t                if (options.strategy === self.cacheOnly) {\n\t\t                    return new Promise(function (resolve, reject) {\n\t\t                        if (data) {\n\t\t                            resolve(data);\n\t\t                        } else {\n\t\t                            reject(new Error('No cached.'));\n\t\t                        }\n\t\t                    });\n\t\t                }\n\t\n\t\t                // Cached first.\n\t\t                if (data && options.strategy === self.cacheFirst) {\n\t\t                    self._hook(options, 'cache', [data, url, options]);\n\t\t                }\n\t\n\t\t                // Try fetch from remote.\n\t\t                return self._request(url, options);\n\t\t            });\n\t\t        };\n\t\n\t\t        // Core Methods -----------------------------------------------------------------------------------------------\n\t\n\t\t        Papergirl.prototype._getValueByIndex = function _getValueByIndex(index) {\n\t\t            return function (item) {\n\t\t                return new Promise(function (resolve) {\n\t\t                    resolve(item && item.length > index ? item[index] : null);\n\t\t                });\n\t\t            };\n\t\t        };\n\t\n\t\t        Papergirl.prototype.getData = function getData(url) {\n\t\t            return this.storage.getItem(_NS_ + url).then(this._getValueByIndex(0));\n\t\t        };\n\t\n\t\t        Papergirl.prototype.setData = function setData(url, data) {\n\t\t            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t\t                args[_key - 2] = arguments[_key];\n\t\t            }\n\t\n\t\t            return this.storage.setItem(_NS_ + url, [data].concat(args)).then(this._getValueByIndex(0));\n\t\t        };\n\t\n\t\t        Papergirl.prototype.removeData = function removeData(url) {\n\t\t            return this.storage.removeItem(_NS_ + url);\n\t\t        };\n\t\n\t\t        Papergirl.prototype.clear = function clear() {\n\t\t            var self = this;\n\t\t            return this.storage.iterate(function (value, key) {\n\t\t                // TODO : Chain promise here?, Devare by storeName?\n\t\t                if (key.indexOf(_NS_) === 0) {\n\t\t                    self.storage.removeItem(key);\n\t\t                }\n\t\t            });\n\t\t        };\n\t\n\t\t        Papergirl.prototype.getETAG = function getETAG(url) {\n\t\t            return this.storage.getItem(_NS_ + url).then(this._getValueByIndex(1));\n\t\t        };\n\t\n\t\t        // Public Methods -----------------------------------------------------------------------------------------------\n\t\n\t\t        // Expected got_catch, upsert via options\n\t\n\t\n\t\t        Papergirl.prototype.getCacheFirst = function getCacheFirst(url, options) {\n\t\t            // Cache first.\n\t\t            options = options || {};\n\t\t            options.strategy = this.cacheFirst;\n\t\n\t\t            // Then remote.\n\t\t            return this.request(url, options);\n\t\t        };\n\t\n\t\t        Papergirl.prototype.watch = function watch(me) {\n\t\t            // TODO : unique, timeout\n\t\t            var _me = me || {};\n\t\t            return new F(this, _me);\n\t\t        };\n\t\n\t\t        return Papergirl;\n\t\t    }();\n\t\n\t\t    var F = function () {\n\t\t        function F(parent, me) {\n\t\t            _classCallCheck(this, F);\n\t\n\t\t            this.parent = parent;\n\t\t            this.me = me;\n\t\t        }\n\t\n\t\t        F.prototype.onCache = function onCache(func) {\n\t\t            this._onCache = func;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.onSend = function onSend(func) {\n\t\t            this._onSend = func;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.onLoad = function onLoad(func) {\n\t\t            this._onLoad = func;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.onInsert = function onInsert(func) {\n\t\t            this._onInsert = func;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.onUpdate = function onUpdate(func) {\n\t\t            this._onUpdate = func;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.onUpsert = function onUpsert(func) {\n\t\t            this._onUpsert = func;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.onMatch = function onMatch(func) {\n\t\t            this._onMatch = func;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.onSync = function onSync(func) {\n\t\t            this._onSync = func;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.onError = function onError(func) {\n\t\t            this._onError = func;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.request = function request(url, options) {\n\t\t            var self = this;\n\t\t            options = options || {};\n\t\t            options.strategy = this.cacheFirst;\n\t\n\t\t            options.cache = this._onCache;\n\t\t            options.beforeSend = this._onSend;\n\t\t            options.onload = this._onLoad;\n\t\t            options.insert = this._onInsert;\n\t\t            options.update = this._onUpdate;\n\t\t            options.upsert = this._onUpsert;\n\t\t            options.match = this._onMatch;\n\t\t            options.not_mod = this._onNotModified;\n\t\t            options.sync = this._onSync;\n\t\n\t\t            // Auto use local uri if has it in localhost origin.\n\t\t            if (location.hostname === 'localhost' && this._local_uri) {\n\t\t                url = this._local_uri;\n\t\t            }\n\t\n\t\t            this.parent.getCacheFirst(url, options).then(function () {\n\t\t                self.delloc(self);\n\t\t            })[\"catch\"](this._onError);\n\t\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.local = function local(uri) {\n\t\t            this._local_uri = uri;\n\t\t            return this;\n\t\t        };\n\t\n\t\t        F.prototype.delloc = function delloc(self) {\n\t\t            delete self.parent;\n\t\t            delete self.me;\n\t\t            delete self._onCache;\n\t\t            delete self._onSend;\n\t\t            delete self._onLoad;\n\t\t            delete self._onInsert;\n\t\t            delete self._onUpdate;\n\t\t            delete self._onUpsert;\n\t\t            delete self._onMatch;\n\t\t            delete self._onNotModified;\n\t\t            delete self._onSync;\n\t\t            delete self._onError;\n\t\t        };\n\t\n\t\t        return F;\n\t\t    }();\n\t\n\t\t    // The actual papergirl object that we expose as a module or via a\n\t\t    // global. It's extended by pulling in one of our other libraries.\n\t\n\t\n\t\t    return new Papergirl();\n\t\t}(typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {});\n\t\texports[\"default\"] = papergirl;\n\t\tmodule.exports = exports['default'];\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\tvar require;/* WEBPACK VAR INJECTION */(function(global, process) {/*!\n\t\t    localForage -- Offline Storage, Improved\n\t\t    Version 1.4.0\n\t\t    https://mozilla.github.io/localForage\n\t\t    (c) 2013-2015 Mozilla, Apache License 2.0\n\t\t*/\n\t\t(function() {\n\t\tvar define, requireModule, require, requirejs;\n\t\n\t\t(function() {\n\t\t  var registry = {}, seen = {};\n\t\n\t\t  define = function(name, deps, callback) {\n\t\t    registry[name] = { deps: deps, callback: callback };\n\t\t  };\n\t\n\t\t  requirejs = require = requireModule = function(name) {\n\t\t  requirejs._eak_seen = registry;\n\t\n\t\t    if (seen[name]) { return seen[name]; }\n\t\t    seen[name] = {};\n\t\n\t\t    if (!registry[name]) {\n\t\t      throw new Error(\"Could not find module \" + name);\n\t\t    }\n\t\n\t\t    var mod = registry[name],\n\t\t        deps = mod.deps,\n\t\t        callback = mod.callback,\n\t\t        reified = [],\n\t\t        exports;\n\t\n\t\t    for (var i=0, l=deps.length; i<l; i++) {\n\t\t      if (deps[i] === 'exports') {\n\t\t        reified.push(exports = {});\n\t\t      } else {\n\t\t        reified.push(requireModule(resolve(deps[i])));\n\t\t      }\n\t\t    }\n\t\n\t\t    var value = callback.apply(this, reified);\n\t\t    return seen[name] = exports || value;\n\t\n\t\t    function resolve(child) {\n\t\t      if (child.charAt(0) !== '.') { return child; }\n\t\t      var parts = child.split(\"/\");\n\t\t      var parentBase = name.split(\"/\").slice(0, -1);\n\t\n\t\t      for (var i=0, l=parts.length; i<l; i++) {\n\t\t        var part = parts[i];\n\t\n\t\t        if (part === '..') { parentBase.pop(); }\n\t\t        else if (part === '.') { continue; }\n\t\t        else { parentBase.push(part); }\n\t\t      }\n\t\n\t\t      return parentBase.join(\"/\");\n\t\t    }\n\t\t  };\n\t\t})();\n\t\n\t\tdefine(\"promise/all\", \n\t\t  [\"./utils\",\"exports\"],\n\t\t  function(__dependency1__, __exports__) {\n\t\t    \"use strict\";\n\t\t    /* global toString */\n\t\n\t\t    var isArray = __dependency1__.isArray;\n\t\t    var isFunction = __dependency1__.isFunction;\n\t\n\t\t    /**\n\t\t      Returns a promise that is fulfilled when all the given promises have been\n\t\t      fulfilled, or rejected if any of them become rejected. The return promise\n\t\t      is fulfilled with an array that gives all the values in the order they were\n\t\t      passed in the `promises` array argument.\n\t\n\t\t      Example:\n\t\n\t\t      ```javascript\n\t\t      var promise1 = RSVP.resolve(1);\n\t\t      var promise2 = RSVP.resolve(2);\n\t\t      var promise3 = RSVP.resolve(3);\n\t\t      var promises = [ promise1, promise2, promise3 ];\n\t\n\t\t      RSVP.all(promises).then(function(array){\n\t\t        // The array here would be [ 1, 2, 3 ];\n\t\t      });\n\t\t      ```\n\t\n\t\t      If any of the `promises` given to `RSVP.all` are rejected, the first promise\n\t\t      that is rejected will be given as an argument to the returned promises's\n\t\t      rejection handler. For example:\n\t\n\t\t      Example:\n\t\n\t\t      ```javascript\n\t\t      var promise1 = RSVP.resolve(1);\n\t\t      var promise2 = RSVP.reject(new Error(\"2\"));\n\t\t      var promise3 = RSVP.reject(new Error(\"3\"));\n\t\t      var promises = [ promise1, promise2, promise3 ];\n\t\n\t\t      RSVP.all(promises).then(function(array){\n\t\t        // Code here never runs because there are rejected promises!\n\t\t      }, function(error) {\n\t\t        // error.message === \"2\"\n\t\t      });\n\t\t      ```\n\t\n\t\t      @method all\n\t\t      @for RSVP\n\t\t      @param {Array} promises\n\t\t      @param {String} label\n\t\t      @return {Promise} promise that is fulfilled when all `promises` have been\n\t\t      fulfilled, or rejected if any of them become rejected.\n\t\t    */\n\t\t    function all(promises) {\n\t\t      /*jshint validthis:true */\n\t\t      var Promise = this;\n\t\n\t\t      if (!isArray(promises)) {\n\t\t        throw new TypeError('You must pass an array to all.');\n\t\t      }\n\t\n\t\t      return new Promise(function(resolve, reject) {\n\t\t        var results = [], remaining = promises.length,\n\t\t        promise;\n\t\n\t\t        if (remaining === 0) {\n\t\t          resolve([]);\n\t\t        }\n\t\n\t\t        function resolver(index) {\n\t\t          return function(value) {\n\t\t            resolveAll(index, value);\n\t\t          };\n\t\t        }\n\t\n\t\t        function resolveAll(index, value) {\n\t\t          results[index] = value;\n\t\t          if (--remaining === 0) {\n\t\t            resolve(results);\n\t\t          }\n\t\t        }\n\t\n\t\t        for (var i = 0; i < promises.length; i++) {\n\t\t          promise = promises[i];\n\t\n\t\t          if (promise && isFunction(promise.then)) {\n\t\t            promise.then(resolver(i), reject);\n\t\t          } else {\n\t\t            resolveAll(i, promise);\n\t\t          }\n\t\t        }\n\t\t      });\n\t\t    }\n\t\n\t\t    __exports__.all = all;\n\t\t  });\n\t\tdefine(\"promise/asap\", \n\t\t  [\"exports\"],\n\t\t  function(__exports__) {\n\t\t    \"use strict\";\n\t\t    var browserGlobal = (typeof window !== 'undefined') ? window : {};\n\t\t    var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\n\t\t    var local = (typeof global !== 'undefined') ? global : (this === undefined? window:this);\n\t\n\t\t    // node\n\t\t    function useNextTick() {\n\t\t      return function() {\n\t\t        process.nextTick(flush);\n\t\t      };\n\t\t    }\n\t\n\t\t    function useMutationObserver() {\n\t\t      var iterations = 0;\n\t\t      var observer = new BrowserMutationObserver(flush);\n\t\t      var node = document.createTextNode('');\n\t\t      observer.observe(node, { characterData: true });\n\t\n\t\t      return function() {\n\t\t        node.data = (iterations = ++iterations % 2);\n\t\t      };\n\t\t    }\n\t\n\t\t    function useSetTimeout() {\n\t\t      return function() {\n\t\t        local.setTimeout(flush, 1);\n\t\t      };\n\t\t    }\n\t\n\t\t    var queue = [];\n\t\t    function flush() {\n\t\t      for (var i = 0; i < queue.length; i++) {\n\t\t        var tuple = queue[i];\n\t\t        var callback = tuple[0], arg = tuple[1];\n\t\t        callback(arg);\n\t\t      }\n\t\t      queue = [];\n\t\t    }\n\t\n\t\t    var scheduleFlush;\n\t\n\t\t    // Decide what async method to use to triggering processing of queued callbacks:\n\t\t    if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\n\t\t      scheduleFlush = useNextTick();\n\t\t    } else if (BrowserMutationObserver) {\n\t\t      scheduleFlush = useMutationObserver();\n\t\t    } else {\n\t\t      scheduleFlush = useSetTimeout();\n\t\t    }\n\t\n\t\t    function asap(callback, arg) {\n\t\t      var length = queue.push([callback, arg]);\n\t\t      if (length === 1) {\n\t\t        // If length is 1, that means that we need to schedule an async flush.\n\t\t        // If additional callbacks are queued before the queue is flushed, they\n\t\t        // will be processed by this flush that we are scheduling.\n\t\t        scheduleFlush();\n\t\t      }\n\t\t    }\n\t\n\t\t    __exports__.asap = asap;\n\t\t  });\n\t\tdefine(\"promise/config\", \n\t\t  [\"exports\"],\n\t\t  function(__exports__) {\n\t\t    \"use strict\";\n\t\t    var config = {\n\t\t      instrument: false\n\t\t    };\n\t\n\t\t    function configure(name, value) {\n\t\t      if (arguments.length === 2) {\n\t\t        config[name] = value;\n\t\t      } else {\n\t\t        return config[name];\n\t\t      }\n\t\t    }\n\t\n\t\t    __exports__.config = config;\n\t\t    __exports__.configure = configure;\n\t\t  });\n\t\tdefine(\"promise/polyfill\", \n\t\t  [\"./promise\",\"./utils\",\"exports\"],\n\t\t  function(__dependency1__, __dependency2__, __exports__) {\n\t\t    \"use strict\";\n\t\t    /*global self*/\n\t\t    var RSVPPromise = __dependency1__.Promise;\n\t\t    var isFunction = __dependency2__.isFunction;\n\t\n\t\t    function polyfill() {\n\t\t      var local;\n\t\n\t\t      if (typeof global !== 'undefined') {\n\t\t        local = global;\n\t\t      } else if (typeof window !== 'undefined' && window.document) {\n\t\t        local = window;\n\t\t      } else {\n\t\t        local = self;\n\t\t      }\n\t\n\t\t      var es6PromiseSupport = \n\t\t        \"Promise\" in local &&\n\t\t        // Some of these methods are missing from\n\t\t        // Firefox/Chrome experimental implementations\n\t\t        \"resolve\" in local.Promise &&\n\t\t        \"reject\" in local.Promise &&\n\t\t        \"all\" in local.Promise &&\n\t\t        \"race\" in local.Promise &&\n\t\t        // Older version of the spec had a resolver object\n\t\t        // as the arg rather than a function\n\t\t        (function() {\n\t\t          var resolve;\n\t\t          new local.Promise(function(r) { resolve = r; });\n\t\t          return isFunction(resolve);\n\t\t        }());\n\t\n\t\t      if (!es6PromiseSupport) {\n\t\t        local.Promise = RSVPPromise;\n\t\t      }\n\t\t    }\n\t\n\t\t    __exports__.polyfill = polyfill;\n\t\t  });\n\t\tdefine(\"promise/promise\", \n\t\t  [\"./config\",\"./utils\",\"./all\",\"./race\",\"./resolve\",\"./reject\",\"./asap\",\"exports\"],\n\t\t  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __dependency6__, __dependency7__, __exports__) {\n\t\t    \"use strict\";\n\t\t    var config = __dependency1__.config;\n\t\t    var configure = __dependency1__.configure;\n\t\t    var objectOrFunction = __dependency2__.objectOrFunction;\n\t\t    var isFunction = __dependency2__.isFunction;\n\t\t    var now = __dependency2__.now;\n\t\t    var all = __dependency3__.all;\n\t\t    var race = __dependency4__.race;\n\t\t    var staticResolve = __dependency5__.resolve;\n\t\t    var staticReject = __dependency6__.reject;\n\t\t    var asap = __dependency7__.asap;\n\t\n\t\t    var counter = 0;\n\t\n\t\t    config.async = asap; // default async is asap;\n\t\n\t\t    function Promise(resolver) {\n\t\t      if (!isFunction(resolver)) {\n\t\t        throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n\t\t      }\n\t\n\t\t      if (!(this instanceof Promise)) {\n\t\t        throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n\t\t      }\n\t\n\t\t      this._subscribers = [];\n\t\n\t\t      invokeResolver(resolver, this);\n\t\t    }\n\t\n\t\t    function invokeResolver(resolver, promise) {\n\t\t      function resolvePromise(value) {\n\t\t        resolve(promise, value);\n\t\t      }\n\t\n\t\t      function rejectPromise(reason) {\n\t\t        reject(promise, reason);\n\t\t      }\n\t\n\t\t      try {\n\t\t        resolver(resolvePromise, rejectPromise);\n\t\t      } catch(e) {\n\t\t        rejectPromise(e);\n\t\t      }\n\t\t    }\n\t\n\t\t    function invokeCallback(settled, promise, callback, detail) {\n\t\t      var hasCallback = isFunction(callback),\n\t\t          value, error, succeeded, failed;\n\t\n\t\t      if (hasCallback) {\n\t\t        try {\n\t\t          value = callback(detail);\n\t\t          succeeded = true;\n\t\t        } catch(e) {\n\t\t          failed = true;\n\t\t          error = e;\n\t\t        }\n\t\t      } else {\n\t\t        value = detail;\n\t\t        succeeded = true;\n\t\t      }\n\t\n\t\t      if (handleThenable(promise, value)) {\n\t\t        return;\n\t\t      } else if (hasCallback && succeeded) {\n\t\t        resolve(promise, value);\n\t\t      } else if (failed) {\n\t\t        reject(promise, error);\n\t\t      } else if (settled === FULFILLED) {\n\t\t        resolve(promise, value);\n\t\t      } else if (settled === REJECTED) {\n\t\t        reject(promise, value);\n\t\t      }\n\t\t    }\n\t\n\t\t    var PENDING   = void 0;\n\t\t    var SEALED    = 0;\n\t\t    var FULFILLED = 1;\n\t\t    var REJECTED  = 2;\n\t\n\t\t    function subscribe(parent, child, onFulfillment, onRejection) {\n\t\t      var subscribers = parent._subscribers;\n\t\t      var length = subscribers.length;\n\t\n\t\t      subscribers[length] = child;\n\t\t      subscribers[length + FULFILLED] = onFulfillment;\n\t\t      subscribers[length + REJECTED]  = onRejection;\n\t\t    }\n\t\n\t\t    function publish(promise, settled) {\n\t\t      var child, callback, subscribers = promise._subscribers, detail = promise._detail;\n\t\n\t\t      for (var i = 0; i < subscribers.length; i += 3) {\n\t\t        child = subscribers[i];\n\t\t        callback = subscribers[i + settled];\n\t\n\t\t        invokeCallback(settled, child, callback, detail);\n\t\t      }\n\t\n\t\t      promise._subscribers = null;\n\t\t    }\n\t\n\t\t    Promise.prototype = {\n\t\t      constructor: Promise,\n\t\n\t\t      _state: undefined,\n\t\t      _detail: undefined,\n\t\t      _subscribers: undefined,\n\t\n\t\t      then: function(onFulfillment, onRejection) {\n\t\t        var promise = this;\n\t\n\t\t        var thenPromise = new this.constructor(function() {});\n\t\n\t\t        if (this._state) {\n\t\t          var callbacks = arguments;\n\t\t          config.async(function invokePromiseCallback() {\n\t\t            invokeCallback(promise._state, thenPromise, callbacks[promise._state - 1], promise._detail);\n\t\t          });\n\t\t        } else {\n\t\t          subscribe(this, thenPromise, onFulfillment, onRejection);\n\t\t        }\n\t\n\t\t        return thenPromise;\n\t\t      },\n\t\n\t\t      'catch': function(onRejection) {\n\t\t        return this.then(null, onRejection);\n\t\t      }\n\t\t    };\n\t\n\t\t    Promise.all = all;\n\t\t    Promise.race = race;\n\t\t    Promise.resolve = staticResolve;\n\t\t    Promise.reject = staticReject;\n\t\n\t\t    function handleThenable(promise, value) {\n\t\t      var then = null,\n\t\t      resolved;\n\t\n\t\t      try {\n\t\t        if (promise === value) {\n\t\t          throw new TypeError(\"A promises callback cannot return that same promise.\");\n\t\t        }\n\t\n\t\t        if (objectOrFunction(value)) {\n\t\t          then = value.then;\n\t\n\t\t          if (isFunction(then)) {\n\t\t            then.call(value, function(val) {\n\t\t              if (resolved) { return true; }\n\t\t              resolved = true;\n\t\n\t\t              if (value !== val) {\n\t\t                resolve(promise, val);\n\t\t              } else {\n\t\t                fulfill(promise, val);\n\t\t              }\n\t\t            }, function(val) {\n\t\t              if (resolved) { return true; }\n\t\t              resolved = true;\n\t\n\t\t              reject(promise, val);\n\t\t            });\n\t\n\t\t            return true;\n\t\t          }\n\t\t        }\n\t\t      } catch (error) {\n\t\t        if (resolved) { return true; }\n\t\t        reject(promise, error);\n\t\t        return true;\n\t\t      }\n\t\n\t\t      return false;\n\t\t    }\n\t\n\t\t    function resolve(promise, value) {\n\t\t      if (promise === value) {\n\t\t        fulfill(promise, value);\n\t\t      } else if (!handleThenable(promise, value)) {\n\t\t        fulfill(promise, value);\n\t\t      }\n\t\t    }\n\t\n\t\t    function fulfill(promise, value) {\n\t\t      if (promise._state !== PENDING) { return; }\n\t\t      promise._state = SEALED;\n\t\t      promise._detail = value;\n\t\n\t\t      config.async(publishFulfillment, promise);\n\t\t    }\n\t\n\t\t    function reject(promise, reason) {\n\t\t      if (promise._state !== PENDING) { return; }\n\t\t      promise._state = SEALED;\n\t\t      promise._detail = reason;\n\t\n\t\t      config.async(publishRejection, promise);\n\t\t    }\n\t\n\t\t    function publishFulfillment(promise) {\n\t\t      publish(promise, promise._state = FULFILLED);\n\t\t    }\n\t\n\t\t    function publishRejection(promise) {\n\t\t      publish(promise, promise._state = REJECTED);\n\t\t    }\n\t\n\t\t    __exports__.Promise = Promise;\n\t\t  });\n\t\tdefine(\"promise/race\", \n\t\t  [\"./utils\",\"exports\"],\n\t\t  function(__dependency1__, __exports__) {\n\t\t    \"use strict\";\n\t\t    /* global toString */\n\t\t    var isArray = __dependency1__.isArray;\n\t\n\t\t    /**\n\t\t      `RSVP.race` allows you to watch a series of promises and act as soon as the\n\t\t      first promise given to the `promises` argument fulfills or rejects.\n\t\n\t\t      Example:\n\t\n\t\t      ```javascript\n\t\t      var promise1 = new RSVP.Promise(function(resolve, reject){\n\t\t        setTimeout(function(){\n\t\t          resolve(\"promise 1\");\n\t\t        }, 200);\n\t\t      });\n\t\n\t\t      var promise2 = new RSVP.Promise(function(resolve, reject){\n\t\t        setTimeout(function(){\n\t\t          resolve(\"promise 2\");\n\t\t        }, 100);\n\t\t      });\n\t\n\t\t      RSVP.race([promise1, promise2]).then(function(result){\n\t\t        // result === \"promise 2\" because it was resolved before promise1\n\t\t        // was resolved.\n\t\t      });\n\t\t      ```\n\t\n\t\t      `RSVP.race` is deterministic in that only the state of the first completed\n\t\t      promise matters. For example, even if other promises given to the `promises`\n\t\t      array argument are resolved, but the first completed promise has become\n\t\t      rejected before the other promises became fulfilled, the returned promise\n\t\t      will become rejected:\n\t\n\t\t      ```javascript\n\t\t      var promise1 = new RSVP.Promise(function(resolve, reject){\n\t\t        setTimeout(function(){\n\t\t          resolve(\"promise 1\");\n\t\t        }, 200);\n\t\t      });\n\t\n\t\t      var promise2 = new RSVP.Promise(function(resolve, reject){\n\t\t        setTimeout(function(){\n\t\t          reject(new Error(\"promise 2\"));\n\t\t        }, 100);\n\t\t      });\n\t\n\t\t      RSVP.race([promise1, promise2]).then(function(result){\n\t\t        // Code here never runs because there are rejected promises!\n\t\t      }, function(reason){\n\t\t        // reason.message === \"promise2\" because promise 2 became rejected before\n\t\t        // promise 1 became fulfilled\n\t\t      });\n\t\t      ```\n\t\n\t\t      @method race\n\t\t      @for RSVP\n\t\t      @param {Array} promises array of promises to observe\n\t\t      @param {String} label optional string for describing the promise returned.\n\t\t      Useful for tooling.\n\t\t      @return {Promise} a promise that becomes fulfilled with the value the first\n\t\t      completed promises is resolved with if the first completed promise was\n\t\t      fulfilled, or rejected with the reason that the first completed promise\n\t\t      was rejected with.\n\t\t    */\n\t\t    function race(promises) {\n\t\t      /*jshint validthis:true */\n\t\t      var Promise = this;\n\t\n\t\t      if (!isArray(promises)) {\n\t\t        throw new TypeError('You must pass an array to race.');\n\t\t      }\n\t\t      return new Promise(function(resolve, reject) {\n\t\t        var results = [], promise;\n\t\n\t\t        for (var i = 0; i < promises.length; i++) {\n\t\t          promise = promises[i];\n\t\n\t\t          if (promise && typeof promise.then === 'function') {\n\t\t            promise.then(resolve, reject);\n\t\t          } else {\n\t\t            resolve(promise);\n\t\t          }\n\t\t        }\n\t\t      });\n\t\t    }\n\t\n\t\t    __exports__.race = race;\n\t\t  });\n\t\tdefine(\"promise/reject\", \n\t\t  [\"exports\"],\n\t\t  function(__exports__) {\n\t\t    \"use strict\";\n\t\t    /**\n\t\t      `RSVP.reject` returns a promise that will become rejected with the passed\n\t\t      `reason`. `RSVP.reject` is essentially shorthand for the following:\n\t\n\t\t      ```javascript\n\t\t      var promise = new RSVP.Promise(function(resolve, reject){\n\t\t        reject(new Error('WHOOPS'));\n\t\t      });\n\t\n\t\t      promise.then(function(value){\n\t\t        // Code here doesn't run because the promise is rejected!\n\t\t      }, function(reason){\n\t\t        // reason.message === 'WHOOPS'\n\t\t      });\n\t\t      ```\n\t\n\t\t      Instead of writing the above, your code now simply becomes the following:\n\t\n\t\t      ```javascript\n\t\t      var promise = RSVP.reject(new Error('WHOOPS'));\n\t\n\t\t      promise.then(function(value){\n\t\t        // Code here doesn't run because the promise is rejected!\n\t\t      }, function(reason){\n\t\t        // reason.message === 'WHOOPS'\n\t\t      });\n\t\t      ```\n\t\n\t\t      @method reject\n\t\t      @for RSVP\n\t\t      @param {Any} reason value that the returned promise will be rejected with.\n\t\t      @param {String} label optional string for identifying the returned promise.\n\t\t      Useful for tooling.\n\t\t      @return {Promise} a promise that will become rejected with the given\n\t\t      `reason`.\n\t\t    */\n\t\t    function reject(reason) {\n\t\t      /*jshint validthis:true */\n\t\t      var Promise = this;\n\t\n\t\t      return new Promise(function (resolve, reject) {\n\t\t        reject(reason);\n\t\t      });\n\t\t    }\n\t\n\t\t    __exports__.reject = reject;\n\t\t  });\n\t\tdefine(\"promise/resolve\", \n\t\t  [\"exports\"],\n\t\t  function(__exports__) {\n\t\t    \"use strict\";\n\t\t    function resolve(value) {\n\t\t      /*jshint validthis:true */\n\t\t      if (value && typeof value === 'object' && value.constructor === this) {\n\t\t        return value;\n\t\t      }\n\t\n\t\t      var Promise = this;\n\t\n\t\t      return new Promise(function(resolve) {\n\t\t        resolve(value);\n\t\t      });\n\t\t    }\n\t\n\t\t    __exports__.resolve = resolve;\n\t\t  });\n\t\tdefine(\"promise/utils\", \n\t\t  [\"exports\"],\n\t\t  function(__exports__) {\n\t\t    \"use strict\";\n\t\t    function objectOrFunction(x) {\n\t\t      return isFunction(x) || (typeof x === \"object\" && x !== null);\n\t\t    }\n\t\n\t\t    function isFunction(x) {\n\t\t      return typeof x === \"function\";\n\t\t    }\n\t\n\t\t    function isArray(x) {\n\t\t      return Object.prototype.toString.call(x) === \"[object Array]\";\n\t\t    }\n\t\n\t\t    // Date.now is not available in browsers < IE9\n\t\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility\n\t\t    var now = Date.now || function() { return new Date().getTime(); };\n\t\n\t\n\t\t    __exports__.objectOrFunction = objectOrFunction;\n\t\t    __exports__.isFunction = isFunction;\n\t\t    __exports__.isArray = isArray;\n\t\t    __exports__.now = now;\n\t\t  });\n\t\trequireModule('promise/polyfill').polyfill();\n\t\t}());(function webpackUniversalModuleDefinition(root, factory) {\n\t\t\tif(true)\n\t\t\t\tmodule.exports = factory();\n\t\t\telse if(typeof define === 'function' && define.amd)\n\t\t\t\tdefine([], factory);\n\t\t\telse if(typeof exports === 'object')\n\t\t\t\texports[\"localforage\"] = factory();\n\t\t\telse\n\t\t\t\troot[\"localforage\"] = factory();\n\t\t})(this, function() {\n\t\treturn /******/ (function(modules) { // webpackBootstrap\n\t\t/******/ \t// The module cache\n\t\t/******/ \tvar installedModules = {};\n\t\n\t\t/******/ \t// The require function\n\t\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\n\t\t/******/ \t\t// Check if module is in cache\n\t\t/******/ \t\tif(installedModules[moduleId])\n\t\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\n\t\t/******/ \t\t// Create a new module (and put it into the cache)\n\t\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t\t/******/ \t\t\texports: {},\n\t\t/******/ \t\t\tid: moduleId,\n\t\t/******/ \t\t\tloaded: false\n\t\t/******/ \t\t};\n\t\n\t\t/******/ \t\t// Execute the module function\n\t\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t\t/******/ \t\t// Flag the module as loaded\n\t\t/******/ \t\tmodule.loaded = true;\n\t\n\t\t/******/ \t\t// Return the exports of the module\n\t\t/******/ \t\treturn module.exports;\n\t\t/******/ \t}\n\t\n\t\n\t\t/******/ \t// expose the modules object (__webpack_modules__)\n\t\t/******/ \t__webpack_require__.m = modules;\n\t\n\t\t/******/ \t// expose the module cache\n\t\t/******/ \t__webpack_require__.c = installedModules;\n\t\n\t\t/******/ \t// __webpack_public_path__\n\t\t/******/ \t__webpack_require__.p = \"\";\n\t\n\t\t/******/ \t// Load entry module and return exports\n\t\t/******/ \treturn __webpack_require__(0);\n\t\t/******/ })\n\t\t/************************************************************************/\n\t\t/******/ ([\n\t\t/* 0 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\t'use strict';\n\t\n\t\t\texports.__esModule = true;\n\t\n\t\t\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\t\t\tvar localForage = (function (globalObject) {\n\t\t\t    'use strict';\n\t\n\t\t\t    // Custom drivers are stored here when `defineDriver()` is called.\n\t\t\t    // They are shared across all instances of localForage.\n\t\t\t    var CustomDrivers = {};\n\t\n\t\t\t    var DriverType = {\n\t\t\t        INDEXEDDB: 'asyncStorage',\n\t\t\t        LOCALSTORAGE: 'localStorageWrapper',\n\t\t\t        WEBSQL: 'webSQLStorage'\n\t\t\t    };\n\t\n\t\t\t    var DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\t\n\t\t\t    var LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\t\n\t\t\t    var DefaultConfig = {\n\t\t\t        description: '',\n\t\t\t        driver: DefaultDriverOrder.slice(),\n\t\t\t        name: 'localforage',\n\t\t\t        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n\t\t\t        // we can use without a prompt.\n\t\t\t        size: 4980736,\n\t\t\t        storeName: 'keyvaluepairs',\n\t\t\t        version: 1.0\n\t\t\t    };\n\t\n\t\t\t    var driverSupport = (function (self) {\n\t\t\t        var result = {};\n\t\n\t\t\t        // Check to see if IndexedDB is available and if it is the latest\n\t\t\t        // implementation; it's our preferred backend library. We use \"_spec_test\"\n\t\t\t        // as the name of the database because it's not the one we'll operate on,\n\t\t\t        // but it's useful to make sure its using the right spec.\n\t\t\t        // See: https://github.com/mozilla/localForage/issues/128\n\t\t\t        result[DriverType.INDEXEDDB] = !!(function () {\n\t\t\t            try {\n\t\t\t                // Initialize IndexedDB; fall back to vendor-prefixed versions\n\t\t\t                // if needed.\n\t\t\t                var indexedDB = indexedDB || self.indexedDB || self.webkitIndexedDB || self.mozIndexedDB || self.OIndexedDB || self.msIndexedDB;\n\t\t\t                // We mimic PouchDB here; just UA test for Safari (which, as of\n\t\t\t                // iOS 8/Yosemite, doesn't properly support IndexedDB).\n\t\t\t                // IndexedDB support is broken and different from Blink's.\n\t\t\t                // This is faster than the test case (and it's sync), so we just\n\t\t\t                // do this. *SIGH*\n\t\t\t                // http://bl.ocks.org/nolanlawson/raw/c83e9039edf2278047e9/\n\t\t\t                //\n\t\t\t                // We test for openDatabase because IE Mobile identifies itself\n\t\t\t                // as Safari. Oh the lulz...\n\t\t\t                if (typeof self.openDatabase !== 'undefined' && self.navigator && self.navigator.userAgent && /Safari/.test(self.navigator.userAgent) && !/Chrome/.test(self.navigator.userAgent)) {\n\t\t\t                    return false;\n\t\t\t                }\n\t\n\t\t\t                return indexedDB && typeof indexedDB.open === 'function' &&\n\t\t\t                // Some Samsung/HTC Android 4.0-4.3 devices\n\t\t\t                // have older IndexedDB specs; if this isn't available\n\t\t\t                // their IndexedDB is too old for us to use.\n\t\t\t                // (Replaces the onupgradeneeded test.)\n\t\t\t                typeof self.IDBKeyRange !== 'undefined';\n\t\t\t            } catch (e) {\n\t\t\t                return false;\n\t\t\t            }\n\t\t\t        })();\n\t\n\t\t\t        result[DriverType.WEBSQL] = !!(function () {\n\t\t\t            try {\n\t\t\t                return self.openDatabase;\n\t\t\t            } catch (e) {\n\t\t\t                return false;\n\t\t\t            }\n\t\t\t        })();\n\t\n\t\t\t        result[DriverType.LOCALSTORAGE] = !!(function () {\n\t\t\t            try {\n\t\t\t                return self.localStorage && 'setItem' in self.localStorage && self.localStorage.setItem;\n\t\t\t            } catch (e) {\n\t\t\t                return false;\n\t\t\t            }\n\t\t\t        })();\n\t\n\t\t\t        return result;\n\t\t\t    })(globalObject);\n\t\n\t\t\t    var isArray = Array.isArray || function (arg) {\n\t\t\t        return Object.prototype.toString.call(arg) === '[object Array]';\n\t\t\t    };\n\t\n\t\t\t    function callWhenReady(localForageInstance, libraryMethod) {\n\t\t\t        localForageInstance[libraryMethod] = function () {\n\t\t\t            var _args = arguments;\n\t\t\t            return localForageInstance.ready().then(function () {\n\t\t\t                return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n\t\t\t            });\n\t\t\t        };\n\t\t\t    }\n\t\n\t\t\t    function extend() {\n\t\t\t        for (var i = 1; i < arguments.length; i++) {\n\t\t\t            var arg = arguments[i];\n\t\n\t\t\t            if (arg) {\n\t\t\t                for (var key in arg) {\n\t\t\t                    if (arg.hasOwnProperty(key)) {\n\t\t\t                        if (isArray(arg[key])) {\n\t\t\t                            arguments[0][key] = arg[key].slice();\n\t\t\t                        } else {\n\t\t\t                            arguments[0][key] = arg[key];\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                }\n\t\t\t            }\n\t\t\t        }\n\t\n\t\t\t        return arguments[0];\n\t\t\t    }\n\t\n\t\t\t    function isLibraryDriver(driverName) {\n\t\t\t        for (var driver in DriverType) {\n\t\t\t            if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n\t\t\t                return true;\n\t\t\t            }\n\t\t\t        }\n\t\n\t\t\t        return false;\n\t\t\t    }\n\t\n\t\t\t    var LocalForage = (function () {\n\t\t\t        function LocalForage(options) {\n\t\t\t            _classCallCheck(this, LocalForage);\n\t\n\t\t\t            this.INDEXEDDB = DriverType.INDEXEDDB;\n\t\t\t            this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n\t\t\t            this.WEBSQL = DriverType.WEBSQL;\n\t\n\t\t\t            this._defaultConfig = extend({}, DefaultConfig);\n\t\t\t            this._config = extend({}, this._defaultConfig, options);\n\t\t\t            this._driverSet = null;\n\t\t\t            this._initDriver = null;\n\t\t\t            this._ready = false;\n\t\t\t            this._dbInfo = null;\n\t\n\t\t\t            this._wrapLibraryMethodsWithReady();\n\t\t\t            this.setDriver(this._config.driver);\n\t\t\t        }\n\t\n\t\t\t        // The actual localForage object that we expose as a module or via a\n\t\t\t        // global. It's extended by pulling in one of our other libraries.\n\t\n\t\t\t        // Set any config values for localForage; can be called anytime before\n\t\t\t        // the first API call (e.g. `getItem`, `setItem`).\n\t\t\t        // We loop through options so we don't overwrite existing config\n\t\t\t        // values.\n\t\n\t\t\t        LocalForage.prototype.config = function config(options) {\n\t\t\t            // If the options argument is an object, we use it to set values.\n\t\t\t            // Otherwise, we return either a specified config value or all\n\t\t\t            // config values.\n\t\t\t            if (typeof options === 'object') {\n\t\t\t                // If localforage is ready and fully initialized, we can't set\n\t\t\t                // any new configuration values. Instead, we return an error.\n\t\t\t                if (this._ready) {\n\t\t\t                    return new Error(\"Can't call config() after localforage \" + 'has been used.');\n\t\t\t                }\n\t\n\t\t\t                for (var i in options) {\n\t\t\t                    if (i === 'storeName') {\n\t\t\t                        options[i] = options[i].replace(/\\W/g, '_');\n\t\t\t                    }\n\t\n\t\t\t                    this._config[i] = options[i];\n\t\t\t                }\n\t\n\t\t\t                // after all config options are set and\n\t\t\t                // the driver option is used, try setting it\n\t\t\t                if ('driver' in options && options.driver) {\n\t\t\t                    this.setDriver(this._config.driver);\n\t\t\t                }\n\t\n\t\t\t                return true;\n\t\t\t            } else if (typeof options === 'string') {\n\t\t\t                return this._config[options];\n\t\t\t            } else {\n\t\t\t                return this._config;\n\t\t\t            }\n\t\t\t        };\n\t\n\t\t\t        // Used to define a custom driver, shared across all instances of\n\t\t\t        // localForage.\n\t\n\t\t\t        LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n\t\t\t            var promise = new Promise(function (resolve, reject) {\n\t\t\t                try {\n\t\t\t                    var driverName = driverObject._driver;\n\t\t\t                    var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\t\t\t                    var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\t\n\t\t\t                    // A driver name should be defined and not overlap with the\n\t\t\t                    // library-defined, default drivers.\n\t\t\t                    if (!driverObject._driver) {\n\t\t\t                        reject(complianceError);\n\t\t\t                        return;\n\t\t\t                    }\n\t\t\t                    if (isLibraryDriver(driverObject._driver)) {\n\t\t\t                        reject(namingError);\n\t\t\t                        return;\n\t\t\t                    }\n\t\n\t\t\t                    var customDriverMethods = LibraryMethods.concat('_initStorage');\n\t\t\t                    for (var i = 0; i < customDriverMethods.length; i++) {\n\t\t\t                        var customDriverMethod = customDriverMethods[i];\n\t\t\t                        if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n\t\t\t                            reject(complianceError);\n\t\t\t                            return;\n\t\t\t                        }\n\t\t\t                    }\n\t\n\t\t\t                    var supportPromise = Promise.resolve(true);\n\t\t\t                    if ('_support' in driverObject) {\n\t\t\t                        if (driverObject._support && typeof driverObject._support === 'function') {\n\t\t\t                            supportPromise = driverObject._support();\n\t\t\t                        } else {\n\t\t\t                            supportPromise = Promise.resolve(!!driverObject._support);\n\t\t\t                        }\n\t\t\t                    }\n\t\n\t\t\t                    supportPromise.then(function (supportResult) {\n\t\t\t                        driverSupport[driverName] = supportResult;\n\t\t\t                        CustomDrivers[driverName] = driverObject;\n\t\t\t                        resolve();\n\t\t\t                    }, reject);\n\t\t\t                } catch (e) {\n\t\t\t                    reject(e);\n\t\t\t                }\n\t\t\t            });\n\t\n\t\t\t            promise.then(callback, errorCallback);\n\t\t\t            return promise;\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype.driver = function driver() {\n\t\t\t            return this._driver || null;\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n\t\t\t            var self = this;\n\t\t\t            var getDriverPromise = (function () {\n\t\t\t                if (isLibraryDriver(driverName)) {\n\t\t\t                    switch (driverName) {\n\t\t\t                        case self.INDEXEDDB:\n\t\t\t                            return new Promise(function (resolve, reject) {\n\t\t\t                                resolve(__webpack_require__(1));\n\t\t\t                            });\n\t\t\t                        case self.LOCALSTORAGE:\n\t\t\t                            return new Promise(function (resolve, reject) {\n\t\t\t                                resolve(__webpack_require__(2));\n\t\t\t                            });\n\t\t\t                        case self.WEBSQL:\n\t\t\t                            return new Promise(function (resolve, reject) {\n\t\t\t                                resolve(__webpack_require__(4));\n\t\t\t                            });\n\t\t\t                    }\n\t\t\t                } else if (CustomDrivers[driverName]) {\n\t\t\t                    return Promise.resolve(CustomDrivers[driverName]);\n\t\t\t                }\n\t\n\t\t\t                return Promise.reject(new Error('Driver not found.'));\n\t\t\t            })();\n\t\n\t\t\t            getDriverPromise.then(callback, errorCallback);\n\t\t\t            return getDriverPromise;\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype.getSerializer = function getSerializer(callback) {\n\t\t\t            var serializerPromise = new Promise(function (resolve, reject) {\n\t\t\t                resolve(__webpack_require__(3));\n\t\t\t            });\n\t\t\t            if (callback && typeof callback === 'function') {\n\t\t\t                serializerPromise.then(function (result) {\n\t\t\t                    callback(result);\n\t\t\t                });\n\t\t\t            }\n\t\t\t            return serializerPromise;\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype.ready = function ready(callback) {\n\t\t\t            var self = this;\n\t\n\t\t\t            var promise = self._driverSet.then(function () {\n\t\t\t                if (self._ready === null) {\n\t\t\t                    self._ready = self._initDriver();\n\t\t\t                }\n\t\n\t\t\t                return self._ready;\n\t\t\t            });\n\t\n\t\t\t            promise.then(callback, callback);\n\t\t\t            return promise;\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n\t\t\t            var self = this;\n\t\n\t\t\t            if (!isArray(drivers)) {\n\t\t\t                drivers = [drivers];\n\t\t\t            }\n\t\n\t\t\t            var supportedDrivers = this._getSupportedDrivers(drivers);\n\t\n\t\t\t            function setDriverToConfig() {\n\t\t\t                self._config.driver = self.driver();\n\t\t\t            }\n\t\n\t\t\t            function initDriver(supportedDrivers) {\n\t\t\t                return function () {\n\t\t\t                    var currentDriverIndex = 0;\n\t\n\t\t\t                    function driverPromiseLoop() {\n\t\t\t                        while (currentDriverIndex < supportedDrivers.length) {\n\t\t\t                            var driverName = supportedDrivers[currentDriverIndex];\n\t\t\t                            currentDriverIndex++;\n\t\n\t\t\t                            self._dbInfo = null;\n\t\t\t                            self._ready = null;\n\t\n\t\t\t                            return self.getDriver(driverName).then(function (driver) {\n\t\t\t                                self._extend(driver);\n\t\t\t                                setDriverToConfig();\n\t\n\t\t\t                                self._ready = self._initStorage(self._config);\n\t\t\t                                return self._ready;\n\t\t\t                            })['catch'](driverPromiseLoop);\n\t\t\t                        }\n\t\n\t\t\t                        setDriverToConfig();\n\t\t\t                        var error = new Error('No available storage method found.');\n\t\t\t                        self._driverSet = Promise.reject(error);\n\t\t\t                        return self._driverSet;\n\t\t\t                    }\n\t\n\t\t\t                    return driverPromiseLoop();\n\t\t\t                };\n\t\t\t            }\n\t\n\t\t\t            // There might be a driver initialization in progress\n\t\t\t            // so wait for it to finish in order to avoid a possible\n\t\t\t            // race condition to set _dbInfo\n\t\t\t            var oldDriverSetDone = this._driverSet !== null ? this._driverSet['catch'](function () {\n\t\t\t                return Promise.resolve();\n\t\t\t            }) : Promise.resolve();\n\t\n\t\t\t            this._driverSet = oldDriverSetDone.then(function () {\n\t\t\t                var driverName = supportedDrivers[0];\n\t\t\t                self._dbInfo = null;\n\t\t\t                self._ready = null;\n\t\n\t\t\t                return self.getDriver(driverName).then(function (driver) {\n\t\t\t                    self._driver = driver._driver;\n\t\t\t                    setDriverToConfig();\n\t\t\t                    self._wrapLibraryMethodsWithReady();\n\t\t\t                    self._initDriver = initDriver(supportedDrivers);\n\t\t\t                });\n\t\t\t            })['catch'](function () {\n\t\t\t                setDriverToConfig();\n\t\t\t                var error = new Error('No available storage method found.');\n\t\t\t                self._driverSet = Promise.reject(error);\n\t\t\t                return self._driverSet;\n\t\t\t            });\n\t\n\t\t\t            this._driverSet.then(callback, errorCallback);\n\t\t\t            return this._driverSet;\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype.supports = function supports(driverName) {\n\t\t\t            return !!driverSupport[driverName];\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n\t\t\t            extend(this, libraryMethodsAndProperties);\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n\t\t\t            var supportedDrivers = [];\n\t\t\t            for (var i = 0, len = drivers.length; i < len; i++) {\n\t\t\t                var driverName = drivers[i];\n\t\t\t                if (this.supports(driverName)) {\n\t\t\t                    supportedDrivers.push(driverName);\n\t\t\t                }\n\t\t\t            }\n\t\t\t            return supportedDrivers;\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n\t\t\t            // Add a stub for each driver API method that delays the call to the\n\t\t\t            // corresponding driver method until localForage is ready. These stubs\n\t\t\t            // will be replaced by the driver methods as soon as the driver is\n\t\t\t            // loaded, so there is no performance impact.\n\t\t\t            for (var i = 0; i < LibraryMethods.length; i++) {\n\t\t\t                callWhenReady(this, LibraryMethods[i]);\n\t\t\t            }\n\t\t\t        };\n\t\n\t\t\t        LocalForage.prototype.createInstance = function createInstance(options) {\n\t\t\t            return new LocalForage(options);\n\t\t\t        };\n\t\n\t\t\t        return LocalForage;\n\t\t\t    })();\n\t\n\t\t\t    return new LocalForage();\n\t\t\t})(typeof window !== 'undefined' ? window : self);\n\t\t\texports['default'] = localForage;\n\t\t\tmodule.exports = exports['default'];\n\t\n\t\t/***/ },\n\t\t/* 1 */\n\t\t/***/ function(module, exports) {\n\t\n\t\t\t// Some code originally from async_storage.js in\n\t\t\t// [Gaia](https://github.com/mozilla-b2g/gaia).\n\t\t\t'use strict';\n\t\n\t\t\texports.__esModule = true;\n\t\t\tvar asyncStorage = (function (globalObject) {\n\t\t\t    'use strict';\n\t\n\t\t\t    // Initialize IndexedDB; fall back to vendor-prefixed versions if needed.\n\t\t\t    var indexedDB = indexedDB || globalObject.indexedDB || globalObject.webkitIndexedDB || globalObject.mozIndexedDB || globalObject.OIndexedDB || globalObject.msIndexedDB;\n\t\n\t\t\t    // If IndexedDB isn't available, we get outta here!\n\t\t\t    if (!indexedDB) {\n\t\t\t        return;\n\t\t\t    }\n\t\n\t\t\t    var DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n\t\t\t    var supportsBlobs;\n\t\t\t    var dbContexts;\n\t\n\t\t\t    // Abstracts constructing a Blob object, so it also works in older\n\t\t\t    // browsers that don't support the native Blob constructor. (i.e.\n\t\t\t    // old QtWebKit versions, at least).\n\t\t\t    function _createBlob(parts, properties) {\n\t\t\t        parts = parts || [];\n\t\t\t        properties = properties || {};\n\t\t\t        try {\n\t\t\t            return new Blob(parts, properties);\n\t\t\t        } catch (e) {\n\t\t\t            if (e.name !== 'TypeError') {\n\t\t\t                throw e;\n\t\t\t            }\n\t\t\t            var BlobBuilder = globalObject.BlobBuilder || globalObject.MSBlobBuilder || globalObject.MozBlobBuilder || globalObject.WebKitBlobBuilder;\n\t\t\t            var builder = new BlobBuilder();\n\t\t\t            for (var i = 0; i < parts.length; i += 1) {\n\t\t\t                builder.append(parts[i]);\n\t\t\t            }\n\t\t\t            return builder.getBlob(properties.type);\n\t\t\t        }\n\t\t\t    }\n\t\n\t\t\t    // Transform a binary string to an array buffer, because otherwise\n\t\t\t    // weird stuff happens when you try to work with the binary string directly.\n\t\t\t    // It is known.\n\t\t\t    // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n\t\t\t    // encode-decode-image-with-base64-breaks-image (2013-04-21)\n\t\t\t    function _binStringToArrayBuffer(bin) {\n\t\t\t        var length = bin.length;\n\t\t\t        var buf = new ArrayBuffer(length);\n\t\t\t        var arr = new Uint8Array(buf);\n\t\t\t        for (var i = 0; i < length; i++) {\n\t\t\t            arr[i] = bin.charCodeAt(i);\n\t\t\t        }\n\t\t\t        return buf;\n\t\t\t    }\n\t\n\t\t\t    // Fetch a blob using ajax. This reveals bugs in Chrome < 43.\n\t\t\t    // For details on all this junk:\n\t\t\t    // https://github.com/nolanlawson/state-of-binary-data-in-the-browser#readme\n\t\t\t    function _blobAjax(url) {\n\t\t\t        return new Promise(function (resolve, reject) {\n\t\t\t            var xhr = new XMLHttpRequest();\n\t\t\t            xhr.open('GET', url);\n\t\t\t            xhr.withCredentials = true;\n\t\t\t            xhr.responseType = 'arraybuffer';\n\t\n\t\t\t            xhr.onreadystatechange = function () {\n\t\t\t                if (xhr.readyState !== 4) {\n\t\t\t                    return;\n\t\t\t                }\n\t\t\t                if (xhr.status === 200) {\n\t\t\t                    return resolve({\n\t\t\t                        response: xhr.response,\n\t\t\t                        type: xhr.getResponseHeader('Content-Type')\n\t\t\t                    });\n\t\t\t                }\n\t\t\t                reject({ status: xhr.status, response: xhr.response });\n\t\t\t            };\n\t\t\t            xhr.send();\n\t\t\t        });\n\t\t\t    }\n\t\n\t\t\t    //\n\t\t\t    // Detect blob support. Chrome didn't support it until version 38.\n\t\t\t    // In version 37 they had a broken version where PNGs (and possibly\n\t\t\t    // other binary types) aren't stored correctly, because when you fetch\n\t\t\t    // them, the content type is always null.\n\t\t\t    //\n\t\t\t    // Furthermore, they have some outstanding bugs where blobs occasionally\n\t\t\t    // are read by FileReader as null, or by ajax as 404s.\n\t\t\t    //\n\t\t\t    // Sadly we use the 404 bug to detect the FileReader bug, so if they\n\t\t\t    // get fixed independently and released in different versions of Chrome,\n\t\t\t    // then the bug could come back. So it's worthwhile to watch these issues:\n\t\t\t    // 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n\t\t\t    // FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n\t\t\t    //\n\t\t\t    function _checkBlobSupportWithoutCaching(idb) {\n\t\t\t        return new Promise(function (resolve, reject) {\n\t\t\t            var blob = _createBlob([''], { type: 'image/png' });\n\t\t\t            var txn = idb.transaction([DETECT_BLOB_SUPPORT_STORE], 'readwrite');\n\t\t\t            txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\t\t\t            txn.oncomplete = function () {\n\t\t\t                // have to do it in a separate transaction, else the correct\n\t\t\t                // content type is always returned\n\t\t\t                var blobTxn = idb.transaction([DETECT_BLOB_SUPPORT_STORE], 'readwrite');\n\t\t\t                var getBlobReq = blobTxn.objectStore(DETECT_BLOB_SUPPORT_STORE).get('key');\n\t\t\t                getBlobReq.onerror = reject;\n\t\t\t                getBlobReq.onsuccess = function (e) {\n\t\n\t\t\t                    var storedBlob = e.target.result;\n\t\t\t                    var url = URL.createObjectURL(storedBlob);\n\t\n\t\t\t                    _blobAjax(url).then(function (res) {\n\t\t\t                        resolve(!!(res && res.type === 'image/png'));\n\t\t\t                    }, function () {\n\t\t\t                        resolve(false);\n\t\t\t                    }).then(function () {\n\t\t\t                        URL.revokeObjectURL(url);\n\t\t\t                    });\n\t\t\t                };\n\t\t\t            };\n\t\t\t            txn.onerror = txn.onabort = reject;\n\t\t\t        })['catch'](function () {\n\t\t\t            return false; // error, so assume unsupported\n\t\t\t        });\n\t\t\t    }\n\t\n\t\t\t    function _checkBlobSupport(idb) {\n\t\t\t        if (typeof supportsBlobs === 'boolean') {\n\t\t\t            return Promise.resolve(supportsBlobs);\n\t\t\t        }\n\t\t\t        return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n\t\t\t            supportsBlobs = value;\n\t\t\t            return supportsBlobs;\n\t\t\t        });\n\t\t\t    }\n\t\n\t\t\t    // encode a blob for indexeddb engines that don't support blobs\n\t\t\t    function _encodeBlob(blob) {\n\t\t\t        return new Promise(function (resolve, reject) {\n\t\t\t            var reader = new FileReader();\n\t\t\t            reader.onerror = reject;\n\t\t\t            reader.onloadend = function (e) {\n\t\t\t                var base64 = btoa(e.target.result || '');\n\t\t\t                resolve({\n\t\t\t                    __local_forage_encoded_blob: true,\n\t\t\t                    data: base64,\n\t\t\t                    type: blob.type\n\t\t\t                });\n\t\t\t            };\n\t\t\t            reader.readAsBinaryString(blob);\n\t\t\t        });\n\t\t\t    }\n\t\n\t\t\t    // decode an encoded blob\n\t\t\t    function _decodeBlob(encodedBlob) {\n\t\t\t        var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n\t\t\t        return _createBlob([arrayBuff], { type: encodedBlob.type });\n\t\t\t    }\n\t\n\t\t\t    // is this one of our fancy encoded blobs?\n\t\t\t    function _isEncodedBlob(value) {\n\t\t\t        return value && value.__local_forage_encoded_blob;\n\t\t\t    }\n\t\n\t\t\t    // Specialize the default `ready()` function by making it dependent\n\t\t\t    // on the current database operations. Thus, the driver will be actually\n\t\t\t    // ready when it's been initialized (default) *and* there are no pending\n\t\t\t    // operations on the database (initiated by some other instances).\n\t\t\t    function _fullyReady(callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = self._initReady().then(function () {\n\t\t\t            var dbContext = dbContexts[self._dbInfo.name];\n\t\n\t\t\t            if (dbContext && dbContext.dbReady) {\n\t\t\t                return dbContext.dbReady;\n\t\t\t            }\n\t\t\t        });\n\t\n\t\t\t        promise.then(callback, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function _deferReadiness(dbInfo) {\n\t\t\t        var dbContext = dbContexts[dbInfo.name];\n\t\n\t\t\t        // Create a deferred object representing the current database operation.\n\t\t\t        var deferredOperation = {};\n\t\n\t\t\t        deferredOperation.promise = new Promise(function (resolve) {\n\t\t\t            deferredOperation.resolve = resolve;\n\t\t\t        });\n\t\n\t\t\t        // Enqueue the deferred operation.\n\t\t\t        dbContext.deferredOperations.push(deferredOperation);\n\t\n\t\t\t        // Chain its promise to the database readiness.\n\t\t\t        if (!dbContext.dbReady) {\n\t\t\t            dbContext.dbReady = deferredOperation.promise;\n\t\t\t        } else {\n\t\t\t            dbContext.dbReady = dbContext.dbReady.then(function () {\n\t\t\t                return deferredOperation.promise;\n\t\t\t            });\n\t\t\t        }\n\t\t\t    }\n\t\n\t\t\t    function _advanceReadiness(dbInfo) {\n\t\t\t        var dbContext = dbContexts[dbInfo.name];\n\t\n\t\t\t        // Dequeue a deferred operation.\n\t\t\t        var deferredOperation = dbContext.deferredOperations.pop();\n\t\n\t\t\t        // Resolve its promise (which is part of the database readiness\n\t\t\t        // chain of promises).\n\t\t\t        if (deferredOperation) {\n\t\t\t            deferredOperation.resolve();\n\t\t\t        }\n\t\t\t    }\n\t\n\t\t\t    // Open the IndexedDB database (automatically creates one if one didn't\n\t\t\t    // previously exist), using any options set in the config.\n\t\t\t    function _initStorage(options) {\n\t\t\t        var self = this;\n\t\t\t        var dbInfo = {\n\t\t\t            db: null\n\t\t\t        };\n\t\n\t\t\t        if (options) {\n\t\t\t            for (var i in options) {\n\t\t\t                dbInfo[i] = options[i];\n\t\t\t            }\n\t\t\t        }\n\t\n\t\t\t        // Initialize a singleton container for all running localForages.\n\t\t\t        if (!dbContexts) {\n\t\t\t            dbContexts = {};\n\t\t\t        }\n\t\n\t\t\t        // Get the current context of the database;\n\t\t\t        var dbContext = dbContexts[dbInfo.name];\n\t\n\t\t\t        // ...or create a new context.\n\t\t\t        if (!dbContext) {\n\t\t\t            dbContext = {\n\t\t\t                // Running localForages sharing a database.\n\t\t\t                forages: [],\n\t\t\t                // Shared database.\n\t\t\t                db: null,\n\t\t\t                // Database readiness (promise).\n\t\t\t                dbReady: null,\n\t\t\t                // Deferred operations on the database.\n\t\t\t                deferredOperations: []\n\t\t\t            };\n\t\t\t            // Register the new context in the global container.\n\t\t\t            dbContexts[dbInfo.name] = dbContext;\n\t\t\t        }\n\t\n\t\t\t        // Register itself as a running localForage in the current context.\n\t\t\t        dbContext.forages.push(self);\n\t\n\t\t\t        // Replace the default `ready()` function with the specialized one.\n\t\t\t        if (!self._initReady) {\n\t\t\t            self._initReady = self.ready;\n\t\t\t            self.ready = _fullyReady;\n\t\t\t        }\n\t\n\t\t\t        // Create an array of initialization states of the related localForages.\n\t\t\t        var initPromises = [];\n\t\n\t\t\t        function ignoreErrors() {\n\t\t\t            // Don't handle errors here,\n\t\t\t            // just makes sure related localForages aren't pending.\n\t\t\t            return Promise.resolve();\n\t\t\t        }\n\t\n\t\t\t        for (var j = 0; j < dbContext.forages.length; j++) {\n\t\t\t            var forage = dbContext.forages[j];\n\t\t\t            if (forage !== self) {\n\t\t\t                // Don't wait for itself...\n\t\t\t                initPromises.push(forage._initReady()['catch'](ignoreErrors));\n\t\t\t            }\n\t\t\t        }\n\t\n\t\t\t        // Take a snapshot of the related localForages.\n\t\t\t        var forages = dbContext.forages.slice(0);\n\t\n\t\t\t        // Initialize the connection process only when\n\t\t\t        // all the related localForages aren't pending.\n\t\t\t        return Promise.all(initPromises).then(function () {\n\t\t\t            dbInfo.db = dbContext.db;\n\t\t\t            // Get the connection or open a new one without upgrade.\n\t\t\t            return _getOriginalConnection(dbInfo);\n\t\t\t        }).then(function (db) {\n\t\t\t            dbInfo.db = db;\n\t\t\t            if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n\t\t\t                // Reopen the database for upgrading.\n\t\t\t                return _getUpgradedConnection(dbInfo);\n\t\t\t            }\n\t\t\t            return db;\n\t\t\t        }).then(function (db) {\n\t\t\t            dbInfo.db = dbContext.db = db;\n\t\t\t            self._dbInfo = dbInfo;\n\t\t\t            // Share the final connection amongst related localForages.\n\t\t\t            for (var k = 0; k < forages.length; k++) {\n\t\t\t                var forage = forages[k];\n\t\t\t                if (forage !== self) {\n\t\t\t                    // Self is already up-to-date.\n\t\t\t                    forage._dbInfo.db = dbInfo.db;\n\t\t\t                    forage._dbInfo.version = dbInfo.version;\n\t\t\t                }\n\t\t\t            }\n\t\t\t        });\n\t\t\t    }\n\t\n\t\t\t    function _getOriginalConnection(dbInfo) {\n\t\t\t        return _getConnection(dbInfo, false);\n\t\t\t    }\n\t\n\t\t\t    function _getUpgradedConnection(dbInfo) {\n\t\t\t        return _getConnection(dbInfo, true);\n\t\t\t    }\n\t\n\t\t\t    function _getConnection(dbInfo, upgradeNeeded) {\n\t\t\t        return new Promise(function (resolve, reject) {\n\t\n\t\t\t            if (dbInfo.db) {\n\t\t\t                if (upgradeNeeded) {\n\t\t\t                    _deferReadiness(dbInfo);\n\t\t\t                    dbInfo.db.close();\n\t\t\t                } else {\n\t\t\t                    return resolve(dbInfo.db);\n\t\t\t                }\n\t\t\t            }\n\t\n\t\t\t            var dbArgs = [dbInfo.name];\n\t\n\t\t\t            if (upgradeNeeded) {\n\t\t\t                dbArgs.push(dbInfo.version);\n\t\t\t            }\n\t\n\t\t\t            var openreq = indexedDB.open.apply(indexedDB, dbArgs);\n\t\n\t\t\t            if (upgradeNeeded) {\n\t\t\t                openreq.onupgradeneeded = function (e) {\n\t\t\t                    var db = openreq.result;\n\t\t\t                    try {\n\t\t\t                        db.createObjectStore(dbInfo.storeName);\n\t\t\t                        if (e.oldVersion <= 1) {\n\t\t\t                            // Added when support for blob shims was added\n\t\t\t                            db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\t\t\t                        }\n\t\t\t                    } catch (ex) {\n\t\t\t                        if (ex.name === 'ConstraintError') {\n\t\t\t                            globalObject.console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n\t\t\t                        } else {\n\t\t\t                            throw ex;\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                };\n\t\t\t            }\n\t\n\t\t\t            openreq.onerror = function () {\n\t\t\t                reject(openreq.error);\n\t\t\t            };\n\t\n\t\t\t            openreq.onsuccess = function () {\n\t\t\t                resolve(openreq.result);\n\t\t\t                _advanceReadiness(dbInfo);\n\t\t\t            };\n\t\t\t        });\n\t\t\t    }\n\t\n\t\t\t    function _isUpgradeNeeded(dbInfo, defaultVersion) {\n\t\t\t        if (!dbInfo.db) {\n\t\t\t            return true;\n\t\t\t        }\n\t\n\t\t\t        var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n\t\t\t        var isDowngrade = dbInfo.version < dbInfo.db.version;\n\t\t\t        var isUpgrade = dbInfo.version > dbInfo.db.version;\n\t\n\t\t\t        if (isDowngrade) {\n\t\t\t            // If the version is not the default one\n\t\t\t            // then warn for impossible downgrade.\n\t\t\t            if (dbInfo.version !== defaultVersion) {\n\t\t\t                globalObject.console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n\t\t\t            }\n\t\t\t            // Align the versions to prevent errors.\n\t\t\t            dbInfo.version = dbInfo.db.version;\n\t\t\t        }\n\t\n\t\t\t        if (isUpgrade || isNewStore) {\n\t\t\t            // If the store is new then increment the version (if needed).\n\t\t\t            // This will trigger an \"upgradeneeded\" event which is required\n\t\t\t            // for creating a store.\n\t\t\t            if (isNewStore) {\n\t\t\t                var incVersion = dbInfo.db.version + 1;\n\t\t\t                if (incVersion > dbInfo.version) {\n\t\t\t                    dbInfo.version = incVersion;\n\t\t\t                }\n\t\t\t            }\n\t\n\t\t\t            return true;\n\t\t\t        }\n\t\n\t\t\t        return false;\n\t\t\t    }\n\t\n\t\t\t    function getItem(key, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t\t        if (typeof key !== 'string') {\n\t\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t\t            key = String(key);\n\t\t\t        }\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\t\t\t                var req = store.get(key);\n\t\n\t\t\t                req.onsuccess = function () {\n\t\t\t                    var value = req.result;\n\t\t\t                    if (value === undefined) {\n\t\t\t                        value = null;\n\t\t\t                    }\n\t\t\t                    if (_isEncodedBlob(value)) {\n\t\t\t                        value = _decodeBlob(value);\n\t\t\t                    }\n\t\t\t                    resolve(value);\n\t\t\t                };\n\t\n\t\t\t                req.onerror = function () {\n\t\t\t                    reject(req.error);\n\t\t\t                };\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Iterate over all items stored in database.\n\t\t\t    function iterate(iterator, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\t\n\t\t\t                var req = store.openCursor();\n\t\t\t                var iterationNumber = 1;\n\t\n\t\t\t                req.onsuccess = function () {\n\t\t\t                    var cursor = req.result;\n\t\n\t\t\t                    if (cursor) {\n\t\t\t                        var value = cursor.value;\n\t\t\t                        if (_isEncodedBlob(value)) {\n\t\t\t                            value = _decodeBlob(value);\n\t\t\t                        }\n\t\t\t                        var result = iterator(value, cursor.key, iterationNumber++);\n\t\n\t\t\t                        if (result !== void 0) {\n\t\t\t                            resolve(result);\n\t\t\t                        } else {\n\t\t\t                            cursor['continue']();\n\t\t\t                        }\n\t\t\t                    } else {\n\t\t\t                        resolve();\n\t\t\t                    }\n\t\t\t                };\n\t\n\t\t\t                req.onerror = function () {\n\t\t\t                    reject(req.error);\n\t\t\t                };\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function setItem(key, value, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t\t        if (typeof key !== 'string') {\n\t\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t\t            key = String(key);\n\t\t\t        }\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            var dbInfo;\n\t\t\t            self.ready().then(function () {\n\t\t\t                dbInfo = self._dbInfo;\n\t\t\t                if (value instanceof Blob) {\n\t\t\t                    return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n\t\t\t                        if (blobSupport) {\n\t\t\t                            return value;\n\t\t\t                        }\n\t\t\t                        return _encodeBlob(value);\n\t\t\t                    });\n\t\t\t                }\n\t\t\t                return value;\n\t\t\t            }).then(function (value) {\n\t\t\t                var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n\t\t\t                var store = transaction.objectStore(dbInfo.storeName);\n\t\n\t\t\t                // The reason we don't _save_ null is because IE 10 does\n\t\t\t                // not support saving the `null` type in IndexedDB. How\n\t\t\t                // ironic, given the bug below!\n\t\t\t                // See: https://github.com/mozilla/localForage/issues/161\n\t\t\t                if (value === null) {\n\t\t\t                    value = undefined;\n\t\t\t                }\n\t\n\t\t\t                transaction.oncomplete = function () {\n\t\t\t                    // Cast to undefined so the value passed to\n\t\t\t                    // callback/promise is the same as what one would get out\n\t\t\t                    // of `getItem()` later. This leads to some weirdness\n\t\t\t                    // (setItem('foo', undefined) will return `null`), but\n\t\t\t                    // it's not my fault localStorage is our baseline and that\n\t\t\t                    // it's weird.\n\t\t\t                    if (value === undefined) {\n\t\t\t                        value = null;\n\t\t\t                    }\n\t\n\t\t\t                    resolve(value);\n\t\t\t                };\n\t\t\t                transaction.onabort = transaction.onerror = function () {\n\t\t\t                    var err = req.error ? req.error : req.transaction.error;\n\t\t\t                    reject(err);\n\t\t\t                };\n\t\n\t\t\t                var req = store.put(value, key);\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function removeItem(key, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t\t        if (typeof key !== 'string') {\n\t\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t\t            key = String(key);\n\t\t\t        }\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n\t\t\t                var store = transaction.objectStore(dbInfo.storeName);\n\t\n\t\t\t                // We use a Grunt task to make this safe for IE and some\n\t\t\t                // versions of Android (including those used by Cordova).\n\t\t\t                // Normally IE won't like `.delete()` and will insist on\n\t\t\t                // using `['delete']()`, but we have a build step that\n\t\t\t                // fixes this for us now.\n\t\t\t                var req = store['delete'](key);\n\t\t\t                transaction.oncomplete = function () {\n\t\t\t                    resolve();\n\t\t\t                };\n\t\n\t\t\t                transaction.onerror = function () {\n\t\t\t                    reject(req.error);\n\t\t\t                };\n\t\n\t\t\t                // The request will be also be aborted if we've exceeded our storage\n\t\t\t                // space.\n\t\t\t                transaction.onabort = function () {\n\t\t\t                    var err = req.error ? req.error : req.transaction.error;\n\t\t\t                    reject(err);\n\t\t\t                };\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function clear(callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n\t\t\t                var store = transaction.objectStore(dbInfo.storeName);\n\t\t\t                var req = store.clear();\n\t\n\t\t\t                transaction.oncomplete = function () {\n\t\t\t                    resolve();\n\t\t\t                };\n\t\n\t\t\t                transaction.onabort = transaction.onerror = function () {\n\t\t\t                    var err = req.error ? req.error : req.transaction.error;\n\t\t\t                    reject(err);\n\t\t\t                };\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function length(callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\t\t\t                var req = store.count();\n\t\n\t\t\t                req.onsuccess = function () {\n\t\t\t                    resolve(req.result);\n\t\t\t                };\n\t\n\t\t\t                req.onerror = function () {\n\t\t\t                    reject(req.error);\n\t\t\t                };\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function key(n, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            if (n < 0) {\n\t\t\t                resolve(null);\n\t\n\t\t\t                return;\n\t\t\t            }\n\t\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\t\n\t\t\t                var advanced = false;\n\t\t\t                var req = store.openCursor();\n\t\t\t                req.onsuccess = function () {\n\t\t\t                    var cursor = req.result;\n\t\t\t                    if (!cursor) {\n\t\t\t                        // this means there weren't enough keys\n\t\t\t                        resolve(null);\n\t\n\t\t\t                        return;\n\t\t\t                    }\n\t\n\t\t\t                    if (n === 0) {\n\t\t\t                        // We have the first key, return it if that's what they\n\t\t\t                        // wanted.\n\t\t\t                        resolve(cursor.key);\n\t\t\t                    } else {\n\t\t\t                        if (!advanced) {\n\t\t\t                            // Otherwise, ask the cursor to skip ahead n\n\t\t\t                            // records.\n\t\t\t                            advanced = true;\n\t\t\t                            cursor.advance(n);\n\t\t\t                        } else {\n\t\t\t                            // When we get here, we've got the nth key.\n\t\t\t                            resolve(cursor.key);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                };\n\t\n\t\t\t                req.onerror = function () {\n\t\t\t                    reject(req.error);\n\t\t\t                };\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function keys(callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\t\n\t\t\t                var req = store.openCursor();\n\t\t\t                var keys = [];\n\t\n\t\t\t                req.onsuccess = function () {\n\t\t\t                    var cursor = req.result;\n\t\n\t\t\t                    if (!cursor) {\n\t\t\t                        resolve(keys);\n\t\t\t                        return;\n\t\t\t                    }\n\t\n\t\t\t                    keys.push(cursor.key);\n\t\t\t                    cursor['continue']();\n\t\t\t                };\n\t\n\t\t\t                req.onerror = function () {\n\t\t\t                    reject(req.error);\n\t\t\t                };\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function executeCallback(promise, callback) {\n\t\t\t        if (callback) {\n\t\t\t            promise.then(function (result) {\n\t\t\t                callback(null, result);\n\t\t\t            }, function (error) {\n\t\t\t                callback(error);\n\t\t\t            });\n\t\t\t        }\n\t\t\t    }\n\t\n\t\t\t    var asyncStorage = {\n\t\t\t        _driver: 'asyncStorage',\n\t\t\t        _initStorage: _initStorage,\n\t\t\t        iterate: iterate,\n\t\t\t        getItem: getItem,\n\t\t\t        setItem: setItem,\n\t\t\t        removeItem: removeItem,\n\t\t\t        clear: clear,\n\t\t\t        length: length,\n\t\t\t        key: key,\n\t\t\t        keys: keys\n\t\t\t    };\n\t\n\t\t\t    return asyncStorage;\n\t\t\t})(typeof window !== 'undefined' ? window : self);\n\t\t\texports['default'] = asyncStorage;\n\t\t\tmodule.exports = exports['default'];\n\t\n\t\t/***/ },\n\t\t/* 2 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\t// If IndexedDB isn't available, we'll fall back to localStorage.\n\t\t\t// Note that this will have considerable performance and storage\n\t\t\t// side-effects (all data will be serialized on save and only data that\n\t\t\t// can be converted to a string via `JSON.stringify()` will be saved).\n\t\t\t'use strict';\n\t\n\t\t\texports.__esModule = true;\n\t\t\tvar localStorageWrapper = (function (globalObject) {\n\t\t\t    'use strict';\n\t\n\t\t\t    var localStorage = null;\n\t\n\t\t\t    // If the app is running inside a Google Chrome packaged webapp, or some\n\t\t\t    // other context where localStorage isn't available, we don't use\n\t\t\t    // localStorage. This feature detection is preferred over the old\n\t\t\t    // `if (window.chrome && window.chrome.runtime)` code.\n\t\t\t    // See: https://github.com/mozilla/localForage/issues/68\n\t\t\t    try {\n\t\t\t        // If localStorage isn't available, we get outta here!\n\t\t\t        // This should be inside a try catch\n\t\t\t        if (!globalObject.localStorage || !('setItem' in globalObject.localStorage)) {\n\t\t\t            return;\n\t\t\t        }\n\t\t\t        // Initialize localStorage and create a variable to use throughout\n\t\t\t        // the code.\n\t\t\t        localStorage = globalObject.localStorage;\n\t\t\t    } catch (e) {\n\t\t\t        return;\n\t\t\t    }\n\t\n\t\t\t    // Config the localStorage backend, using options set in the config.\n\t\t\t    function _initStorage(options) {\n\t\t\t        var self = this;\n\t\t\t        var dbInfo = {};\n\t\t\t        if (options) {\n\t\t\t            for (var i in options) {\n\t\t\t                dbInfo[i] = options[i];\n\t\t\t            }\n\t\t\t        }\n\t\n\t\t\t        dbInfo.keyPrefix = dbInfo.name + '/';\n\t\n\t\t\t        if (dbInfo.storeName !== self._defaultConfig.storeName) {\n\t\t\t            dbInfo.keyPrefix += dbInfo.storeName + '/';\n\t\t\t        }\n\t\n\t\t\t        self._dbInfo = dbInfo;\n\t\n\t\t\t        return new Promise(function (resolve, reject) {\n\t\t\t            resolve(__webpack_require__(3));\n\t\t\t        }).then(function (lib) {\n\t\t\t            dbInfo.serializer = lib;\n\t\t\t            return Promise.resolve();\n\t\t\t        });\n\t\t\t    }\n\t\n\t\t\t    // Remove all keys from the datastore, effectively destroying all data in\n\t\t\t    // the app's key/value store!\n\t\t\t    function clear(callback) {\n\t\t\t        var self = this;\n\t\t\t        var promise = self.ready().then(function () {\n\t\t\t            var keyPrefix = self._dbInfo.keyPrefix;\n\t\n\t\t\t            for (var i = localStorage.length - 1; i >= 0; i--) {\n\t\t\t                var key = localStorage.key(i);\n\t\n\t\t\t                if (key.indexOf(keyPrefix) === 0) {\n\t\t\t                    localStorage.removeItem(key);\n\t\t\t                }\n\t\t\t            }\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Retrieve an item from the store. Unlike the original async_storage\n\t\t\t    // library in Gaia, we don't modify return values at all. If a key's value\n\t\t\t    // is `undefined`, we pass that value to the callback function.\n\t\t\t    function getItem(key, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t\t        if (typeof key !== 'string') {\n\t\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t\t            key = String(key);\n\t\t\t        }\n\t\n\t\t\t        var promise = self.ready().then(function () {\n\t\t\t            var dbInfo = self._dbInfo;\n\t\t\t            var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\t\n\t\t\t            // If a result was found, parse it from the serialized\n\t\t\t            // string into a JS object. If result isn't truthy, the key\n\t\t\t            // is likely undefined and we'll pass it straight to the\n\t\t\t            // callback.\n\t\t\t            if (result) {\n\t\t\t                result = dbInfo.serializer.deserialize(result);\n\t\t\t            }\n\t\n\t\t\t            return result;\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Iterate over all items in the store.\n\t\t\t    function iterate(iterator, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = self.ready().then(function () {\n\t\t\t            var dbInfo = self._dbInfo;\n\t\t\t            var keyPrefix = dbInfo.keyPrefix;\n\t\t\t            var keyPrefixLength = keyPrefix.length;\n\t\t\t            var length = localStorage.length;\n\t\n\t\t\t            // We use a dedicated iterator instead of the `i` variable below\n\t\t\t            // so other keys we fetch in localStorage aren't counted in\n\t\t\t            // the `iterationNumber` argument passed to the `iterate()`\n\t\t\t            // callback.\n\t\t\t            //\n\t\t\t            // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n\t\t\t            var iterationNumber = 1;\n\t\n\t\t\t            for (var i = 0; i < length; i++) {\n\t\t\t                var key = localStorage.key(i);\n\t\t\t                if (key.indexOf(keyPrefix) !== 0) {\n\t\t\t                    continue;\n\t\t\t                }\n\t\t\t                var value = localStorage.getItem(key);\n\t\n\t\t\t                // If a result was found, parse it from the serialized\n\t\t\t                // string into a JS object. If result isn't truthy, the\n\t\t\t                // key is likely undefined and we'll pass it straight\n\t\t\t                // to the iterator.\n\t\t\t                if (value) {\n\t\t\t                    value = dbInfo.serializer.deserialize(value);\n\t\t\t                }\n\t\n\t\t\t                value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\t\n\t\t\t                if (value !== void 0) {\n\t\t\t                    return value;\n\t\t\t                }\n\t\t\t            }\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Same as localStorage's key() method, except takes a callback.\n\t\t\t    function key(n, callback) {\n\t\t\t        var self = this;\n\t\t\t        var promise = self.ready().then(function () {\n\t\t\t            var dbInfo = self._dbInfo;\n\t\t\t            var result;\n\t\t\t            try {\n\t\t\t                result = localStorage.key(n);\n\t\t\t            } catch (error) {\n\t\t\t                result = null;\n\t\t\t            }\n\t\n\t\t\t            // Remove the prefix from the key, if a key is found.\n\t\t\t            if (result) {\n\t\t\t                result = result.substring(dbInfo.keyPrefix.length);\n\t\t\t            }\n\t\n\t\t\t            return result;\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function keys(callback) {\n\t\t\t        var self = this;\n\t\t\t        var promise = self.ready().then(function () {\n\t\t\t            var dbInfo = self._dbInfo;\n\t\t\t            var length = localStorage.length;\n\t\t\t            var keys = [];\n\t\n\t\t\t            for (var i = 0; i < length; i++) {\n\t\t\t                if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n\t\t\t                    keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n\t\t\t                }\n\t\t\t            }\n\t\n\t\t\t            return keys;\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Supply the number of keys in the datastore to the callback function.\n\t\t\t    function length(callback) {\n\t\t\t        var self = this;\n\t\t\t        var promise = self.keys().then(function (keys) {\n\t\t\t            return keys.length;\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Remove an item from the store, nice and simple.\n\t\t\t    function removeItem(key, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t\t        if (typeof key !== 'string') {\n\t\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t\t            key = String(key);\n\t\t\t        }\n\t\n\t\t\t        var promise = self.ready().then(function () {\n\t\t\t            var dbInfo = self._dbInfo;\n\t\t\t            localStorage.removeItem(dbInfo.keyPrefix + key);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Set a key's value and run an optional callback once the value is set.\n\t\t\t    // Unlike Gaia's implementation, the callback function is passed the value,\n\t\t\t    // in case you want to operate on that value only after you're sure it\n\t\t\t    // saved, or something like that.\n\t\t\t    function setItem(key, value, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t\t        if (typeof key !== 'string') {\n\t\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t\t            key = String(key);\n\t\t\t        }\n\t\n\t\t\t        var promise = self.ready().then(function () {\n\t\t\t            // Convert undefined values to null.\n\t\t\t            // https://github.com/mozilla/localForage/pull/42\n\t\t\t            if (value === undefined) {\n\t\t\t                value = null;\n\t\t\t            }\n\t\n\t\t\t            // Save the original value to pass to the callback.\n\t\t\t            var originalValue = value;\n\t\n\t\t\t            return new Promise(function (resolve, reject) {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                dbInfo.serializer.serialize(value, function (value, error) {\n\t\t\t                    if (error) {\n\t\t\t                        reject(error);\n\t\t\t                    } else {\n\t\t\t                        try {\n\t\t\t                            localStorage.setItem(dbInfo.keyPrefix + key, value);\n\t\t\t                            resolve(originalValue);\n\t\t\t                        } catch (e) {\n\t\t\t                            // localStorage capacity exceeded.\n\t\t\t                            // TODO: Make this a specific error/event.\n\t\t\t                            if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n\t\t\t                                reject(e);\n\t\t\t                            }\n\t\t\t                            reject(e);\n\t\t\t                        }\n\t\t\t                    }\n\t\t\t                });\n\t\t\t            });\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function executeCallback(promise, callback) {\n\t\t\t        if (callback) {\n\t\t\t            promise.then(function (result) {\n\t\t\t                callback(null, result);\n\t\t\t            }, function (error) {\n\t\t\t                callback(error);\n\t\t\t            });\n\t\t\t        }\n\t\t\t    }\n\t\n\t\t\t    var localStorageWrapper = {\n\t\t\t        _driver: 'localStorageWrapper',\n\t\t\t        _initStorage: _initStorage,\n\t\t\t        // Default API, from Gaia/localStorage.\n\t\t\t        iterate: iterate,\n\t\t\t        getItem: getItem,\n\t\t\t        setItem: setItem,\n\t\t\t        removeItem: removeItem,\n\t\t\t        clear: clear,\n\t\t\t        length: length,\n\t\t\t        key: key,\n\t\t\t        keys: keys\n\t\t\t    };\n\t\n\t\t\t    return localStorageWrapper;\n\t\t\t})(typeof window !== 'undefined' ? window : self);\n\t\t\texports['default'] = localStorageWrapper;\n\t\t\tmodule.exports = exports['default'];\n\t\n\t\t/***/ },\n\t\t/* 3 */\n\t\t/***/ function(module, exports) {\n\t\n\t\t\t'use strict';\n\t\n\t\t\texports.__esModule = true;\n\t\t\tvar localforageSerializer = (function (globalObject) {\n\t\t\t    'use strict';\n\t\n\t\t\t    // Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n\t\t\t    // it to Base64, so this is how we store it to prevent very strange errors with less\n\t\t\t    // verbose ways of binary <-> string data storage.\n\t\t\t    var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\n\t\t\t    var BLOB_TYPE_PREFIX = '~~local_forage_type~';\n\t\t\t    var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\t\n\t\t\t    var SERIALIZED_MARKER = '__lfsc__:';\n\t\t\t    var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\t\n\t\t\t    // OMG the serializations!\n\t\t\t    var TYPE_ARRAYBUFFER = 'arbf';\n\t\t\t    var TYPE_BLOB = 'blob';\n\t\t\t    var TYPE_INT8ARRAY = 'si08';\n\t\t\t    var TYPE_UINT8ARRAY = 'ui08';\n\t\t\t    var TYPE_UINT8CLAMPEDARRAY = 'uic8';\n\t\t\t    var TYPE_INT16ARRAY = 'si16';\n\t\t\t    var TYPE_INT32ARRAY = 'si32';\n\t\t\t    var TYPE_UINT16ARRAY = 'ur16';\n\t\t\t    var TYPE_UINT32ARRAY = 'ui32';\n\t\t\t    var TYPE_FLOAT32ARRAY = 'fl32';\n\t\t\t    var TYPE_FLOAT64ARRAY = 'fl64';\n\t\t\t    var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\t\n\t\t\t    // Abstracts constructing a Blob object, so it also works in older\n\t\t\t    // browsers that don't support the native Blob constructor. (i.e.\n\t\t\t    // old QtWebKit versions, at least).\n\t\t\t    function _createBlob(parts, properties) {\n\t\t\t        parts = parts || [];\n\t\t\t        properties = properties || {};\n\t\n\t\t\t        try {\n\t\t\t            return new Blob(parts, properties);\n\t\t\t        } catch (err) {\n\t\t\t            if (err.name !== 'TypeError') {\n\t\t\t                throw err;\n\t\t\t            }\n\t\n\t\t\t            var BlobBuilder = globalObject.BlobBuilder || globalObject.MSBlobBuilder || globalObject.MozBlobBuilder || globalObject.WebKitBlobBuilder;\n\t\n\t\t\t            var builder = new BlobBuilder();\n\t\t\t            for (var i = 0; i < parts.length; i += 1) {\n\t\t\t                builder.append(parts[i]);\n\t\t\t            }\n\t\n\t\t\t            return builder.getBlob(properties.type);\n\t\t\t        }\n\t\t\t    }\n\t\n\t\t\t    // Serialize a value, afterwards executing a callback (which usually\n\t\t\t    // instructs the `setItem()` callback/promise to be executed). This is how\n\t\t\t    // we store binary data with localStorage.\n\t\t\t    function serialize(value, callback) {\n\t\t\t        var valueString = '';\n\t\t\t        if (value) {\n\t\t\t            valueString = value.toString();\n\t\t\t        }\n\t\n\t\t\t        // Cannot use `value instanceof ArrayBuffer` or such here, as these\n\t\t\t        // checks fail when running the tests using casper.js...\n\t\t\t        //\n\t\t\t        // TODO: See why those tests fail and use a better solution.\n\t\t\t        if (value && (value.toString() === '[object ArrayBuffer]' || value.buffer && value.buffer.toString() === '[object ArrayBuffer]')) {\n\t\t\t            // Convert binary arrays to a string and prefix the string with\n\t\t\t            // a special marker.\n\t\t\t            var buffer;\n\t\t\t            var marker = SERIALIZED_MARKER;\n\t\n\t\t\t            if (value instanceof ArrayBuffer) {\n\t\t\t                buffer = value;\n\t\t\t                marker += TYPE_ARRAYBUFFER;\n\t\t\t            } else {\n\t\t\t                buffer = value.buffer;\n\t\n\t\t\t                if (valueString === '[object Int8Array]') {\n\t\t\t                    marker += TYPE_INT8ARRAY;\n\t\t\t                } else if (valueString === '[object Uint8Array]') {\n\t\t\t                    marker += TYPE_UINT8ARRAY;\n\t\t\t                } else if (valueString === '[object Uint8ClampedArray]') {\n\t\t\t                    marker += TYPE_UINT8CLAMPEDARRAY;\n\t\t\t                } else if (valueString === '[object Int16Array]') {\n\t\t\t                    marker += TYPE_INT16ARRAY;\n\t\t\t                } else if (valueString === '[object Uint16Array]') {\n\t\t\t                    marker += TYPE_UINT16ARRAY;\n\t\t\t                } else if (valueString === '[object Int32Array]') {\n\t\t\t                    marker += TYPE_INT32ARRAY;\n\t\t\t                } else if (valueString === '[object Uint32Array]') {\n\t\t\t                    marker += TYPE_UINT32ARRAY;\n\t\t\t                } else if (valueString === '[object Float32Array]') {\n\t\t\t                    marker += TYPE_FLOAT32ARRAY;\n\t\t\t                } else if (valueString === '[object Float64Array]') {\n\t\t\t                    marker += TYPE_FLOAT64ARRAY;\n\t\t\t                } else {\n\t\t\t                    callback(new Error('Failed to get type for BinaryArray'));\n\t\t\t                }\n\t\t\t            }\n\t\n\t\t\t            callback(marker + bufferToString(buffer));\n\t\t\t        } else if (valueString === '[object Blob]') {\n\t\t\t            // Conver the blob to a binaryArray and then to a string.\n\t\t\t            var fileReader = new FileReader();\n\t\n\t\t\t            fileReader.onload = function () {\n\t\t\t                // Backwards-compatible prefix for the blob type.\n\t\t\t                var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\t\n\t\t\t                callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n\t\t\t            };\n\t\n\t\t\t            fileReader.readAsArrayBuffer(value);\n\t\t\t        } else {\n\t\t\t            try {\n\t\t\t                callback(JSON.stringify(value));\n\t\t\t            } catch (e) {\n\t\t\t                console.error(\"Couldn't convert value into a JSON string: \", value);\n\t\n\t\t\t                callback(null, e);\n\t\t\t            }\n\t\t\t        }\n\t\t\t    }\n\t\n\t\t\t    // Deserialize data we've inserted into a value column/field. We place\n\t\t\t    // special markers into our strings to mark them as encoded; this isn't\n\t\t\t    // as nice as a meta field, but it's the only sane thing we can do whilst\n\t\t\t    // keeping localStorage support intact.\n\t\t\t    //\n\t\t\t    // Oftentimes this will just deserialize JSON content, but if we have a\n\t\t\t    // special marker (SERIALIZED_MARKER, defined above), we will extract\n\t\t\t    // some kind of arraybuffer/binary data/typed array out of the string.\n\t\t\t    function deserialize(value) {\n\t\t\t        // If we haven't marked this string as being specially serialized (i.e.\n\t\t\t        // something other than serialized JSON), we can just return it and be\n\t\t\t        // done with it.\n\t\t\t        if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n\t\t\t            return JSON.parse(value);\n\t\t\t        }\n\t\n\t\t\t        // The following code deals with deserializing some kind of Blob or\n\t\t\t        // TypedArray. First we separate out the type of data we're dealing\n\t\t\t        // with from the data itself.\n\t\t\t        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n\t\t\t        var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\t\n\t\t\t        var blobType;\n\t\t\t        // Backwards-compatible blob type serialization strategy.\n\t\t\t        // DBs created with older versions of localForage will simply not have the blob type.\n\t\t\t        if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n\t\t\t            var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n\t\t\t            blobType = matcher[1];\n\t\t\t            serializedString = serializedString.substring(matcher[0].length);\n\t\t\t        }\n\t\t\t        var buffer = stringToBuffer(serializedString);\n\t\n\t\t\t        // Return the right type based on the code/type set during\n\t\t\t        // serialization.\n\t\t\t        switch (type) {\n\t\t\t            case TYPE_ARRAYBUFFER:\n\t\t\t                return buffer;\n\t\t\t            case TYPE_BLOB:\n\t\t\t                return _createBlob([buffer], { type: blobType });\n\t\t\t            case TYPE_INT8ARRAY:\n\t\t\t                return new Int8Array(buffer);\n\t\t\t            case TYPE_UINT8ARRAY:\n\t\t\t                return new Uint8Array(buffer);\n\t\t\t            case TYPE_UINT8CLAMPEDARRAY:\n\t\t\t                return new Uint8ClampedArray(buffer);\n\t\t\t            case TYPE_INT16ARRAY:\n\t\t\t                return new Int16Array(buffer);\n\t\t\t            case TYPE_UINT16ARRAY:\n\t\t\t                return new Uint16Array(buffer);\n\t\t\t            case TYPE_INT32ARRAY:\n\t\t\t                return new Int32Array(buffer);\n\t\t\t            case TYPE_UINT32ARRAY:\n\t\t\t                return new Uint32Array(buffer);\n\t\t\t            case TYPE_FLOAT32ARRAY:\n\t\t\t                return new Float32Array(buffer);\n\t\t\t            case TYPE_FLOAT64ARRAY:\n\t\t\t                return new Float64Array(buffer);\n\t\t\t            default:\n\t\t\t                throw new Error('Unkown type: ' + type);\n\t\t\t        }\n\t\t\t    }\n\t\n\t\t\t    function stringToBuffer(serializedString) {\n\t\t\t        // Fill the string into a ArrayBuffer.\n\t\t\t        var bufferLength = serializedString.length * 0.75;\n\t\t\t        var len = serializedString.length;\n\t\t\t        var i;\n\t\t\t        var p = 0;\n\t\t\t        var encoded1, encoded2, encoded3, encoded4;\n\t\n\t\t\t        if (serializedString[serializedString.length - 1] === '=') {\n\t\t\t            bufferLength--;\n\t\t\t            if (serializedString[serializedString.length - 2] === '=') {\n\t\t\t                bufferLength--;\n\t\t\t            }\n\t\t\t        }\n\t\n\t\t\t        var buffer = new ArrayBuffer(bufferLength);\n\t\t\t        var bytes = new Uint8Array(buffer);\n\t\n\t\t\t        for (i = 0; i < len; i += 4) {\n\t\t\t            encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n\t\t\t            encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n\t\t\t            encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n\t\t\t            encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\t\n\t\t\t            /*jslint bitwise: true */\n\t\t\t            bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n\t\t\t            bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n\t\t\t            bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n\t\t\t        }\n\t\t\t        return buffer;\n\t\t\t    }\n\t\n\t\t\t    // Converts a buffer to a string to store, serialized, in the backend\n\t\t\t    // storage library.\n\t\t\t    function bufferToString(buffer) {\n\t\t\t        // base64-arraybuffer\n\t\t\t        var bytes = new Uint8Array(buffer);\n\t\t\t        var base64String = '';\n\t\t\t        var i;\n\t\n\t\t\t        for (i = 0; i < bytes.length; i += 3) {\n\t\t\t            /*jslint bitwise: true */\n\t\t\t            base64String += BASE_CHARS[bytes[i] >> 2];\n\t\t\t            base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n\t\t\t            base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n\t\t\t            base64String += BASE_CHARS[bytes[i + 2] & 63];\n\t\t\t        }\n\t\n\t\t\t        if (bytes.length % 3 === 2) {\n\t\t\t            base64String = base64String.substring(0, base64String.length - 1) + '=';\n\t\t\t        } else if (bytes.length % 3 === 1) {\n\t\t\t            base64String = base64String.substring(0, base64String.length - 2) + '==';\n\t\t\t        }\n\t\n\t\t\t        return base64String;\n\t\t\t    }\n\t\n\t\t\t    var localforageSerializer = {\n\t\t\t        serialize: serialize,\n\t\t\t        deserialize: deserialize,\n\t\t\t        stringToBuffer: stringToBuffer,\n\t\t\t        bufferToString: bufferToString\n\t\t\t    };\n\t\n\t\t\t    return localforageSerializer;\n\t\t\t})(typeof window !== 'undefined' ? window : self);\n\t\t\texports['default'] = localforageSerializer;\n\t\t\tmodule.exports = exports['default'];\n\t\n\t\t/***/ },\n\t\t/* 4 */\n\t\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\t/*\n\t\t\t * Includes code from:\n\t\t\t *\n\t\t\t * base64-arraybuffer\n\t\t\t * https://github.com/niklasvh/base64-arraybuffer\n\t\t\t *\n\t\t\t * Copyright (c) 2012 Niklas von Hertzen\n\t\t\t * Licensed under the MIT license.\n\t\t\t */\n\t\t\t'use strict';\n\t\n\t\t\texports.__esModule = true;\n\t\t\tvar webSQLStorage = (function (globalObject) {\n\t\t\t    'use strict';\n\t\n\t\t\t    var openDatabase = globalObject.openDatabase;\n\t\n\t\t\t    // If WebSQL methods aren't available, we can stop now.\n\t\t\t    if (!openDatabase) {\n\t\t\t        return;\n\t\t\t    }\n\t\n\t\t\t    // Open the WebSQL database (automatically creates one if one didn't\n\t\t\t    // previously exist), using any options set in the config.\n\t\t\t    function _initStorage(options) {\n\t\t\t        var self = this;\n\t\t\t        var dbInfo = {\n\t\t\t            db: null\n\t\t\t        };\n\t\n\t\t\t        if (options) {\n\t\t\t            for (var i in options) {\n\t\t\t                dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n\t\t\t            }\n\t\t\t        }\n\t\n\t\t\t        var dbInfoPromise = new Promise(function (resolve, reject) {\n\t\t\t            // Open the database; the openDatabase API will automatically\n\t\t\t            // create it for us if it doesn't exist.\n\t\t\t            try {\n\t\t\t                dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n\t\t\t            } catch (e) {\n\t\t\t                return reject(e);\n\t\t\t            }\n\t\n\t\t\t            // Create our key/value table if it doesn't exist.\n\t\t\t            dbInfo.db.transaction(function (t) {\n\t\t\t                t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n\t\t\t                    self._dbInfo = dbInfo;\n\t\t\t                    resolve();\n\t\t\t                }, function (t, error) {\n\t\t\t                    reject(error);\n\t\t\t                });\n\t\t\t            });\n\t\t\t        });\n\t\n\t\t\t        return new Promise(function (resolve, reject) {\n\t\t\t            resolve(__webpack_require__(3));\n\t\t\t        }).then(function (lib) {\n\t\t\t            dbInfo.serializer = lib;\n\t\t\t            return dbInfoPromise;\n\t\t\t        });\n\t\t\t    }\n\t\n\t\t\t    function getItem(key, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t\t        if (typeof key !== 'string') {\n\t\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t\t            key = String(key);\n\t\t\t        }\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                dbInfo.db.transaction(function (t) {\n\t\t\t                    t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n\t\t\t                        var result = results.rows.length ? results.rows.item(0).value : null;\n\t\n\t\t\t                        // Check to see if this is serialized content we need to\n\t\t\t                        // unpack.\n\t\t\t                        if (result) {\n\t\t\t                            result = dbInfo.serializer.deserialize(result);\n\t\t\t                        }\n\t\n\t\t\t                        resolve(result);\n\t\t\t                    }, function (t, error) {\n\t\n\t\t\t                        reject(error);\n\t\t\t                    });\n\t\t\t                });\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function iterate(iterator, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\n\t\t\t                dbInfo.db.transaction(function (t) {\n\t\t\t                    t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n\t\t\t                        var rows = results.rows;\n\t\t\t                        var length = rows.length;\n\t\n\t\t\t                        for (var i = 0; i < length; i++) {\n\t\t\t                            var item = rows.item(i);\n\t\t\t                            var result = item.value;\n\t\n\t\t\t                            // Check to see if this is serialized content\n\t\t\t                            // we need to unpack.\n\t\t\t                            if (result) {\n\t\t\t                                result = dbInfo.serializer.deserialize(result);\n\t\t\t                            }\n\t\n\t\t\t                            result = iterator(result, item.key, i + 1);\n\t\n\t\t\t                            // void(0) prevents problems with redefinition\n\t\t\t                            // of `undefined`.\n\t\t\t                            if (result !== void 0) {\n\t\t\t                                resolve(result);\n\t\t\t                                return;\n\t\t\t                            }\n\t\t\t                        }\n\t\n\t\t\t                        resolve();\n\t\t\t                    }, function (t, error) {\n\t\t\t                        reject(error);\n\t\t\t                    });\n\t\t\t                });\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function setItem(key, value, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t\t        if (typeof key !== 'string') {\n\t\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t\t            key = String(key);\n\t\t\t        }\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                // The localStorage API doesn't return undefined values in an\n\t\t\t                // \"expected\" way, so undefined is always cast to null in all\n\t\t\t                // drivers. See: https://github.com/mozilla/localForage/pull/42\n\t\t\t                if (value === undefined) {\n\t\t\t                    value = null;\n\t\t\t                }\n\t\n\t\t\t                // Save the original value to pass to the callback.\n\t\t\t                var originalValue = value;\n\t\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                dbInfo.serializer.serialize(value, function (value, error) {\n\t\t\t                    if (error) {\n\t\t\t                        reject(error);\n\t\t\t                    } else {\n\t\t\t                        dbInfo.db.transaction(function (t) {\n\t\t\t                            t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n\t\t\t                                resolve(originalValue);\n\t\t\t                            }, function (t, error) {\n\t\t\t                                reject(error);\n\t\t\t                            });\n\t\t\t                        }, function (sqlError) {\n\t\t\t                            // The transaction failed; check\n\t\t\t                            // to see if it's a quota error.\n\t\t\t                            if (sqlError.code === sqlError.QUOTA_ERR) {\n\t\t\t                                // We reject the callback outright for now, but\n\t\t\t                                // it's worth trying to re-run the transaction.\n\t\t\t                                // Even if the user accepts the prompt to use\n\t\t\t                                // more storage on Safari, this error will\n\t\t\t                                // be called.\n\t\t\t                                //\n\t\t\t                                // TODO: Try to re-run the transaction.\n\t\t\t                                reject(sqlError);\n\t\t\t                            }\n\t\t\t                        });\n\t\t\t                    }\n\t\t\t                });\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function removeItem(key, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t\t        if (typeof key !== 'string') {\n\t\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t\t            key = String(key);\n\t\t\t        }\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                dbInfo.db.transaction(function (t) {\n\t\t\t                    t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n\t\t\t                        resolve();\n\t\t\t                    }, function (t, error) {\n\t\n\t\t\t                        reject(error);\n\t\t\t                    });\n\t\t\t                });\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Deletes every item in the table.\n\t\t\t    // TODO: Find out if this resets the AUTO_INCREMENT number.\n\t\t\t    function clear(callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                dbInfo.db.transaction(function (t) {\n\t\t\t                    t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n\t\t\t                        resolve();\n\t\t\t                    }, function (t, error) {\n\t\t\t                        reject(error);\n\t\t\t                    });\n\t\t\t                });\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Does a simple `COUNT(key)` to get the number of items stored in\n\t\t\t    // localForage.\n\t\t\t    function length(callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                dbInfo.db.transaction(function (t) {\n\t\t\t                    // Ahhh, SQL makes this one soooooo easy.\n\t\t\t                    t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n\t\t\t                        var result = results.rows.item(0).c;\n\t\n\t\t\t                        resolve(result);\n\t\t\t                    }, function (t, error) {\n\t\n\t\t\t                        reject(error);\n\t\t\t                    });\n\t\t\t                });\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    // Return the key located at key index X; essentially gets the key from a\n\t\t\t    // `WHERE id = ?`. This is the most efficient way I can think to implement\n\t\t\t    // this rarely-used (in my experience) part of the API, but it can seem\n\t\t\t    // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n\t\t\t    // the ID of each key will change every time it's updated. Perhaps a stored\n\t\t\t    // procedure for the `setItem()` SQL would solve this problem?\n\t\t\t    // TODO: Don't change ID on `setItem()`.\n\t\t\t    function key(n, callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                dbInfo.db.transaction(function (t) {\n\t\t\t                    t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n\t\t\t                        var result = results.rows.length ? results.rows.item(0).key : null;\n\t\t\t                        resolve(result);\n\t\t\t                    }, function (t, error) {\n\t\t\t                        reject(error);\n\t\t\t                    });\n\t\t\t                });\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function keys(callback) {\n\t\t\t        var self = this;\n\t\n\t\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t\t            self.ready().then(function () {\n\t\t\t                var dbInfo = self._dbInfo;\n\t\t\t                dbInfo.db.transaction(function (t) {\n\t\t\t                    t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n\t\t\t                        var keys = [];\n\t\n\t\t\t                        for (var i = 0; i < results.rows.length; i++) {\n\t\t\t                            keys.push(results.rows.item(i).key);\n\t\t\t                        }\n\t\n\t\t\t                        resolve(keys);\n\t\t\t                    }, function (t, error) {\n\t\n\t\t\t                        reject(error);\n\t\t\t                    });\n\t\t\t                });\n\t\t\t            })['catch'](reject);\n\t\t\t        });\n\t\n\t\t\t        executeCallback(promise, callback);\n\t\t\t        return promise;\n\t\t\t    }\n\t\n\t\t\t    function executeCallback(promise, callback) {\n\t\t\t        if (callback) {\n\t\t\t            promise.then(function (result) {\n\t\t\t                callback(null, result);\n\t\t\t            }, function (error) {\n\t\t\t                callback(error);\n\t\t\t            });\n\t\t\t        }\n\t\t\t    }\n\t\n\t\t\t    var webSQLStorage = {\n\t\t\t        _driver: 'webSQLStorage',\n\t\t\t        _initStorage: _initStorage,\n\t\t\t        iterate: iterate,\n\t\t\t        getItem: getItem,\n\t\t\t        setItem: setItem,\n\t\t\t        removeItem: removeItem,\n\t\t\t        clear: clear,\n\t\t\t        length: length,\n\t\t\t        key: key,\n\t\t\t        keys: keys\n\t\t\t    };\n\t\n\t\t\t    return webSQLStorage;\n\t\t\t})(typeof window !== 'undefined' ? window : self);\n\t\t\texports['default'] = webSQLStorage;\n\t\t\tmodule.exports = exports['default'];\n\t\n\t\t/***/ }\n\t\t/******/ ])\n\t\t});\n\t\t;\n\t\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2)))\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\t// shim for using process in browser\n\t\n\t\tvar process = module.exports = {};\n\t\tvar queue = [];\n\t\tvar draining = false;\n\t\tvar currentQueue;\n\t\tvar queueIndex = -1;\n\t\n\t\tfunction cleanUpNextTick() {\n\t\t    draining = false;\n\t\t    if (currentQueue.length) {\n\t\t        queue = currentQueue.concat(queue);\n\t\t    } else {\n\t\t        queueIndex = -1;\n\t\t    }\n\t\t    if (queue.length) {\n\t\t        drainQueue();\n\t\t    }\n\t\t}\n\t\n\t\tfunction drainQueue() {\n\t\t    if (draining) {\n\t\t        return;\n\t\t    }\n\t\t    var timeout = setTimeout(cleanUpNextTick);\n\t\t    draining = true;\n\t\n\t\t    var len = queue.length;\n\t\t    while(len) {\n\t\t        currentQueue = queue;\n\t\t        queue = [];\n\t\t        while (++queueIndex < len) {\n\t\t            if (currentQueue) {\n\t\t                currentQueue[queueIndex].run();\n\t\t            }\n\t\t        }\n\t\t        queueIndex = -1;\n\t\t        len = queue.length;\n\t\t    }\n\t\t    currentQueue = null;\n\t\t    draining = false;\n\t\t    clearTimeout(timeout);\n\t\t}\n\t\n\t\tprocess.nextTick = function (fun) {\n\t\t    var args = new Array(arguments.length - 1);\n\t\t    if (arguments.length > 1) {\n\t\t        for (var i = 1; i < arguments.length; i++) {\n\t\t            args[i - 1] = arguments[i];\n\t\t        }\n\t\t    }\n\t\t    queue.push(new Item(fun, args));\n\t\t    if (queue.length === 1 && !draining) {\n\t\t        setTimeout(drainQueue, 0);\n\t\t    }\n\t\t};\n\t\n\t\t// v8 likes predictible objects\n\t\tfunction Item(fun, array) {\n\t\t    this.fun = fun;\n\t\t    this.array = array;\n\t\t}\n\t\tItem.prototype.run = function () {\n\t\t    this.fun.apply(null, this.array);\n\t\t};\n\t\tprocess.title = 'browser';\n\t\tprocess.browser = true;\n\t\tprocess.env = {};\n\t\tprocess.argv = [];\n\t\tprocess.version = ''; // empty string to avoid regexp issues\n\t\tprocess.versions = {};\n\t\n\t\tfunction noop() {}\n\t\n\t\tprocess.on = noop;\n\t\tprocess.addListener = noop;\n\t\tprocess.once = noop;\n\t\tprocess.off = noop;\n\t\tprocess.removeListener = noop;\n\t\tprocess.removeAllListeners = noop;\n\t\tprocess.emit = noop;\n\t\n\t\tprocess.binding = function (name) {\n\t\t    throw new Error('process.binding is not supported');\n\t\t};\n\t\n\t\tprocess.cwd = function () { return '/' };\n\t\tprocess.chdir = function (dir) {\n\t\t    throw new Error('process.chdir is not supported');\n\t\t};\n\t\tprocess.umask = function() { return 0; };\n\t\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(7)))\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t\t true ? module.exports = factory(__webpack_require__(2)) :\n\t\ttypeof define === 'function' && define.amd ? define(['preact'], factory) :\n\t\t(global.preactSvg = factory(global.preact));\n\t}(this, function (preact) { 'use strict';\n\t\n\t\tvar babelHelpers = {};\n\t\n\t\tbabelHelpers.classCallCheck = function (instance, Constructor) {\n\t\t  if (!(instance instanceof Constructor)) {\n\t\t    throw new TypeError(\"Cannot call a class as a function\");\n\t\t  }\n\t\t};\n\t\n\t\tbabelHelpers.createClass = function () {\n\t\t  function defineProperties(target, props) {\n\t\t    for (var i = 0; i < props.length; i++) {\n\t\t      var descriptor = props[i];\n\t\t      descriptor.enumerable = descriptor.enumerable || false;\n\t\t      descriptor.configurable = true;\n\t\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t\t    }\n\t\t  }\n\t\n\t\t  return function (Constructor, protoProps, staticProps) {\n\t\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t\t    return Constructor;\n\t\t  };\n\t\t}();\n\t\n\t\tbabelHelpers.extends = Object.assign || function (target) {\n\t\t  for (var i = 1; i < arguments.length; i++) {\n\t\t    var source = arguments[i];\n\t\n\t\t    for (var key in source) {\n\t\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t        target[key] = source[key];\n\t\t      }\n\t\t    }\n\t\t  }\n\t\n\t\t  return target;\n\t\t};\n\t\n\t\tbabelHelpers.inherits = function (subClass, superClass) {\n\t\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t\t    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n\t\t  }\n\t\n\t\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t\t    constructor: {\n\t\t      value: subClass,\n\t\t      enumerable: false,\n\t\t      writable: true,\n\t\t      configurable: true\n\t\t    }\n\t\t  });\n\t\t  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t\t};\n\t\n\t\tbabelHelpers.objectWithoutProperties = function (obj, keys) {\n\t\t  var target = {};\n\t\n\t\t  for (var i in obj) {\n\t\t    if (keys.indexOf(i) >= 0) continue;\n\t\t    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n\t\t    target[i] = obj[i];\n\t\t  }\n\t\n\t\t  return target;\n\t\t};\n\t\n\t\tbabelHelpers.possibleConstructorReturn = function (self, call) {\n\t\t  if (!self) {\n\t\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t\t  }\n\t\n\t\t  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n\t\t};\n\t\n\t\tbabelHelpers;\n\t\n\t\tvar DOM = typeof document !== 'undefined' && !!document.createElement;\n\t\n\t\tvar SVG_ATTRS = ['viewBox'];\n\t\n\t\tvar NS = {\n\t\t\txlink: 'http://www.w3.org/1999/xlink'\n\t\t};\n\t\n\t\tvar NS_ATTR = /^([a-zA-Z]+)(?:\\:|([A-Z]))/;\n\t\n\t\tvar PROP_TO_ATTR_MAP = {\n\t\t\t'className': 'class'\n\t\t};\n\t\n\t\tvar EMPTY = {};\n\t\n\t\tvar updateMode = false;\n\t\n\t\tif (DOM) {\n\t\t\t(function () {\n\t\t\t\tvar div = document.createElement('div');\n\t\n\t\t\t\tvar oldCreate = document.createElement;\n\t\t\t\tdocument.createElement = function (name) {\n\t\t\t\t\tif (updateMode || name === 'svg') {\n\t\t\t\t\t\tvar el = document.createElementNS('http://www.w3.org/2000/svg', name);\n\t\n\t\t\t\t\t\tel.setAttribute = createAttributeShim('setAttribute');\n\t\t\t\t\t\tel.getAttribute = createAttributeShim('getAttribute');\n\t\t\t\t\t\tel.removeAttribute = createAttributeShim('removeAttribute');\n\t\t\t\t\t\tfor (var key in el) {\n\t\t\t\t\t\t\tif (~SVG_ATTRS.indexOf(key) || !(key in div) || PROP_TO_ATTR_MAP.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\toverwriteProperty(el, key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn el;\n\t\t\t\t\t}\n\t\t\t\t\treturn oldCreate.call(document, name);\n\t\t\t\t};\n\t\t\t})();\n\t\t}\n\t\n\t\tvar PROPERTY_ERRORS = {};\n\t\tvar hasPropertyErrors = false;\n\t\n\t\tfunction overwriteProperty(el, key) {\n\t\t\tvar err = PROPERTY_ERRORS[key];\n\t\t\tif (err === false) {\n\t\t\t\tObject.defineProperty(el, key, contentPropertyDef(key));\n\t\t\t} else {\n\t\t\t\tattemptOverwriteProperty(el, key);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction attemptOverwriteProperty(el, key) {\n\t\t\ttry {\n\t\t\t\tObject.defineProperty(el, key, contentPropertyDef(key));\n\t\t\t\tPROPERTY_ERRORS[key] = false;\n\t\t\t} catch (e) {\n\t\t\t\tif (!PROPERTY_ERRORS[key]) {\n\t\t\t\t\tvar err = el.nodeName + ': ' + e;\n\t\t\t\t\tPROPERTY_ERRORS[key] = err;\n\t\t\t\t\tif (!hasPropertyErrors && 'undefined' !== typeof console && console.warn) {\n\t\t\t\t\t\thasPropertyErrors = true;\n\t\t\t\t\t\tconsole.warn('Error overwriting some SVG properties.', { errors: PROPERTY_ERRORS });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tvar memoize = function (fn) {\n\t\t\tvar mem = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\t\treturn function (k) {\n\t\t\t\treturn mem.hasOwnProperty(k) ? mem[k] : mem[k] = fn(k);\n\t\t\t};\n\t\t};\n\t\n\t\tvar contentPropertyDef = memoize(function (prop) {\n\t\t\tvar attr = arguments.length <= 1 || arguments[1] === undefined ? PROP_TO_ATTR_MAP[prop] || prop : arguments[1];\n\t\t\treturn {\n\t\t\t\tset: function (v) {\n\t\t\t\t\tif (v === null || v === undefined) this.removeAttribute(attr);else this.setAttribute(attr, v);\n\t\t\t\t},\n\t\t\t\tget: function () {\n\t\t\t\t\treturn this.getAttribute(attr);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\n\t\tvar createAttributeShim = memoize(function (method) {\n\t\t\treturn function (name, value) {\n\t\t\t\tvar proto = this.constructor.prototype,\n\t\t\t\t    p = name.match(NS_ATTR);\n\t\t\t\tif (p && NS.hasOwnProperty(p[1])) {\n\t\t\t\t\tname = name.replace(NS_ATTR, '$2').toLowerCase();\n\t\t\t\t\tvar ns = NS[p[1]];\n\t\t\t\t\treturn proto[method + 'NS'].call(this, ns, name, value);\n\t\t\t\t} else {\n\t\t\t\t\treturn proto[method].call(this, name, value);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\n\t\tvar SVG = function (_Component) {\n\t\t\tbabelHelpers.inherits(SVG, _Component);\n\t\n\t\t\tfunction SVG() {\n\t\t\t\tbabelHelpers.classCallCheck(this, SVG);\n\t\t\t\treturn babelHelpers.possibleConstructorReturn(this, Object.getPrototypeOf(SVG).apply(this, arguments));\n\t\t\t}\n\t\n\t\t\tbabelHelpers.createClass(SVG, [{\n\t\t\t\tkey: 'componentWillUpdate',\n\t\t\t\tvalue: function componentWillUpdate() {\n\t\t\t\t\tupdateMode = true;\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'componentDidUpdate',\n\t\t\t\tvalue: function componentDidUpdate() {\n\t\t\t\t\tupdateMode = false;\n\t\n\t\t\t\t\tif (this.base) {\n\t\t\t\t\t\tfor (var i in this.props) {\n\t\t\t\t\t\t\tif (~SVG_ATTRS.indexOf(i) || PROPERTY_ERRORS.hasOwnProperty(i) && PROPERTY_ERRORS[i] !== false) {\n\t\t\t\t\t\t\t\tthis.base.setAttribute(i, this.props[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tkey: 'render',\n\t\t\t\tvalue: function render(_ref) {\n\t\t\t\t\tvar children = _ref.children;\n\t\t\t\t\tvar props = babelHelpers.objectWithoutProperties(_ref, ['children']);\n\t\n\t\t\t\t\tif (!this.hasRendered) {\n\t\t\t\t\t\tthis.hasRendered = updateMode = true;\n\t\n\t\t\t\t\t\tthis.setState(EMPTY, setStateUpdateProxy(this));\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor (var i in props) {\n\t\t\t\t\t\tif (~SVG_ATTRS.indexOf(i) || PROPERTY_ERRORS.hasOwnProperty(i) && PROPERTY_ERRORS[i] !== false) {\n\t\t\t\t\t\t\tdelete props[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn preact.h(\n\t\t\t\t\t\t'svg',\n\t\t\t\t\t\tbabelHelpers.extends({ version: '1.1', xmlns: 'http://www.w3.org/2000/svg' }, props),\n\t\t\t\t\t\tchildren\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}]);\n\t\t\treturn SVG;\n\t\t}(preact.Component);\n\t\n\t\tfunction setStateUpdateProxy(component) {\n\t\t\treturn function () {\n\t\t\t\tcomponent.componentDidUpdate();\n\t\t\t\tcomponent = null;\n\t\t\t};\n\t\t}\n\t\n\t\treturn SVG;\n\n\t}));\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, module], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n\t    factory(exports, module);\n\t  } else {\n\t    var mod = {\n\t      exports: {}\n\t    };\n\t    factory(mod.exports, mod);\n\t    global.PropTypes = mod.exports;\n\t  }\n\t})(this, function (exports, module) {\n\t\n\t  'use strict';\n\t\n\t  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\t\n\t  var ReactElement = {};\n\t\n\t  ReactElement.isValidElement = function (object) {\n\t    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  var ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t\n\t  var emptyFunction = {\n\t    thatReturns: function thatReturns(what) {\n\t      return function () {\n\t        return what;\n\t      };\n\t    }\n\t  };\n\t\n\t  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\t  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\t  function getIteratorFn(maybeIterable) {\n\t    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t    if (typeof iteratorFn === 'function') {\n\t      return iteratorFn;\n\t    }\n\t  }\n\t\n\t  var ANONYMOUS = '<<anonymous>>';\n\t\n\t  var ReactPropTypes = {\n\t    array: createPrimitiveTypeChecker('array'),\n\t    bool: createPrimitiveTypeChecker('boolean'),\n\t    func: createPrimitiveTypeChecker('function'),\n\t    number: createPrimitiveTypeChecker('number'),\n\t    object: createPrimitiveTypeChecker('object'),\n\t    string: createPrimitiveTypeChecker('string'),\n\t\n\t    any: createAnyTypeChecker(),\n\t    arrayOf: createArrayOfTypeChecker,\n\t    element: createElementTypeChecker(),\n\t    instanceOf: createInstanceTypeChecker,\n\t    node: createNodeChecker(),\n\t    objectOf: createObjectOfTypeChecker,\n\t    oneOf: createEnumTypeChecker,\n\t    oneOfType: createUnionTypeChecker,\n\t    shape: createShapeTypeChecker\n\t  };\n\t\n\t  function createChainableTypeChecker(validate) {\n\t    function checkType(isRequired, props, propName, componentName, location, propFullName) {\n\t      componentName = componentName || ANONYMOUS;\n\t      propFullName = propFullName || propName;\n\t      if (props[propName] == null) {\n\t        var locationName = ReactPropTypeLocationNames[location];\n\t        if (isRequired) {\n\t          return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n\t        }\n\t        return null;\n\t      } else {\n\t        return validate(props, propName, componentName, location, propFullName);\n\t      }\n\t    }\n\t\n\t    var chainedCheckType = checkType.bind(null, false);\n\t    chainedCheckType.isRequired = checkType.bind(null, true);\n\t\n\t    return chainedCheckType;\n\t  }\n\t\n\t  function createPrimitiveTypeChecker(expectedType) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== expectedType) {\n\t        var locationName = ReactPropTypeLocationNames[location];\n\t\n\t        var preciseType = getPreciseType(propValue);\n\t\n\t        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createAnyTypeChecker() {\n\t    return createChainableTypeChecker(emptyFunction.thatReturns(null));\n\t  }\n\t\n\t  function createArrayOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      if (!Array.isArray(propValue)) {\n\t        var locationName = ReactPropTypeLocationNames[location];\n\t        var propType = getPropType(propValue);\n\t        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t      }\n\t      for (var i = 0; i < propValue.length; i++) {\n\t        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createElementTypeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!ReactElement.isValidElement(props[propName])) {\n\t        var locationName = ReactPropTypeLocationNames[location];\n\t        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createInstanceTypeChecker(expectedClass) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!(props[propName] instanceof expectedClass)) {\n\t        var locationName = ReactPropTypeLocationNames[location];\n\t        var expectedClassName = expectedClass.name || ANONYMOUS;\n\t        var actualClassName = getClassName(props[propName]);\n\t        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createEnumTypeChecker(expectedValues) {\n\t    if (!Array.isArray(expectedValues)) {\n\t      return createChainableTypeChecker(function () {\n\t        return new Error('Invalid argument supplied to oneOf, expected an instance of array.');\n\t      });\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      for (var i = 0; i < expectedValues.length; i++) {\n\t        if (propValue === expectedValues[i]) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var valuesString = JSON.stringify(expectedValues);\n\t      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createObjectOfTypeChecker(typeChecker) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        var locationName = ReactPropTypeLocationNames[location];\n\t        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t      }\n\t      for (var key in propValue) {\n\t        if (propValue.hasOwnProperty(key)) {\n\t          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);\n\t          if (error instanceof Error) {\n\t            return error;\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createUnionTypeChecker(arrayOfTypeCheckers) {\n\t    if (!Array.isArray(arrayOfTypeCheckers)) {\n\t      return createChainableTypeChecker(function () {\n\t        return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');\n\t      });\n\t    }\n\t\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t        var checker = arrayOfTypeCheckers[i];\n\t        if (checker(props, propName, componentName, location, propFullName) == null) {\n\t          return null;\n\t        }\n\t      }\n\t\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createNodeChecker() {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      if (!isNode(props[propName])) {\n\t        var locationName = ReactPropTypeLocationNames[location];\n\t        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function createShapeTypeChecker(shapeTypes) {\n\t    function validate(props, propName, componentName, location, propFullName) {\n\t      var propValue = props[propName];\n\t      var propType = getPropType(propValue);\n\t      if (propType !== 'object') {\n\t        var locationName = ReactPropTypeLocationNames[location];\n\t        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t      }\n\t      for (var key in shapeTypes) {\n\t        var checker = shapeTypes[key];\n\t        if (!checker) {\n\t          continue;\n\t        }\n\t        var error = checker(propValue, key, componentName, location, propFullName + '.' + key);\n\t        if (error) {\n\t          return error;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t    return createChainableTypeChecker(validate);\n\t  }\n\t\n\t  function isNode(propValue) {\n\t    switch (typeof propValue) {\n\t      case 'number':\n\t      case 'string':\n\t      case 'undefined':\n\t        return true;\n\t      case 'boolean':\n\t        return !propValue;\n\t      case 'object':\n\t        if (Array.isArray(propValue)) {\n\t          return propValue.every(isNode);\n\t        }\n\t        if (propValue === null || ReactElement.isValidElement(propValue)) {\n\t          return true;\n\t        }\n\t\n\t        var iteratorFn = getIteratorFn(propValue);\n\t        if (iteratorFn) {\n\t          var iterator = iteratorFn.call(propValue);\n\t          var step;\n\t          if (iteratorFn !== propValue.entries) {\n\t            while (!(step = iterator.next()).done) {\n\t              if (!isNode(step.value)) {\n\t                return false;\n\t              }\n\t            }\n\t          } else {\n\t            while (!(step = iterator.next()).done) {\n\t              var entry = step.value;\n\t              if (entry) {\n\t                if (!isNode(entry[1])) {\n\t                  return false;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          return false;\n\t        }\n\t\n\t        return true;\n\t      default:\n\t        return false;\n\t    }\n\t  }\n\t\n\t  function getPropType(propValue) {\n\t    var propType = typeof propValue;\n\t    if (Array.isArray(propValue)) {\n\t      return 'array';\n\t    }\n\t    if (propValue instanceof RegExp) {\n\t      return 'object';\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  function getPreciseType(propValue) {\n\t    var propType = getPropType(propValue);\n\t    if (propType === 'object') {\n\t      if (propValue instanceof Date) {\n\t        return 'date';\n\t      } else if (propValue instanceof RegExp) {\n\t        return 'regexp';\n\t      }\n\t    }\n\t    return propType;\n\t  }\n\t\n\t  function getClassName(propValue) {\n\t    if (!propValue.constructor || !propValue.constructor.name) {\n\t      return ANONYMOUS;\n\t    }\n\t    return propValue.constructor.name;\n\t  }\n\t\n\t  module.exports = ReactPropTypes;\n\t});\n\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// randomColor by David Merfield under the CC0 license\n\t// https://github.com/davidmerfield/randomColor/\n\t\n\t;(function(root, factory) {\n\t\n\t  // Support AMD\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t  // Support CommonJS\n\t  } else if (typeof exports === 'object') {\n\t    var randomColor = factory();\n\t\n\t    // Support NodeJS & Component, which allow module.exports to be a function\n\t    if (typeof module === 'object' && module && module.exports) {\n\t      exports = module.exports = randomColor;\n\t    }\n\t\n\t    // Support CommonJS 1.1.1 spec\n\t    exports.randomColor = randomColor;\n\t\n\t  // Support vanilla script loading\n\t  } else {\n\t    root.randomColor = factory();\n\t  }\n\t\n\t}(this, function() {\n\t\n\t  // Seed to get repeatable colors\n\t  var seed = null;\n\t\n\t  // Shared color dictionary\n\t  var colorDictionary = {};\n\t\n\t  // Populate the color dictionary\n\t  loadColorBounds();\n\t\n\t  var randomColor = function (options) {\n\t\n\t    options = options || {};\n\t\n\t    // Check if there is a seed and ensure it's an\n\t    // integer. Otherwise, reset the seed value.\n\t    if (options.seed && options.seed === parseInt(options.seed, 10)) {\n\t      seed = options.seed;\n\t\n\t    // A string was passed as a seed\n\t    } else if (typeof options.seed === 'string') {\n\t      seed = stringToInteger(options.seed);\n\t\n\t    // Something was passed as a seed but it wasn't an integer or string\n\t    } else if (options.seed !== undefined && options.seed !== null) {\n\t      throw new TypeError('The seed value must be an integer or string');\n\t\n\t    // No seed, reset the value outside.\n\t    } else {\n\t      seed = null;\n\t    }\n\t\n\t    var H,S,B;\n\t\n\t    // Check if we need to generate multiple colors\n\t    if (options.count !== null && options.count !== undefined) {\n\t\n\t      var totalColors = options.count,\n\t          colors = [];\n\t\n\t      options.count = null;\n\t\n\t      while (totalColors > colors.length) {\n\t\n\t        // Since we're generating multiple colors,\n\t        // incremement the seed. Otherwise we'd just\n\t        // generate the same color each time...\n\t        if (seed && options.seed) options.seed += 1;\n\t\n\t        colors.push(randomColor(options));\n\t      }\n\t\n\t      options.count = totalColors;\n\t\n\t      return colors;\n\t    }\n\t\n\t    // First we pick a hue (H)\n\t    H = pickHue(options);\n\t\n\t    // Then use H to determine saturation (S)\n\t    S = pickSaturation(H, options);\n\t\n\t    // Then use S and H to determine brightness (B).\n\t    B = pickBrightness(H, S, options);\n\t\n\t    // Then we return the HSB color in the desired format\n\t    return setFormat([H,S,B], options);\n\t  };\n\t\n\t  function pickHue (options) {\n\t\n\t    var hueRange = getHueRange(options.hue),\n\t        hue = randomWithin(hueRange);\n\t\n\t    // Instead of storing red as two seperate ranges,\n\t    // we group them, using negative numbers\n\t    if (hue < 0) {hue = 360 + hue;}\n\t\n\t    return hue;\n\t\n\t  }\n\t\n\t  function pickSaturation (hue, options) {\n\t\n\t    if (options.luminosity === 'random') {\n\t      return randomWithin([0,100]);\n\t    }\n\t\n\t    if (options.hue === 'monochrome') {\n\t      return 0;\n\t    }\n\t\n\t    var saturationRange = getSaturationRange(hue);\n\t\n\t    var sMin = saturationRange[0],\n\t        sMax = saturationRange[1];\n\t\n\t    switch (options.luminosity) {\n\t\n\t      case 'bright':\n\t        sMin = 55;\n\t        break;\n\t\n\t      case 'dark':\n\t        sMin = sMax - 10;\n\t        break;\n\t\n\t      case 'light':\n\t        sMax = 55;\n\t        break;\n\t   }\n\t\n\t    return randomWithin([sMin, sMax]);\n\t\n\t  }\n\t\n\t  function pickBrightness (H, S, options) {\n\t\n\t    var bMin = getMinimumBrightness(H, S),\n\t        bMax = 100;\n\t\n\t    switch (options.luminosity) {\n\t\n\t      case 'dark':\n\t        bMax = bMin + 20;\n\t        break;\n\t\n\t      case 'light':\n\t        bMin = (bMax + bMin)/2;\n\t        break;\n\t\n\t      case 'random':\n\t        bMin = 0;\n\t        bMax = 100;\n\t        break;\n\t    }\n\t\n\t    return randomWithin([bMin, bMax]);\n\t  }\n\t\n\t  function setFormat (hsv, options) {\n\t\n\t    switch (options.format) {\n\t\n\t      case 'hsvArray':\n\t        return hsv;\n\t\n\t      case 'hslArray':\n\t        return HSVtoHSL(hsv);\n\t\n\t      case 'hsl':\n\t        var hsl = HSVtoHSL(hsv);\n\t        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\t\n\t      case 'hsla':\n\t        var hslColor = HSVtoHSL(hsv);\n\t        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + Math.random() + ')';\n\t\n\t      case 'rgbArray':\n\t        return HSVtoRGB(hsv);\n\t\n\t      case 'rgb':\n\t        var rgb = HSVtoRGB(hsv);\n\t        return 'rgb(' + rgb.join(', ') + ')';\n\t\n\t      case 'rgba':\n\t        var rgbColor = HSVtoRGB(hsv);\n\t        return 'rgba(' + rgbColor.join(', ') + ', ' + Math.random() + ')';\n\t\n\t      default:\n\t        return HSVtoHex(hsv);\n\t    }\n\t\n\t  }\n\t\n\t  function getMinimumBrightness(H, S) {\n\t\n\t    var lowerBounds = getColorInfo(H).lowerBounds;\n\t\n\t    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\t\n\t      var s1 = lowerBounds[i][0],\n\t          v1 = lowerBounds[i][1];\n\t\n\t      var s2 = lowerBounds[i+1][0],\n\t          v2 = lowerBounds[i+1][1];\n\t\n\t      if (S >= s1 && S <= s2) {\n\t\n\t         var m = (v2 - v1)/(s2 - s1),\n\t             b = v1 - m*s1;\n\t\n\t         return m*S + b;\n\t      }\n\t\n\t    }\n\t\n\t    return 0;\n\t  }\n\t\n\t  function getHueRange (colorInput) {\n\t\n\t    if (typeof parseInt(colorInput) === 'number') {\n\t\n\t      var number = parseInt(colorInput);\n\t\n\t      if (number < 360 && number > 0) {\n\t        return [number, number];\n\t      }\n\t\n\t    }\n\t\n\t    if (typeof colorInput === 'string') {\n\t\n\t      if (colorDictionary[colorInput]) {\n\t        var color = colorDictionary[colorInput];\n\t        if (color.hueRange) {return color.hueRange;}\n\t      }\n\t    }\n\t\n\t    return [0,360];\n\t\n\t  }\n\t\n\t  function getSaturationRange (hue) {\n\t    return getColorInfo(hue).saturationRange;\n\t  }\n\t\n\t  function getColorInfo (hue) {\n\t\n\t    // Maps red colors to make picking hue easier\n\t    if (hue >= 334 && hue <= 360) {\n\t      hue-= 360;\n\t    }\n\t\n\t    for (var colorName in colorDictionary) {\n\t       var color = colorDictionary[colorName];\n\t       if (color.hueRange &&\n\t           hue >= color.hueRange[0] &&\n\t           hue <= color.hueRange[1]) {\n\t          return colorDictionary[colorName];\n\t       }\n\t    } return 'Color not found';\n\t  }\n\t\n\t  function randomWithin (range) {\n\t    if (seed === null) {\n\t      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n\t    } else {\n\t      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n\t      var max = range[1] || 1;\n\t      var min = range[0] || 0;\n\t      seed = (seed * 9301 + 49297) % 233280;\n\t      var rnd = seed / 233280.0;\n\t      return Math.floor(min + rnd * (max - min));\n\t    }\n\t  }\n\t\n\t  function HSVtoHex (hsv){\n\t\n\t    var rgb = HSVtoRGB(hsv);\n\t\n\t    function componentToHex(c) {\n\t        var hex = c.toString(16);\n\t        return hex.length == 1 ? '0' + hex : hex;\n\t    }\n\t\n\t    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\t\n\t    return hex;\n\t\n\t  }\n\t\n\t  function defineColor (name, hueRange, lowerBounds) {\n\t\n\t    var sMin = lowerBounds[0][0],\n\t        sMax = lowerBounds[lowerBounds.length - 1][0],\n\t\n\t        bMin = lowerBounds[lowerBounds.length - 1][1],\n\t        bMax = lowerBounds[0][1];\n\t\n\t    colorDictionary[name] = {\n\t      hueRange: hueRange,\n\t      lowerBounds: lowerBounds,\n\t      saturationRange: [sMin, sMax],\n\t      brightnessRange: [bMin, bMax]\n\t    };\n\t\n\t  }\n\t\n\t  function loadColorBounds () {\n\t\n\t    defineColor(\n\t      'monochrome',\n\t      null,\n\t      [[0,0],[100,0]]\n\t    );\n\t\n\t    defineColor(\n\t      'red',\n\t      [-26,18],\n\t      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n\t    );\n\t\n\t    defineColor(\n\t      'orange',\n\t      [19,46],\n\t      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n\t    );\n\t\n\t    defineColor(\n\t      'yellow',\n\t      [47,62],\n\t      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n\t    );\n\t\n\t    defineColor(\n\t      'green',\n\t      [63,178],\n\t      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n\t    );\n\t\n\t    defineColor(\n\t      'blue',\n\t      [179, 257],\n\t      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n\t    );\n\t\n\t    defineColor(\n\t      'purple',\n\t      [258, 282],\n\t      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n\t    );\n\t\n\t    defineColor(\n\t      'pink',\n\t      [283, 334],\n\t      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n\t    );\n\t\n\t  }\n\t\n\t  function HSVtoRGB (hsv) {\n\t\n\t    // this doesn't work for the values of 0 and 360\n\t    // here's the hacky fix\n\t    var h = hsv[0];\n\t    if (h === 0) {h = 1;}\n\t    if (h === 360) {h = 359;}\n\t\n\t    // Rebase the h,s,v values\n\t    h = h/360;\n\t    var s = hsv[1]/100,\n\t        v = hsv[2]/100;\n\t\n\t    var h_i = Math.floor(h*6),\n\t      f = h * 6 - h_i,\n\t      p = v * (1 - s),\n\t      q = v * (1 - f*s),\n\t      t = v * (1 - (1 - f)*s),\n\t      r = 256,\n\t      g = 256,\n\t      b = 256;\n\t\n\t    switch(h_i) {\n\t      case 0: r = v; g = t; b = p;  break;\n\t      case 1: r = q; g = v; b = p;  break;\n\t      case 2: r = p; g = v; b = t;  break;\n\t      case 3: r = p; g = q; b = v;  break;\n\t      case 4: r = t; g = p; b = v;  break;\n\t      case 5: r = v; g = p; b = q;  break;\n\t    }\n\t\n\t    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n\t    return result;\n\t  }\n\t\n\t  function HSVtoHSL (hsv) {\n\t    var h = hsv[0],\n\t      s = hsv[1]/100,\n\t      v = hsv[2]/100,\n\t      k = (2-s)*v;\n\t\n\t    return [\n\t      h,\n\t      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n\t      k/2 * 100\n\t    ];\n\t  }\n\t\n\t  function stringToInteger (string) {\n\t    var total = 0\n\t    for (var i = 0; i !== string.length; i++) {\n\t      if (total >= Number.MAX_SAFE_INTEGER) break;\n\t      total += string.charCodeAt(i)\n\t    }\n\t    return total\n\t  }\n\t\n\t  return randomColor;\n\t}));\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = undefined;\n\t\n\tvar _react = __webpack_require__(6);\n\t\n\tvar _storeShape = __webpack_require__(16);\n\t\n\tvar _storeShape2 = _interopRequireDefault(_storeShape);\n\t\n\tvar _warning = __webpack_require__(17);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar didWarnAboutReceivingStore = false;\n\tfunction warnAboutReceivingStore() {\n\t  if (didWarnAboutReceivingStore) {\n\t    return;\n\t  }\n\t  didWarnAboutReceivingStore = true;\n\t\n\t  (0, _warning2[\"default\"])('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');\n\t}\n\t\n\tvar Provider = function (_Component) {\n\t  _inherits(Provider, _Component);\n\t\n\t  Provider.prototype.getChildContext = function getChildContext() {\n\t    return { store: this.store };\n\t  };\n\t\n\t  function Provider(props, context) {\n\t    _classCallCheck(this, Provider);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\t\n\t    _this.store = props.store;\n\t    return _this;\n\t  }\n\t\n\t  Provider.prototype.render = function render() {\n\t    var children = this.props.children;\n\t\n\t    return _react.Children.only(children);\n\t  };\n\t\n\t  return Provider;\n\t}(_react.Component);\n\t\n\texports[\"default\"] = Provider;\n\t\n\tif (false) {\n\t  Provider.prototype.componentWillReceiveProps = function (nextProps) {\n\t    var store = this.store;\n\t    var nextStore = nextProps.store;\n\t\n\t    if (store !== nextStore) {\n\t      warnAboutReceivingStore();\n\t    }\n\t  };\n\t}\n\t\n\tProvider.propTypes = {\n\t  store: _storeShape2[\"default\"].isRequired,\n\t  children: _react.PropTypes.element.isRequired\n\t};\n\tProvider.childContextTypes = {\n\t  store: _storeShape2[\"default\"].isRequired\n\t};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = connect;\n\t\n\tvar _react = __webpack_require__(6);\n\t\n\tvar _storeShape = __webpack_require__(16);\n\t\n\tvar _storeShape2 = _interopRequireDefault(_storeShape);\n\t\n\tvar _shallowEqual = __webpack_require__(47);\n\t\n\tvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\t\n\tvar _wrapActionCreators = __webpack_require__(48);\n\t\n\tvar _wrapActionCreators2 = _interopRequireDefault(_wrapActionCreators);\n\t\n\tvar _warning = __webpack_require__(17);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tvar _isPlainObject = __webpack_require__(5);\n\t\n\tvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\t\n\tvar _hoistNonReactStatics = __webpack_require__(36);\n\t\n\tvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\t\n\tvar _invariant = __webpack_require__(37);\n\t\n\tvar _invariant2 = _interopRequireDefault(_invariant);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar defaultMapStateToProps = function defaultMapStateToProps(state) {\n\t  return {};\n\t}; // eslint-disable-line no-unused-vars\n\tvar defaultMapDispatchToProps = function defaultMapDispatchToProps(dispatch) {\n\t  return { dispatch: dispatch };\n\t};\n\tvar defaultMergeProps = function defaultMergeProps(stateProps, dispatchProps, parentProps) {\n\t  return _extends({}, parentProps, stateProps, dispatchProps);\n\t};\n\t\n\tfunction getDisplayName(WrappedComponent) {\n\t  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n\t}\n\t\n\tvar errorObject = { value: null };\n\tfunction tryCatch(fn, ctx) {\n\t  try {\n\t    return fn.apply(ctx);\n\t  } catch (e) {\n\t    errorObject.value = e;\n\t    return errorObject;\n\t  }\n\t}\n\t\n\t// Helps track hot reloading.\n\tvar nextVersion = 0;\n\t\n\tfunction connect(mapStateToProps, mapDispatchToProps, mergeProps) {\n\t  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t  var shouldSubscribe = Boolean(mapStateToProps);\n\t  var mapState = mapStateToProps || defaultMapStateToProps;\n\t\n\t  var mapDispatch = undefined;\n\t  if (typeof mapDispatchToProps === 'function') {\n\t    mapDispatch = mapDispatchToProps;\n\t  } else if (!mapDispatchToProps) {\n\t    mapDispatch = defaultMapDispatchToProps;\n\t  } else {\n\t    mapDispatch = (0, _wrapActionCreators2[\"default\"])(mapDispatchToProps);\n\t  }\n\t\n\t  var finalMergeProps = mergeProps || defaultMergeProps;\n\t  var _options$pure = options.pure;\n\t  var pure = _options$pure === undefined ? true : _options$pure;\n\t  var _options$withRef = options.withRef;\n\t  var withRef = _options$withRef === undefined ? false : _options$withRef;\n\t\n\t  var checkMergedEquals = pure && finalMergeProps !== defaultMergeProps;\n\t\n\t  // Helps track hot reloading.\n\t  var version = nextVersion++;\n\t\n\t  return function wrapWithConnect(WrappedComponent) {\n\t    var connectDisplayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';\n\t\n\t    function checkStateShape(props, methodName) {\n\t      if (!(0, _isPlainObject2[\"default\"])(props)) {\n\t        (0, _warning2[\"default\"])(methodName + '() in ' + connectDisplayName + ' must return a plain object. ' + ('Instead received ' + props + '.'));\n\t      }\n\t    }\n\t\n\t    function computeMergedProps(stateProps, dispatchProps, parentProps) {\n\t      var mergedProps = finalMergeProps(stateProps, dispatchProps, parentProps);\n\t      if (false) {\n\t        checkStateShape(mergedProps, 'mergeProps');\n\t      }\n\t      return mergedProps;\n\t    }\n\t\n\t    var Connect = function (_Component) {\n\t      _inherits(Connect, _Component);\n\t\n\t      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {\n\t        return !pure || this.haveOwnPropsChanged || this.hasStoreStateChanged;\n\t      };\n\t\n\t      function Connect(props, context) {\n\t        _classCallCheck(this, Connect);\n\t\n\t        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\t\n\t        _this.version = version;\n\t        _this.store = props.store || context.store;\n\t\n\t        (0, _invariant2[\"default\"])(_this.store, 'Could not find \"store\" in either the context or ' + ('props of \"' + connectDisplayName + '\". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass \"store\" as a prop to \"' + connectDisplayName + '\".'));\n\t\n\t        var storeState = _this.store.getState();\n\t        _this.state = { storeState: storeState };\n\t        _this.clearCache();\n\t        return _this;\n\t      }\n\t\n\t      Connect.prototype.computeStateProps = function computeStateProps(store, props) {\n\t        if (!this.finalMapStateToProps) {\n\t          return this.configureFinalMapState(store, props);\n\t        }\n\t\n\t        var state = store.getState();\n\t        var stateProps = this.doStatePropsDependOnOwnProps ? this.finalMapStateToProps(state, props) : this.finalMapStateToProps(state);\n\t\n\t        if (false) {\n\t          checkStateShape(stateProps, 'mapStateToProps');\n\t        }\n\t        return stateProps;\n\t      };\n\t\n\t      Connect.prototype.configureFinalMapState = function configureFinalMapState(store, props) {\n\t        var mappedState = mapState(store.getState(), props);\n\t        var isFactory = typeof mappedState === 'function';\n\t\n\t        this.finalMapStateToProps = isFactory ? mappedState : mapState;\n\t        this.doStatePropsDependOnOwnProps = this.finalMapStateToProps.length !== 1;\n\t\n\t        if (isFactory) {\n\t          return this.computeStateProps(store, props);\n\t        }\n\t\n\t        if (false) {\n\t          checkStateShape(mappedState, 'mapStateToProps');\n\t        }\n\t        return mappedState;\n\t      };\n\t\n\t      Connect.prototype.computeDispatchProps = function computeDispatchProps(store, props) {\n\t        if (!this.finalMapDispatchToProps) {\n\t          return this.configureFinalMapDispatch(store, props);\n\t        }\n\t\n\t        var dispatch = store.dispatch;\n\t\n\t        var dispatchProps = this.doDispatchPropsDependOnOwnProps ? this.finalMapDispatchToProps(dispatch, props) : this.finalMapDispatchToProps(dispatch);\n\t\n\t        if (false) {\n\t          checkStateShape(dispatchProps, 'mapDispatchToProps');\n\t        }\n\t        return dispatchProps;\n\t      };\n\t\n\t      Connect.prototype.configureFinalMapDispatch = function configureFinalMapDispatch(store, props) {\n\t        var mappedDispatch = mapDispatch(store.dispatch, props);\n\t        var isFactory = typeof mappedDispatch === 'function';\n\t\n\t        this.finalMapDispatchToProps = isFactory ? mappedDispatch : mapDispatch;\n\t        this.doDispatchPropsDependOnOwnProps = this.finalMapDispatchToProps.length !== 1;\n\t\n\t        if (isFactory) {\n\t          return this.computeDispatchProps(store, props);\n\t        }\n\t\n\t        if (false) {\n\t          checkStateShape(mappedDispatch, 'mapDispatchToProps');\n\t        }\n\t        return mappedDispatch;\n\t      };\n\t\n\t      Connect.prototype.updateStatePropsIfNeeded = function updateStatePropsIfNeeded() {\n\t        var nextStateProps = this.computeStateProps(this.store, this.props);\n\t        if (this.stateProps && (0, _shallowEqual2[\"default\"])(nextStateProps, this.stateProps)) {\n\t          return false;\n\t        }\n\t\n\t        this.stateProps = nextStateProps;\n\t        return true;\n\t      };\n\t\n\t      Connect.prototype.updateDispatchPropsIfNeeded = function updateDispatchPropsIfNeeded() {\n\t        var nextDispatchProps = this.computeDispatchProps(this.store, this.props);\n\t        if (this.dispatchProps && (0, _shallowEqual2[\"default\"])(nextDispatchProps, this.dispatchProps)) {\n\t          return false;\n\t        }\n\t\n\t        this.dispatchProps = nextDispatchProps;\n\t        return true;\n\t      };\n\t\n\t      Connect.prototype.updateMergedPropsIfNeeded = function updateMergedPropsIfNeeded() {\n\t        var nextMergedProps = computeMergedProps(this.stateProps, this.dispatchProps, this.props);\n\t        if (this.mergedProps && checkMergedEquals && (0, _shallowEqual2[\"default\"])(nextMergedProps, this.mergedProps)) {\n\t          return false;\n\t        }\n\t\n\t        this.mergedProps = nextMergedProps;\n\t        return true;\n\t      };\n\t\n\t      Connect.prototype.isSubscribed = function isSubscribed() {\n\t        return typeof this.unsubscribe === 'function';\n\t      };\n\t\n\t      Connect.prototype.trySubscribe = function trySubscribe() {\n\t        if (shouldSubscribe && !this.unsubscribe) {\n\t          this.unsubscribe = this.store.subscribe(this.handleChange.bind(this));\n\t          this.handleChange();\n\t        }\n\t      };\n\t\n\t      Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {\n\t        if (this.unsubscribe) {\n\t          this.unsubscribe();\n\t          this.unsubscribe = null;\n\t        }\n\t      };\n\t\n\t      Connect.prototype.componentDidMount = function componentDidMount() {\n\t        this.trySubscribe();\n\t      };\n\t\n\t      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n\t        if (!pure || !(0, _shallowEqual2[\"default\"])(nextProps, this.props)) {\n\t          this.haveOwnPropsChanged = true;\n\t        }\n\t      };\n\t\n\t      Connect.prototype.componentWillUnmount = function componentWillUnmount() {\n\t        this.tryUnsubscribe();\n\t        this.clearCache();\n\t      };\n\t\n\t      Connect.prototype.clearCache = function clearCache() {\n\t        this.dispatchProps = null;\n\t        this.stateProps = null;\n\t        this.mergedProps = null;\n\t        this.haveOwnPropsChanged = true;\n\t        this.hasStoreStateChanged = true;\n\t        this.haveStatePropsBeenPrecalculated = false;\n\t        this.statePropsPrecalculationError = null;\n\t        this.renderedElement = null;\n\t        this.finalMapDispatchToProps = null;\n\t        this.finalMapStateToProps = null;\n\t      };\n\t\n\t      Connect.prototype.handleChange = function handleChange() {\n\t        if (!this.unsubscribe) {\n\t          return;\n\t        }\n\t\n\t        var storeState = this.store.getState();\n\t        var prevStoreState = this.state.storeState;\n\t        if (pure && prevStoreState === storeState) {\n\t          return;\n\t        }\n\t\n\t        if (pure && !this.doStatePropsDependOnOwnProps) {\n\t          var haveStatePropsChanged = tryCatch(this.updateStatePropsIfNeeded, this);\n\t          if (!haveStatePropsChanged) {\n\t            return;\n\t          }\n\t          if (haveStatePropsChanged === errorObject) {\n\t            this.statePropsPrecalculationError = errorObject.value;\n\t          }\n\t          this.haveStatePropsBeenPrecalculated = true;\n\t        }\n\t\n\t        this.hasStoreStateChanged = true;\n\t        this.setState({ storeState: storeState });\n\t      };\n\t\n\t      Connect.prototype.getWrappedInstance = function getWrappedInstance() {\n\t        (0, _invariant2[\"default\"])(withRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the fourth argument of the connect() call.');\n\t\n\t        return this.refs.wrappedInstance;\n\t      };\n\t\n\t      Connect.prototype.render = function render() {\n\t        var haveOwnPropsChanged = this.haveOwnPropsChanged;\n\t        var hasStoreStateChanged = this.hasStoreStateChanged;\n\t        var haveStatePropsBeenPrecalculated = this.haveStatePropsBeenPrecalculated;\n\t        var statePropsPrecalculationError = this.statePropsPrecalculationError;\n\t        var renderedElement = this.renderedElement;\n\t\n\t        this.haveOwnPropsChanged = false;\n\t        this.hasStoreStateChanged = false;\n\t        this.haveStatePropsBeenPrecalculated = false;\n\t        this.statePropsPrecalculationError = null;\n\t\n\t        if (statePropsPrecalculationError) {\n\t          throw statePropsPrecalculationError;\n\t        }\n\t\n\t        var shouldUpdateStateProps = true;\n\t        var shouldUpdateDispatchProps = true;\n\t        if (pure && renderedElement) {\n\t          shouldUpdateStateProps = hasStoreStateChanged || haveOwnPropsChanged && this.doStatePropsDependOnOwnProps;\n\t          shouldUpdateDispatchProps = haveOwnPropsChanged && this.doDispatchPropsDependOnOwnProps;\n\t        }\n\t\n\t        var haveStatePropsChanged = false;\n\t        var haveDispatchPropsChanged = false;\n\t        if (haveStatePropsBeenPrecalculated) {\n\t          haveStatePropsChanged = true;\n\t        } else if (shouldUpdateStateProps) {\n\t          haveStatePropsChanged = this.updateStatePropsIfNeeded();\n\t        }\n\t        if (shouldUpdateDispatchProps) {\n\t          haveDispatchPropsChanged = this.updateDispatchPropsIfNeeded();\n\t        }\n\t\n\t        var haveMergedPropsChanged = true;\n\t        if (haveStatePropsChanged || haveDispatchPropsChanged || haveOwnPropsChanged) {\n\t          haveMergedPropsChanged = this.updateMergedPropsIfNeeded();\n\t        } else {\n\t          haveMergedPropsChanged = false;\n\t        }\n\t\n\t        if (!haveMergedPropsChanged && renderedElement) {\n\t          return renderedElement;\n\t        }\n\t\n\t        if (withRef) {\n\t          this.renderedElement = (0, _react.createElement)(WrappedComponent, _extends({}, this.mergedProps, {\n\t            ref: 'wrappedInstance'\n\t          }));\n\t        } else {\n\t          this.renderedElement = (0, _react.createElement)(WrappedComponent, this.mergedProps);\n\t        }\n\t\n\t        return this.renderedElement;\n\t      };\n\t\n\t      return Connect;\n\t    }(_react.Component);\n\t\n\t    Connect.displayName = connectDisplayName;\n\t    Connect.WrappedComponent = WrappedComponent;\n\t    Connect.contextTypes = {\n\t      store: _storeShape2[\"default\"]\n\t    };\n\t    Connect.propTypes = {\n\t      store: _storeShape2[\"default\"]\n\t    };\n\t\n\t    if (false) {\n\t      Connect.prototype.componentWillUpdate = function componentWillUpdate() {\n\t        if (this.version === version) {\n\t          return;\n\t        }\n\t\n\t        // We are hot reloading!\n\t        this.version = version;\n\t        this.trySubscribe();\n\t        this.clearCache();\n\t      };\n\t    }\n\t\n\t    return (0, _hoistNonReactStatics2[\"default\"])(Connect, WrappedComponent);\n\t  };\n\t}\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = shallowEqual;\n\tfunction shallowEqual(objA, objB) {\n\t  if (objA === objB) {\n\t    return true;\n\t  }\n\t\n\t  var keysA = Object.keys(objA);\n\t  var keysB = Object.keys(objB);\n\t\n\t  if (keysA.length !== keysB.length) {\n\t    return false;\n\t  }\n\t\n\t  // Test for A's keys different from B.\n\t  var hasOwn = Object.prototype.hasOwnProperty;\n\t  for (var i = 0; i < keysA.length; i++) {\n\t    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = wrapActionCreators;\n\t\n\tvar _redux = __webpack_require__(9);\n\t\n\tfunction wrapActionCreators(actionCreators) {\n\t  return function (dispatch) {\n\t    return (0, _redux.bindActionCreators)(actionCreators, dispatch);\n\t  };\n\t}\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports[\"default\"] = applyMiddleware;\n\t\n\tvar _compose = __webpack_require__(18);\n\t\n\tvar _compose2 = _interopRequireDefault(_compose);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t/**\n\t * Creates a store enhancer that applies middleware to the dispatch method\n\t * of the Redux store. This is handy for a variety of tasks, such as expressing\n\t * asynchronous actions in a concise manner, or logging every action payload.\n\t *\n\t * See `redux-thunk` package as an example of the Redux middleware.\n\t *\n\t * Because middleware is potentially asynchronous, this should be the first\n\t * store enhancer in the composition chain.\n\t *\n\t * Note that each middleware will be given the `dispatch` and `getState` functions\n\t * as named arguments.\n\t *\n\t * @param {...Function} middlewares The middleware chain to be applied.\n\t * @returns {Function} A store enhancer applying the middleware.\n\t */\n\tfunction applyMiddleware() {\n\t  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n\t    middlewares[_key] = arguments[_key];\n\t  }\n\t\n\t  return function (createStore) {\n\t    return function (reducer, initialState, enhancer) {\n\t      var store = createStore(reducer, initialState, enhancer);\n\t      var _dispatch = store.dispatch;\n\t      var chain = [];\n\t\n\t      var middlewareAPI = {\n\t        getState: store.getState,\n\t        dispatch: function dispatch(action) {\n\t          return _dispatch(action);\n\t        }\n\t      };\n\t      chain = middlewares.map(function (middleware) {\n\t        return middleware(middlewareAPI);\n\t      });\n\t      _dispatch = _compose2[\"default\"].apply(undefined, chain)(store.dispatch);\n\t\n\t      return _extends({}, store, {\n\t        dispatch: _dispatch\n\t      });\n\t    };\n\t  };\n\t}\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = bindActionCreators;\n\tfunction bindActionCreator(actionCreator, dispatch) {\n\t  return function () {\n\t    return dispatch(actionCreator.apply(undefined, arguments));\n\t  };\n\t}\n\t\n\t/**\n\t * Turns an object whose values are action creators, into an object with the\n\t * same keys, but with every function wrapped into a `dispatch` call so they\n\t * may be invoked directly. This is just a convenience method, as you can call\n\t * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n\t *\n\t * For convenience, you can also pass a single function as the first argument,\n\t * and get a function in return.\n\t *\n\t * @param {Function|Object} actionCreators An object whose values are action\n\t * creator functions. One handy way to obtain it is to use ES6 `import * as`\n\t * syntax. You may also pass a single function.\n\t *\n\t * @param {Function} dispatch The `dispatch` function available on your Redux\n\t * store.\n\t *\n\t * @returns {Function|Object} The object mimicking the original object, but with\n\t * every action creator wrapped into the `dispatch` call. If you passed a\n\t * function as `actionCreators`, the return value will also be a single\n\t * function.\n\t */\n\tfunction bindActionCreators(actionCreators, dispatch) {\n\t  if (typeof actionCreators === 'function') {\n\t    return bindActionCreator(actionCreators, dispatch);\n\t  }\n\t\n\t  if (typeof actionCreators !== 'object' || actionCreators === null) {\n\t    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n\t  }\n\t\n\t  var keys = Object.keys(actionCreators);\n\t  var boundActionCreators = {};\n\t  for (var i = 0; i < keys.length; i++) {\n\t    var key = keys[i];\n\t    var actionCreator = actionCreators[key];\n\t    if (typeof actionCreator === 'function') {\n\t      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n\t    }\n\t  }\n\t  return boundActionCreators;\n\t}\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = combineReducers;\n\t\n\tvar _createStore = __webpack_require__(19);\n\t\n\tvar _isPlainObject = __webpack_require__(5);\n\t\n\tvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\t\n\tvar _warning = __webpack_require__(20);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction getUndefinedStateErrorMessage(key, action) {\n\t  var actionType = action && action.type;\n\t  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\t\n\t  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';\n\t}\n\t\n\tfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n\t  var reducerKeys = Object.keys(reducers);\n\t  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\t\n\t  if (reducerKeys.length === 0) {\n\t    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n\t  }\n\t\n\t  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n\t    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n\t  }\n\t\n\t  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n\t    return !reducers.hasOwnProperty(key);\n\t  });\n\t\n\t  if (unexpectedKeys.length > 0) {\n\t    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n\t  }\n\t}\n\t\n\tfunction assertReducerSanity(reducers) {\n\t  Object.keys(reducers).forEach(function (key) {\n\t    var reducer = reducers[key];\n\t    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\t\n\t    if (typeof initialState === 'undefined') {\n\t      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n\t    }\n\t\n\t    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n\t    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n\t      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Turns an object whose values are different reducer functions, into a single\n\t * reducer function. It will call every child reducer, and gather their results\n\t * into a single state object, whose keys correspond to the keys of the passed\n\t * reducer functions.\n\t *\n\t * @param {Object} reducers An object whose values correspond to different\n\t * reducer functions that need to be combined into one. One handy way to obtain\n\t * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n\t * undefined for any action. Instead, they should return their initial state\n\t * if the state passed to them was undefined, and the current state for any\n\t * unrecognized action.\n\t *\n\t * @returns {Function} A reducer function that invokes every reducer inside the\n\t * passed object, and builds a state object with the same shape.\n\t */\n\tfunction combineReducers(reducers) {\n\t  var reducerKeys = Object.keys(reducers);\n\t  var finalReducers = {};\n\t  for (var i = 0; i < reducerKeys.length; i++) {\n\t    var key = reducerKeys[i];\n\t    if (typeof reducers[key] === 'function') {\n\t      finalReducers[key] = reducers[key];\n\t    }\n\t  }\n\t  var finalReducerKeys = Object.keys(finalReducers);\n\t\n\t  var sanityError;\n\t  try {\n\t    assertReducerSanity(finalReducers);\n\t  } catch (e) {\n\t    sanityError = e;\n\t  }\n\t\n\t  return function combination() {\n\t    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t    var action = arguments[1];\n\t\n\t    if (sanityError) {\n\t      throw sanityError;\n\t    }\n\t\n\t    if (false) {\n\t      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n\t      if (warningMessage) {\n\t        (0, _warning2[\"default\"])(warningMessage);\n\t      }\n\t    }\n\t\n\t    var hasChanged = false;\n\t    var nextState = {};\n\t    for (var i = 0; i < finalReducerKeys.length; i++) {\n\t      var key = finalReducerKeys[i];\n\t      var reducer = finalReducers[key];\n\t      var previousStateForKey = state[key];\n\t      var nextStateForKey = reducer(previousStateForKey, action);\n\t      if (typeof nextStateForKey === 'undefined') {\n\t        var errorMessage = getUndefinedStateErrorMessage(key, action);\n\t        throw new Error(errorMessage);\n\t      }\n\t      nextState[key] = nextStateForKey;\n\t      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n\t    }\n\t    return hasChanged ? nextState : state;\n\t  };\n\t}\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/* global window */\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(53)(global || window || this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 53 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function symbolObservablePonyfill(root) {\n\t\tvar result;\n\t\tvar Symbol = root.Symbol;\n\t\n\t\tif (typeof Symbol === 'function') {\n\t\t\tif (Symbol.observable) {\n\t\t\t\tresult = Symbol.observable;\n\t\t\t} else {\n\t\t\t\tresult = Symbol('observable');\n\t\t\t\tSymbol.observable = result;\n\t\t\t}\n\t\t} else {\n\t\t\tresult = '@@observable';\n\t\t}\n\t\n\t\treturn result;\n\t};\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0d1d76869ac9e20d5f7e\n **/","import { h, render } from 'preact';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/app';\nimport './style';\nimport Game from './components/game';\n\nrender((\n  <div id=\"outer\">\n    <Provider store={store}>\n      <Game />\n    </Provider>\n  </div>\n), document.body);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '72' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\t\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\t\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n\r\n// polyfills\r\n\r\nif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\r\n\t// Missing in Android stock browser.\r\n\r\n\t( function () {\r\n\r\n\t\tvar lastTime = 0;\r\n\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\r\n\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\tvar id = self.setTimeout( function () {\r\n\r\n\t\t\t\t\tcallback( currTime + timeToCall );\r\n\r\n\t\t\t\t}, timeToCall );\r\n\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\treturn id;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\r\n\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\r\n\t\t\t\tself.clearTimeout( id );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}() );\r\n\r\n}\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb ( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tvar parseAlpha = function ( strAlpha ) {\r\n\r\n\t\t\tvar alpha = parseFloat( strAlpha );\r\n\r\n\t\t\tif ( alpha < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn alpha;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n};\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\t\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction descSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset renderDepth ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar data = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\tdata.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\r\n\t\tdata.matrix = this.matrix.toArray();\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tdata.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {};\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = data;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.array.length / this.data.stride;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddIndex: function ( index ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\r\n\t},\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tget drawcalls() {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\tget offsets() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\r\n\t},\r\n\r\n\tclearDrawCalls: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.color.copy( source.color );\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\r\n\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.groundColor = this.groundColor.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.exponent = source.exponent;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n}\r\n\r\nTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.angle = this.angle;\r\n\tdata.object.exponent = this.exponent;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar imageLoader;\r\n\r\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\r\n\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\r\n\t\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset ) {\r\n\r\n\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhere[ name ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// defaults\r\n\r\n\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\tvar mpars = {};\r\n\r\n\t\t\t// parameters from model file\r\n\r\n\t\t\tif ( m.shading ) {\r\n\r\n\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\t\tmpars.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\r\n\t\t\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// modifiers\r\n\r\n\t\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// textures\r\n\r\n\t\t\tif ( texturePath ) {\r\n\r\n\t\t\t\tif ( m.mapDiffuse ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapLight ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAO ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapBump ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapNormal ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapSpecular ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAlpha ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\t\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\t\tgeometry.animation = json.animation;\r\n\t\t\tgeometry.animations = json.animations;\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\r\n\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\t\tmaterial.uuid = json.uuid;\r\n\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MeshFaceMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TextGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\t// Deprecated\r\n\r\n\tget wrapAround () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tset wrapAround ( boolean ) {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tget wrapRGB () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\treturn new THREE.Color();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\t\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.metal = source.metal;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.derivatives = false; // set to use derivatives\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.attributes = source.attributes;\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.derivatives = source.derivatives;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.attributes = this.attributes;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\r\n\tthis.images = source.images;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar a, b, c;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tvar uv;\r\n\r\n\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\r\n\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tuv: uv,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.skin = source.skin;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\t\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\tinfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tinfluences[ this.currentKeyframe ] = mix;\r\n\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\tif ( b > - 1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\r\n\tthis.duration = source.duration;\r\n\tthis.mirroredLoop = source.mirroredLoop;\r\n\tthis.time = source.time;\r\n\r\n\tthis.lastKeyframe = source.lastKeyframe;\r\n\tthis.currentKeyframe = source.currentKeyframe;\r\n\r\n\tthis.direction = source.direction;\r\n\tthis.directionBackwards = source.directionBackwards;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = -1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = -1;\r\n\r\n\tvar opaqueImmediateObjects = [];\r\n\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\tvar transparentImmediateObjects = [];\r\n\tvar transparentImmediateObjectsLastIndex = -1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value !== undefined ) pixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t};\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( numericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group === undefined ) {\r\n\r\n\t\t\tvar count;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tcount = index.count;\r\n\r\n\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tcount = position.data.array.length / 3;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar drawRange = geometry.drawRange;\r\n\r\n\t\t\tgroup = {\r\n\t\t\t\tstart: drawRange.start,\r\n\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = -1;\r\n\t\ttransparentObjectsLastIndex = -1;\r\n\r\n\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushImmediateRenderItem( object ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( object.material.transparent ) {\r\n\r\n\t\t\tarray = transparentImmediateObjects;\r\n\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing position or grow the array\r\n\r\n\t\tif ( index < array.length ) {\r\n\r\n\t\t\tarray[ index ] = object;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( object );\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\tlights.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tsprites.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\tlensFlares.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\tpushImmediateRenderItem( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material = overrideMaterial;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar object = renderList[ i ];\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\r\n\t\t\tsetMaterial( material );\r\n\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn capabilities.vertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsInstancedArrays = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tshadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tshadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.cullFace;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tshadowMap.cullFace = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapDebug: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.debug;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\tshadowMap.debug = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\r\n\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\r\n\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_state.setDepthTest( true );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\tvar shadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\tvar depthMaterial;\r\n\r\n\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\r\n\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdepthMaterial = _depthMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tdepthMaterial.visible = material.visible;\r\n\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\treturn depthMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\tgl.clearDepth( 1 );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t};\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\n\r\nTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t// determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t// add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub( pt1 );\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.extractAllSpacedPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3;\r\n\r\n\t\t\tif ( intPoint === 0 ) {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint ];\r\n\t\t\tp2 = points[ intPoint + 1 ];\r\n\r\n\t\t\tif ( intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\r\n\t},\r\n\tget: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\r\n\t},\r\n\tremove: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\tobj = this.hierarchy[ h ];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar frameTime = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame !== this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\r\n\t\tinfluences[ frame ] = mix;\r\n\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.BoxGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.BoxGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.depth,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.depthSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push( center );\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\nTHREE.CircleGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 3 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i );\r\n\t\tindices.push( i + 1 );\r\n\t\tindices.push( 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\nTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\nTHREE.CylinderGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CylinderGeometry(\r\n\t\tthis.parameters.radiusTop,\r\n\t\tthis.parameters.radiusBottom,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.openEnded,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\nTHREE.PlaneGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\nTHREE.RingGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.RingGeometry(\r\n\t\tthis.parameters.innerRadius,\r\n\t\tthis.parameters.outerRadius,\r\n\t\tthis.parameters.thetaSegments,\r\n\t\tthis.parameters.phiSegments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\nTHREE.SphereGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\nTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\nTHREE.TorusGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.arc\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\nTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.p,\r\n\t\tthis.parameters.q,\r\n\t\tthis.parameters.heightScale\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\nTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\tthis.parameters.vertices,\r\n\t\tthis.parameters.indices,\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\treturn geometry.copy( this );\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\nTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\nTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\nTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\nTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\r\n\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\tvar count = drawcall.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tif ( headLength < length ) {\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\t}\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tif ( headLength < length ){\r\n\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t}\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.empty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/three.js\n ** module id = 1\n ** module chunks = 0\n **/","/** Virtual DOM Node */\nexport default function VNode(nodeName, attributes, children) {\n\t/** @type {string|function} */\n\tthis.nodeName = nodeName;\n\n\t/** @type {object<string>|undefined} */\n\tthis.attributes = attributes;\n\n\t/** @type {array<VNode>|undefined} */\n\tthis.children = children;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/vnode.js\n **/","import { NON_DIMENSION_PROPS } from './constants';\n\n\n/** Copy own-properties from `props` onto `obj`.\n *\t@returns obj\n *\t@private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) if (hasOwnProperty.call(props, i)) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\n\n/** Fast clone. Note: does not filter out non-own properties. */\nexport function clone(obj) {\n\tlet out = {};\n\t/*eslint guard-for-in:0*/\n\tfor (let i in obj) out[i] = obj[i];\n\treturn out;\n}\n\n\n/** Create a caching wrapper for the given function.\n *\t@private\n */\nexport function memoize(fn, mem) {\n\tmem = mem || {};\n\treturn k => hasOwnProperty.call(mem, k) ? mem[k] : (mem[k] = fn(k));\n}\n\n\n/** Get a deep property value from the given object, expressed in dot-notation.\n *\t@private\n */\nexport function delve(obj, key) {\n\tfor (let p=key.split('.'), i=0; i<p.length && obj; i++) {\n\t\tobj = obj[p[i]];\n\t}\n\treturn obj;\n}\n\n\n/** Convert an Array-like object to an Array\n *\t@private\n */\nexport function toArray(obj) {\n\tlet arr = [],\n\t\ti = obj.length;\n\twhile (i--) arr[i] = obj[i];\n\treturn arr;\n}\n\n\n/** @private is the given object a Function? */\nexport const isFunction = obj => 'function'===typeof obj;\n\n\n/** @private is the given object a String? */\nexport const isString = obj => 'string'===typeof obj;\n\n\n/** @private Safe reference to builtin hasOwnProperty */\nexport const hasOwnProperty = {}.hasOwnProperty;\n\n\n/** Check if a value is `null` or `undefined`.\n *\t@private\n */\nexport const empty = x => x==null;\n\n\n/** Check if a value is `null`, `undefined`, or explicitly `false`. */\nexport const falsey = value => value===false || value==null;\n\n\n/** Convert a hashmap of styles to CSSText\n *\t@private\n */\nexport function styleObjToCss(s) {\n\tlet str = '';\n\tfor (let prop in s) {\n\t\tlet val = s[prop];\n\t\tif (!empty(val)) {\n\t\t\tif (str) str += ' ';\n\t\t\tstr += jsToCss(prop);\n\t\t\tstr += ': ';\n\t\t\tstr += val;\n\t\t\tif (typeof val==='number' && !NON_DIMENSION_PROPS[prop]) {\n\t\t\t\tstr += 'px';\n\t\t\t}\n\t\t\tstr += ';';\n\t\t}\n\t}\n\treturn str;\n}\n\n\n\n/** Convert a hashmap of CSS classes to a space-delimited className string\n *\t@private\n */\nexport function hashToClassName(c) {\n\tlet str = '';\n\tfor (let prop in c) {\n\t\tif (c[prop]) {\n\t\t\tif (str) str += ' ';\n\t\t\tstr += prop;\n\t\t}\n\t}\n\treturn str;\n}\n\n\n\n/** Convert a JavaScript camel-case CSS property name to a CSS property name\n *\t@private\n *\t@function\n */\nexport const jsToCss = memoize( s => s.replace(/([A-Z])/g,'-$1').toLowerCase() );\n\n\n/** Just a memoized String.prototype.toLowerCase */\nexport const toLowerCase = memoize( s => s.toLowerCase() );\n\n\n// For animations, rAF is vastly superior. However, it scores poorly on benchmarks :(\n// export const setImmediate = typeof requestAnimationFrame==='function' ? requestAnimationFrame : setTimeout;\n\nlet ch;\ntry { ch = new MessageChannel(); } catch (e) {}\n\n/** Call a function asynchronously, as soon as possible.\n *\t@param {Function} callback\n */\nexport const setImmediate = ch ? ( f => {\n\tch.port1.onmessage = f;\n\tch.port2.postMessage('');\n}) : setTimeout;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/util.js\n **/","import { isFunction, isString, styleObjToCss, hashToClassName } from './util';\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n\t *\t@name syncComponentUpdates\n\t *\t@type Boolean\n\t *\t@default true\n\t */\n\t//syncComponentUpdates: true,\n\n\t/** Processes all created VNodes.\n\t *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n\t */\n\tvnode(n) {\n\t\tlet attrs = n.attributes;\n\t\tif (!attrs || isFunction(n.nodeName)) return;\n\n\t\t// normalize className to class.\n\t\tlet p = attrs.className;\n\t\tif (p) {\n\t\t\tattrs['class'] = p;\n\t\t\tdelete attrs.className;\n\t\t}\n\n\t\tif (attrs['class']) normalize(attrs, 'class', hashToClassName);\n\t\tif (attrs.style) normalize(attrs, 'style', styleObjToCss);\n\t}\n};\n\n\nfunction normalize(obj, prop, fn) {\n\tlet v = obj[prop];\n\tif (v && !isString(v)) {\n\t\tobj[prop] = fn(v);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/options.js\n **/","import options from './options';\n\n\n/** Invoke a hook on the `options` export. */\nexport function optionsHook(name, a, b) {\n\treturn hook(options, name, a, b);\n}\n\n\n/** Invoke a \"hook\" method with arguments if it exists.\n *\t@private\n */\nexport function hook(obj, name, a, b, c) {\n\tif (obj[name]) return obj[name](a, b, c);\n}\n\n\n/** Invoke hook() on a component and child components (recursively)\n *\t@private\n */\nexport function deepHook(obj, type) {\n\tdo {\n\t\thook(obj, type);\n\t} while ((obj=obj._component));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/hooks.js\n **/","import VNode from './vnode';\nimport { optionsHook } from './hooks';\nimport { falsey } from './util';\n\n\nconst SHARED_TEMP_ARRAY = [];\n\n\n/** JSX/hyperscript reviver\n *\t@see http://jasonformat.com/wtf-is-jsx\n *\t@public\n *  @example\n *  /** @jsx h *\\/\n *  import { render, h } from 'preact';\n *  render(<span>foo</span>, document.body);\n */\nexport default function h(nodeName, attributes) {\n\tlet len = arguments.length,\n\t\tattributeChildren = attributes && attributes.children,\n\t\tchildren, arr, lastSimple;\n\n\tif (attributeChildren) {\n\t\tdelete attributes.children;\n\n\t\t// if (len<3) {\n\t\t// \tunfilteredChildren = attributeChildren;\n\t\t// \tstart = 0;\n\t\t// }\n\t\tif (len<3) return h(nodeName, attributes, attributeChildren);\n\t}\n\n\tfor (let i=2; i<len; i++) {\n\t\tlet p = arguments[i];\n\t\tif (falsey(p)) continue;\n\t\tif (!children) children = [];\n\t\tif (p.join) {\n\t\t\tarr = p;\n\t\t}\n\t\telse {\n\t\t\tarr = SHARED_TEMP_ARRAY;\n\t\t\tarr[0] = p;\n\t\t}\n\t\tfor (let j=0; j<arr.length; j++) {\n\t\t\tlet child = arr[j],\n\t\t\t\tsimple = !falsey(child) && !(child instanceof VNode);\n\t\t\tif (simple) child = String(child);\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (!falsey(child)) {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode(nodeName, attributes || undefined, children || undefined);\n\toptionsHook('vnode', p);\n\treturn p;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/h.js\n **/","import { empty, isString, isFunction, delve } from './util';\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n *\t@private\n */\nexport function createLinkedState(component, key, eventPath) {\n\tlet path = key.split('.'),\n\t\tp0 = path[0],\n\t\tlen = path.length;\n\treturn function(e) {\n\t\tlet t = this,\n\t\t\ts = component.state,\n\t\t\tobj = s,\n\t\t\tv, i;\n\t\tif (isString(eventPath)) {\n\t\t\tv = delve(e, eventPath);\n\t\t\tif (empty(v) && (t=t._component)) {\n\t\t\t\tv = delve(t, eventPath);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tv = (t.nodeName+t.type).match(/^input(check|rad)/i) ? t.checked : t.value;\n\t\t}\n\t\tif (isFunction(v)) v = v.call(t);\n\t\tif (len>1) {\n\t\t\tfor (i=0; i<len-1; i++) {\n\t\t\t\tobj = obj[path[i]] || (obj[path[i]] = {});\n\t\t\t}\n\t\t\tobj[path[i]] = v;\n\t\t\tv = s[p0];\n\t\t}\n\t\tcomponent.setState({ [p0]: v });\n\t};\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/linked-state.js\n **/","import options from './options';\nimport { setImmediate } from './util';\nimport { renderComponent } from './vdom/component';\n\n/** Managed queue of dirty components to be re-rendered */\n\n// items/itemsOffline swap on each rerender() call (just a simple pool technique)\nlet items = [],\n\titemsOffline = [];\n\nexport function enqueueRender(component) {\n\tif (items.push(component)!==1) return;\n\n\t(options.debounceRendering || setImmediate)(rerender);\n}\n\n\nexport function rerender() {\n\tif (!items.length) return;\n\n\tlet currentItems = items,\n\t\tp;\n\n\t// swap online & offline\n\titems = itemsOffline;\n\titemsOffline = currentItems;\n\n\twhile ( (p = currentItems.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/render-queue.js\n **/","import { EMPTY, EMPTY_BASE } from '../constants';\nimport { getNodeProps } from '.';\nimport { isFunction } from '../util';\n\n\n/** Check if a VNode is a reference to a stateless functional component.\n *\tA function component is represented as a VNode whose `nodeName` property is a reference to a function.\n *\tIf that function is not a Component (ie, has no `.render()` method on a prototype), it is considered a stateless functional component.\n *\t@param {VNode} vnode\tA VNode\n *\t@private\n */\nexport function isFunctionalComponent({ nodeName }) {\n\treturn isFunction(nodeName) && !(nodeName.prototype && nodeName.prototype.render);\n}\n\n\n\n/** Construct a resultant VNode from a VNode referencing a stateless functional component.\n *\t@param {VNode} vnode\tA VNode with a `nodeName` property that is a reference to a function.\n *\t@private\n */\nexport function buildFunctionalComponent(vnode, context) {\n\treturn vnode.nodeName(getNodeProps(vnode), context || EMPTY) || EMPTY_BASE;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/vdom/functional-component.js\n **/","import { ATTR_KEY, EMPTY } from '../constants';\nimport { hasOwnProperty, memoize, falsey } from '../util';\nimport { optionsHook } from '../hooks';\n\n\nexport function ensureNodeData(node) {\n\treturn node[ATTR_KEY] || (node[ATTR_KEY] = {});\n}\n\n\nexport function getNodeType(node) {\n\treturn node.nodeType;\n}\n\n\n/** Append multiple children to a Node.\n *\tUses a Document Fragment to batch when appending 2 or more children\n *\t@private\n */\nexport function appendChildren(parent, children) {\n\tlet len = children.length,\n\t\tmany = len>2,\n\t\tinto = many ? document.createDocumentFragment() : parent;\n\tfor (let i=0; i<len; i++) into.appendChild(children[i]);\n\tif (many) parent.appendChild(into);\n}\n\n\n/** Removes a given DOM Node from its parent. */\nexport function removeNode(node) {\n\tlet p = node.parentNode;\n\tif (p) p.removeChild(node);\n}\n\n\n/** Retrieve the value of a rendered attribute\n *\t@private\n */\nexport function getAccessor(node, name, value, cache) {\n\tif (name!=='type' && name!=='style' && name in node) return node[name];\n\tlet attrs = node[ATTR_KEY];\n\tif (cache!==false && attrs && hasOwnProperty.call(attrs, name)) return attrs[name];\n\tif (name==='class') return node.className;\n\tif (name==='style') return node.style.cssText;\n\treturn value;\n}\n\n\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} value\t\tAn attribute value, such as a function to be used as an event handler\n *\t@param {any} previousValue\tThe last value that was set for this name/node pair\n *\t@private\n */\nexport function setAccessor(node, name, value) {\n\tif (name==='class') {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tnode.style.cssText = value || '';\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value && value.__html) node.innerHTML = value.__html;\n\t}\n\telse if (name==='key' || (name in node && name!=='type')) {\n\t\tnode[name] = value;\n\t\tif (falsey(value)) node.removeAttribute(name);\n\t}\n\telse {\n\t\tsetComplexAccessor(node, name, value);\n\t}\n\n\tensureNodeData(node)[name] = value;\n}\n\n\n/** For props without explicit behavior, apply to a Node as event handlers or attributes.\n *\t@private\n */\nfunction setComplexAccessor(node, name, value) {\n\tif (name.substring(0,2)==='on') {\n\t\tlet type = normalizeEventName(name),\n\t\t\tl = node._listeners || (node._listeners = {}),\n\t\t\tfn = !l[type] ? 'add' : !value ? 'remove' : null;\n\t\tif (fn) node[fn+'EventListener'](type, eventProxy);\n\t\tl[type] = value;\n\t\treturn;\n\t}\n\n\tlet type = typeof value;\n\tif (falsey(value)) {\n\t\tnode.removeAttribute(name);\n\t}\n\telse if (type!=='function' && type!=='object') {\n\t\tnode.setAttribute(name, value);\n\t}\n}\n\n\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\tlet fn = this._listeners[normalizeEventName(e.type)];\n\tif (fn) return fn.call(this, optionsHook('event', e) || e);\n}\n\n\n\n/** Convert an Event name/type to lowercase and strip any \"on*\" prefix.\n *\t@function\n *\t@private\n */\nlet normalizeEventName = memoize(t => t.replace(/^on/i,'').toLowerCase());\n\n\n\n/** Get a hashmap of node properties, preferring preact's cached property values over the DOM's\n *\t@private\n */\nexport function getNodeAttributes(node) {\n\treturn node[ATTR_KEY] || getRawNodeAttributes(node) || EMPTY;\n\t// let list = getRawNodeAttributes(node),\n\t// \tl = node[ATTR_KEY];\n\t// return l && list ? extend(list, l) : (l || list || EMPTY);\n}\n\n\n/** Get a node's attributes as a hashmap, regardless of type.\n *\t@private\n */\nexport function getRawNodeAttributes(node) {\n\tlet list = node.attributes;\n\tif (!list || !list.getNamedItem) return list;\n\treturn getAttributesAsObject(list);\n}\n\n\n/** Convert a DOM `.attributes` NamedNodeMap to a hashmap.\n *\t@private\n */\nfunction getAttributesAsObject(list) {\n\tlet attrs;\n\tfor (let i=list.length; i--; ) {\n\t\tlet item = list[i];\n\t\tif (!attrs) attrs = {};\n\t\tattrs[item.name] = item.value;\n\t}\n\treturn attrs;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/dom/index.js\n **/","import { clone, toLowerCase, isFunction, isString, hasOwnProperty } from '../util';\nimport { isFunctionalComponent } from './functional-component';\nimport { getNodeType } from '../dom/index';\n\n\n/** Check if two nodes are equivalent.\n *\t@param {Element} node\n *\t@param {VNode} vnode\n *\t@private\n */\nexport function isSameNodeType(node, vnode) {\n\tif (isFunctionalComponent(vnode)) return true;\n\tlet nodeName = vnode.nodeName;\n\tif (isFunction(nodeName)) return node._componentConstructor===nodeName;\n\tif (getNodeType(node)===3) return isString(vnode);\n\treturn toLowerCase(node.nodeName)===nodeName;\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n\tlet props = clone(vnode.attributes),\n\t\tc = vnode.children;\n\tif (c) props.children = c;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (hasOwnProperty.call(defaultProps, i) && !(i in props)) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/vdom/index.js\n **/","import { ATTR_KEY } from '../constants';\nimport { memoize } from '../util';\nimport { ensureNodeData, getNodeType, getRawNodeAttributes, removeNode } from '.';\n\n/** DOM node pool, keyed on nodeName. */\n\nlet nodes = {};\n\nlet normalizeName = memoize(name => name.toUpperCase());\n\n\nexport function collectNode(node) {\n\tcleanNode(node);\n\tlet name = normalizeName(node.nodeName),\n\t\tlist = nodes[name];\n\tif (list) list.push(node);\n\telse nodes[name] = [node];\n}\n\n\nexport function createNode(nodeName) {\n\tlet name = normalizeName(nodeName),\n\t\tlist = nodes[name],\n\t\tnode = list && list.pop() || document.createElement(nodeName);\n\tensureNodeData(node);\n\treturn node;\n}\n\n\nfunction cleanNode(node) {\n\tremoveNode(node);\n\n\tif (getNodeType(node)===3) return;\n\n\t// When reclaiming externally created nodes, seed the attribute cache: (Issue #97)\n\tif (!node[ATTR_KEY]) {\n\t\tnode[ATTR_KEY] = getRawNodeAttributes(node);\n\t}\n\n\tnode._component = node._componentConstructor = null;\n\n\t// if (node.childNodes.length>0) {\n\t// \tconsole.trace(`Warning: Recycler collecting <${node.nodeName}> with ${node.childNodes.length} children.`);\n\t// \tfor (let i=node.childNodes.length; i--; ) collectNode(node.childNodes[i]);\n\t// }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/dom/recycler.js\n **/","import { ATTR_KEY, TEXT_CONTENT, UNDEFINED_ELEMENT, EMPTY } from '../constants';\nimport { hasOwnProperty, toArray, empty, toLowerCase, isString, isFunction } from '../util';\nimport { hook, deepHook } from '../hooks';\nimport { isSameNodeType } from '.';\nimport { isFunctionalComponent, buildFunctionalComponent } from './functional-component';\nimport { buildComponentFromVNode } from './component';\nimport { removeNode, appendChildren, getAccessor, setAccessor, getNodeAttributes, getNodeType } from '../dom';\nimport { unmountComponent } from './component';\nimport { createNode, collectNode } from '../dom/recycler';\n\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport default function diff(dom, vnode, context) {\n\tlet originalAttributes = vnode.attributes;\n\n\twhile (isFunctionalComponent(vnode)) {\n\t\tvnode = buildFunctionalComponent(vnode, context);\n\t}\n\n\tif (isFunction(vnode.nodeName)) {\n\t\treturn buildComponentFromVNode(dom, vnode, context);\n\t}\n\n\tif (isString(vnode)) {\n\t\tif (dom) {\n\t\t\tlet type = getNodeType(dom);\n\t\t\tif (type===3) {\n\t\t\t\tdom[TEXT_CONTENT] = vnode;\n\t\t\t\treturn dom;\n\t\t\t}\n\t\t\telse if (type===1) {\n\t\t\t\tcollectNode(dom);\n\t\t\t}\n\t\t}\n\t\treturn document.createTextNode(vnode);\n\t}\n\n\t// return diffNode(dom, vnode, context);\n// }\n\n\n/** Morph a DOM node to look like the given VNode. Creates DOM if it doesn't exist. */\n// function diffNode(dom, vnode, context) {\n\tlet out = dom,\n\t\tnodeName = vnode.nodeName || UNDEFINED_ELEMENT;\n\n\tif (!dom) {\n\t\tout = createNode(nodeName);\n\t}\n\telse if (toLowerCase(dom.nodeName)!==nodeName) {\n\t\tout = createNode(nodeName);\n\t\t// move children into the replacement node\n\t\tappendChildren(out, toArray(dom.childNodes));\n\t\t// reclaim element nodes\n\t\trecollectNodeTree(dom);\n\t}\n\n\tinnerDiffNode(out, vnode, context);\n\tdiffAttributes(out, vnode);\n\n\tif (originalAttributes && originalAttributes.ref) {\n\t\t(out[ATTR_KEY].ref = originalAttributes.ref)(out);\n\t}\n\n\treturn out;\n}\n\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM. */\nfunction innerDiffNode(dom, vnode, context) {\n\tlet children,\n\t\tkeyed,\n\t\tkeyedLen = 0,\n\t\tlen = dom.childNodes.length,\n\t\tchildrenLen = 0;\n\tif (len) {\n\t\tchildren = [];\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = dom.childNodes[i],\n\t\t\t\tkey = child._component ? child._component.__key : getAccessor(child, 'key');\n\t\t\tif (!empty(key)) {\n\t\t\t\tif (!keyed) keyed = {};\n\t\t\t\tkeyed[key] = child;\n\t\t\t\tkeyedLen++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tlet vchildren = vnode.children,\n\t\tvlen = vchildren && vchildren.length,\n\t\tmin = 0;\n\tif (vlen) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tlet vchild = vchildren[i],\n\t\t\t\tchild;\n\n\t\t\t// if (isFunctionalComponent(vchild)) {\n\t\t\t// \tvchild = buildFunctionalComponent(vchild);\n\t\t\t// }\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tif (keyedLen) {\n\t\t\t\tlet attrs = vchild.attributes,\n\t\t\t\t\tkey = attrs && attrs.key;\n\t\t\t\tif (!empty(key) && hasOwnProperty.call(keyed, key)) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = null;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\tif (!child && min<childrenLen) {\n\t\t\t\tfor (let j=min; j<childrenLen; j++) {\n\t\t\t\t\tlet c = children[j];\n\t\t\t\t\tif (c && isSameNodeType(c, vchild)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = null;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = diff(child, vchild, context);\n\n\t\t\tif (dom.childNodes[i]!==child) {\n\t\t\t\tlet c = child.parentNode!==dom && child._component,\n\t\t\t\t\tnext = dom.childNodes[i+1];\n\t\t\t\tif (c) deepHook(c, 'componentWillMount');\n\t\t\t\tif (next) {\n\t\t\t\t\tdom.insertBefore(child, next);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\tif (c) deepHook(c, 'componentDidMount');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tif (keyedLen) {\n\t\t/*eslint guard-for-in:0*/\n\t\tfor (let i in keyed) if (hasOwnProperty.call(keyed, i) && keyed[i]) {\n\t\t\tchildren[min=childrenLen++] = keyed[i];\n\t\t}\n\t}\n\n\t// remove orphaned children\n\tif (min<childrenLen) {\n\t\tremoveOrphanedChildren(children);\n\t}\n}\n\n\n/** Reclaim children that were unreferenced in the desired VTree */\nexport function removeOrphanedChildren(children, unmountOnly) {\n\tfor (let i=children.length; i--; ) {\n\t\tlet child = children[i];\n\t\tif (child) {\n\t\t\trecollectNodeTree(child, unmountOnly);\n\t\t}\n\t}\n}\n\n\n/** Reclaim an entire tree of nodes, starting at the root. */\nexport function recollectNodeTree(node, unmountOnly) {\n\t// @TODO: Need to make a call on whether Preact should remove nodes not created by itself.\n\t// Currently it *does* remove them. Discussion: https://github.com/developit/preact/issues/39\n\t//if (!node[ATTR_KEY]) return;\n\n\tlet attrs = node[ATTR_KEY];\n\tif (attrs) hook(attrs, 'ref', null);\n\n\tlet component = node._component;\n\tif (component) {\n\t\tunmountComponent(component, !unmountOnly);\n\t}\n\telse {\n\t\tif (!unmountOnly) {\n\t\t\tif (getNodeType(node)!==1) {\n\t\t\t\tremoveNode(node);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcollectNode(node);\n\t\t}\n\n\t\tlet c = node.childNodes;\n\t\tif (c && c.length) {\n\t\t\tremoveOrphanedChildren(c, unmountOnly);\n\t\t}\n\t}\n}\n\n\n/** Apply differences in attributes from a VNode to the given DOM Node. */\nfunction diffAttributes(dom, vnode) {\n\tlet old = getNodeAttributes(dom) || EMPTY,\n\t\tattrs = vnode.attributes || EMPTY,\n\t\tname, value;\n\n\t// removed\n\tfor (name in old) {\n\t\tif (empty(attrs[name])) {\n\t\t\tsetAccessor(dom, name, null);\n\t\t}\n\t}\n\n\t// new & updated\n\tif (attrs!==EMPTY) {\n\t\tfor (name in attrs) {\n\t\t\tif (hasOwnProperty.call(attrs, name)) {\n\t\t\t\tvalue = attrs[name];\n\t\t\t\tif (!empty(value) && value!=getAccessor(dom, name)) {\n\t\t\t\t\tsetAccessor(dom, name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/vdom/diff.js\n **/","/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {};\n\n\nexport function collectComponent(component) {\n\tlet name = component.constructor.name,\n\t\tlist = components[name];\n\tif (list) list.push(component);\n\telse components[name] = [component];\n}\n\n\nexport function createComponent(Ctor, props, context) {\n\tlet list = components[Ctor.name],\n\t\tlen = list && list.length,\n\t\tc;\n\tfor (let i=0; i<len; i++) {\n\t\tc = list[i];\n\t\tif (c.constructor===Ctor) {\n\t\t\tlist.splice(i, 1);\n\t\t\tlet inst = new Ctor(props, context);\n\t\t\tinst.nextBase = c.base;\n\t\t\treturn inst;\n\t\t}\n\t}\n\treturn new Ctor(props, context);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/vdom/component-recycler.js\n **/","import { SYNC_RENDER, DOM_RENDER, NO_RENDER, EMPTY_BASE } from '../constants';\nimport options from '../options';\nimport { isFunction } from '../util';\nimport { hook, deepHook } from '../hooks';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from '.';\nimport diff from './diff';\nimport { removeOrphanedChildren, recollectNodeTree } from './diff';\nimport { createComponent, collectComponent } from './component-recycler';\nimport { removeNode } from '../dom';\n\n\n/** Mark component as dirty and queue up a render.\n *\t@param {Component} component\n *\t@private\n */\nexport function triggerComponentRender(component) {\n\tif (!component._dirty) {\n\t\tcomponent._dirty = true;\n\t\tenqueueRender(component);\n\t}\n}\n\n\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context) {\n\tlet d = component._disableRendering;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tcomponent._disableRendering = true;\n\n\tif (context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (component.base) {\n\t\thook(component, 'componentWillReceiveProps', props, component.context);\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disableRendering = d;\n\n\tif (!opts || opts.render!==false) {\n\t\tif ((opts && opts.renderSync) || options.syncComponentUpdates!==false) {\n\t\t\trenderComponent(component);\n\t\t}\n\t\telse {\n\t\t\ttriggerComponentRender(component);\n\t\t}\n\t}\n\n\thook(component, '__ref', component);\n}\n\n\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts) {\n\tif (component._disableRendering) return;\n\n\tlet skip, rendered,\n\t\tprops = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tinitialBase = isUpdate || component.nextBase;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (hook(component, 'shouldComponentUpdate', props, state, context)===false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse {\n\t\t\thook(component, 'componentWillUpdate', props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = hook(component, 'render', props, state, context);\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\tchildContext = component.getChildContext ? component.getChildContext() : context,\t// @TODO might want to clone() new context obj\n\t\t\ttoUnmount, base;\n\n\t\tif (isFunction(childComponent) && childComponent.prototype.render) {\n\t\t\t// set up high order component link\n\n\t\t\tlet inst = component._component;\n\t\t\tif (inst && inst.constructor!==childComponent) {\n\t\t\t\ttoUnmount = inst;\n\t\t\t\tinst = null;\n\t\t\t}\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\n\t\t\tif (inst) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, childContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tinst = createComponent(childComponent, childProps, childContext);\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tcomponent._component = inst;\n\t\t\t\tif (isUpdate) deepHook(inst, 'componentWillMount');\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, childContext);\n\t\t\t\trenderComponent(inst, DOM_RENDER);\n\t\t\t\tif (isUpdate) deepHook(inst, 'componentDidMount');\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tlet cbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = component._component;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || (opts && opts.build)) {\n\t\t\t\tbase = diff(cbase, rendered || EMPTY_BASE, childContext);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase) {\n\t\t\tlet p = initialBase.parentNode;\n\t\t\tif (p && base!==p) p.replaceChild(base, initialBase);\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount, true);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) { componentRef = t; }\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\n\t\tif (isUpdate) {\n\t\t\thook(component, 'componentDidUpdate', previousProps, previousState, previousContext);\n\t\t}\n\t}\n\n\tlet cb = component._renderCallbacks, fn;\n\tif (cb) while ( (fn = cb.pop()) ) fn.call(component);\n\n\treturn rendered;\n}\n\n\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context) {\n\tlet c = dom && dom._component,\n\t\toldDom = dom;\n\n\tlet isOwner = c && dom._componentConstructor===vnode.nodeName;\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (isOwner) {\n\t\tsetComponentProps(c, getNodeProps(vnode), SYNC_RENDER, context);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (c) {\n\t\t\tunmountComponent(c, true);\n\t\t\tdom = oldDom = null;\n\t\t}\n\t\tdom = createComponentFromVNode(vnode, dom, context);\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/** Instantiate and render a Component, given a VNode whose nodeName is a constructor.\n *\t@param {VNode} vnode\n *\t@private\n */\nfunction createComponentFromVNode(vnode, dom, context) {\n\tlet props = getNodeProps(vnode);\n\tlet component = createComponent(vnode.nodeName, props, context);\n\n\tif (dom && !component.base) component.base = dom;\n\n\tsetComponentProps(component, props, NO_RENDER, context);\n\trenderComponent(component, DOM_RENDER);\n\n\t// let node = component.base;\n\t//if (!node._component) {\n\t//\tnode._component = component;\n\t//\tnode._componentConstructor = vnode.nodeName;\n\t//}\n\n\treturn component.base;\n}\n\n\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Element} dom\t\t\tA DOM node from which to unmount the given Component\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component, remove) {\n\t// console.log(`${remove?'Removing':'Unmounting'} component: ${component.constructor.name}`, component);\n\n\thook(component, '__ref', null);\n\thook(component, 'componentWillUnmount');\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner, remove);\n\t\tremove = false;\n\t}\n\n\tlet base = component.base;\n\tif (base) {\n\t\tif (remove!==false) removeNode(base);\n\t\tremoveOrphanedChildren(base.childNodes, true);\n\t}\n\n\tif (remove) {\n\t\tcomponent._parentComponent = null;\n\t\tcollectComponent(component);\n\t}\n\n\thook(component, 'componentDidUnmount');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/vdom/component.js\n **/","import { hook } from './hooks';\nimport { extend, clone, isFunction } from './util';\nimport { createLinkedState } from './linked-state';\nimport { triggerComponentRender, renderComponent } from './vdom/component';\n\n/** Base Component class, for he ES6 Class method of creating Components\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nexport default function Component(props, context) {\n\t/** @private */\n\tthis._dirty = this._disableRendering = false;\n\t/** @public */\n\tthis.prevState = this.prevProps = this.prevContext = this.base = this.nextBase = this._parentComponent = this._component = this.__ref = this.__key = this._linkedStates = this._renderCallbacks = null;\n\t/** @public */\n\tthis.context = context || {};\n\t/** @type {object} */\n\tthis.props = props;\n\t/** @type {object} */\n\tthis.state = hook(this, 'getInitialState') || {};\n}\n\n\nextend(Component.prototype, {\n\n\t/** Returns a `boolean` value indicating if the component should re-render when receiving the given `props` and `state`.\n\t *\t@param {object} nextProps\n\t *\t@param {object} nextState\n\t *\t@param {object} nextContext\n\t *\t@returns {Boolean} should the component re-render\n\t *\t@name shouldComponentUpdate\n\t *\t@function\n\t */\n\t// shouldComponentUpdate() {\n\t// \treturn true;\n\t// },\n\n\n\t/** Returns a function that sets a state property when called.\n\t *\tCalling linkState() repeatedly with the same arguments returns a cached link function.\n\t *\n\t *\tProvides some built-in special cases:\n\t *\t\t- Checkboxes and radio buttons link their boolean `checked` value\n\t *\t\t- Inputs automatically link their `value` property\n\t *\t\t- Event paths fall back to any associated Component if not found on an element\n\t *\t\t- If linked value is a function, will invoke it and use the result\n\t *\n\t *\t@param {string} key\t\t\t\tThe path to set - can be a dot-notated deep key\n\t *\t@param {string} [eventPath]\t\tIf set, attempts to find the new state value at a given dot-notated path within the object passed to the linkedState setter.\n\t *\t@returns {function} linkStateSetter(e)\n\t *\n\t *\t@example Update a \"text\" state value when an input changes:\n\t *\t\t<input onChange={ this.linkState('text') } />\n\t *\n\t *\t@example Set a deep state value on click\n\t *\t\t<button onClick={ this.linkState('touch.coords', 'touches.0') }>Tap</button\n\t */\n\tlinkState(key, eventPath) {\n\t\tlet c = this._linkedStates || (this._linkedStates = {}),\n\t\t\tcacheKey = key + '|' + (eventPath || '');\n\t\treturn c[cacheKey] || (c[cacheKey] = createLinkedState(this, key, eventPath));\n\t},\n\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n\t *\t@param {object} state\t\tA hash of state properties to update with new values\n\t */\n\tsetState(state, callback) {\n\t\tlet s = this.state;\n\t\tif (!this.prevState) this.prevState = clone(s);\n\t\textend(s, isFunction(state) ? state(s, this.props) : state);\n\t\tif (callback) (this._renderCallbacks = (this._renderCallbacks || [])).push(callback);\n\t\ttriggerComponentRender(this);\n\t},\n\n\n\t/** Immediately perform a synchronous re-render of the component.\n\t *\t@private\n\t */\n\tforceUpdate() {\n\t\trenderComponent(this);\n\t},\n\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n\t *\t@param {object} state\t\tThe component's current state\n\t *\t@param {object} context\t\tContext object (if a parent component has provided context)\n\t *\t@returns VNode\n\t */\n\trender() {\n\t\treturn null;\n\t}\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/component.js\n **/","import diff from './vdom/diff';\nimport { deepHook } from './hooks';\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport default function render(vnode, parent, merge) {\n\tlet existing = merge && merge._component && merge._componentConstructor===vnode.nodeName,\n\t\tbuilt = diff(merge, vnode),\n\t\tc = !existing && built._component;\n\n\tif (c) deepHook(c, 'componentWillMount');\n\n\tif (built.parentNode!==parent) {\n\t\tparent.appendChild(built);\n\t}\n\n\tif (c) deepHook(c, 'componentDidMount');\n\n\treturn built;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/render.js\n **/","// render modes\nexport const NO_RENDER = { render: false };\nexport const SYNC_RENDER = { renderSync: true };\nexport const DOM_RENDER = { build: true };\n\nexport const EMPTY = {};\nexport const EMPTY_BASE = '';\n\n// is this a DOM environment\nexport const HAS_DOM = typeof document!=='undefined';\nexport const TEXT_CONTENT = !HAS_DOM || 'textContent' in document ? 'textContent' : 'nodeValue';\n\nexport const ATTR_KEY = typeof Symbol!=='undefined' ? Symbol.for('preactattr') : '__preactattr_';\n\nexport const UNDEFINED_ELEMENT = 'undefined';\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const NON_DIMENSION_PROPS = {\n\tboxFlex:1, boxFlexGroup:1, columnCount:1, fillOpacity:1, flex:1, flexGrow:1,\n\tflexPositive:1, flexShrink:1, flexNegative:1, fontWeight:1, lineClamp:1, lineHeight:1,\n\topacity:1, order:1, orphans:1, strokeOpacity:1, widows:1, zIndex:1, zoom:1\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/constants.js\n **/","import h from './h';\nimport Component from './component';\nimport render from './render';\nimport { rerender } from './render-queue';\nimport options from './options';\n\nexport default {\n\th,\n\tComponent,\n\trender,\n\trerender,\n\toptions,\n\thooks: options\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/preact/src/preact.js\n **/","export default class Config {}\nConfig.SCALE = 15\n\n\n/** WEBPACK FOOTER **\n ** ./src/config.js\n **/","\nconst EMPTY = {};\nconst HOP = Object.prototype.hasOwnProperty;\n\nlet fns = {\n\t/**  let cachedFn = memoize(originalFn); */\n\tmemoize(fn, opt=EMPTY) {\n\t\tlet cache = opt.cache || {};\n\t\treturn function(...a) {\n\t\t\tlet k = String(a[0]);\n\t\t\tif (opt.caseSensitive===false) k = k.toLowerCase();\n\t\t\treturn HOP.call(cache,k) ? cache[k] : (cache[k] = fn.apply(this, a));\n\t\t};\n\t},\n\n\t/** let throttled = debounce(10, console.log); */\n\tdebounce(fn, opts) {\n\t\tif (typeof opts==='function') { let p = fn; fn = opts; opts = p; }\n\t\tlet delay = opts && opts.delay || opts || 0,\n\t\t\targs, context, timer;\n\t\treturn function(...a) {\n\t\t\targs = a;\n\t\t\tcontext = this;\n\t\t\tif (!timer) timer = setTimeout( () => {\n\t\t\t\tfn.apply(context, args);\n\t\t\t\targs = context = timer = null;\n\t\t\t}, delay);\n\t\t};\n\t},\n\n\tbind(target, key, { value: fn }) {\n\t\treturn {\n\t\t\tconfigurable: true,\n\t\t\tget() {\n\t\t\t\tlet value = fn.bind(this);\n\t\t\t\tObject.defineProperty(this, key, {\n\t\t\t\t\tvalue,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true\n\t\t\t\t});\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\t}\n};\n\n\nlet memoize = multiMethod(fns.memoize),\n\tdebounce = multiMethod(fns.debounce),\n\tbind = multiMethod((f,c)=>f.bind(c), ()=>fns.bind);\n\nexport { memoize, debounce, bind };\nexport default { memoize, debounce, bind };\n\n\n/** Creates a function that supports the following calling styles:\n *\td() - returns an unconfigured decorator\n *\td(opts) - returns a configured decorator\n *\td(fn, opts) - returns a decorated proxy to `fn`\n *\td(target, key, desc) - the decorator itself\n *\n *\t@Example:\n *\t\t// simple identity deco:\n *\t\tlet d = multiMethod( fn => fn );\n *\n *\t\tclass Foo {\n *\t\t\t@d\n *\t\t\tbar() { }\n *\n *\t\t\t@d()\n *\t\t\tbaz() { }\n *\n *\t\t\t@d({ opts })\n *\t\t\tbat() { }\n *\n *\t\t\tbap = d(() => {})\n *\t\t}\n */\nfunction multiMethod(inner, deco) {\n\tdeco = deco || inner.decorate || decorator(inner);\n\tlet d = deco();\n\treturn (...args) => {\n\t\tlet l = args.length;\n\t\treturn (l<2 ? deco : (l>2 ? d : inner))(...args);\n\t};\n}\n\n/** Returns function supports the forms:\n *\tdeco(target, key, desc) -> decorate a method\n *\tdeco(Fn) -> call the decorator proxy on a function\n */\nfunction decorator(fn) {\n\treturn opt => (\n\t\ttypeof opt==='function' ? fn(opt) : (target, key, desc) => {\n\t\t\tdesc.value = fn(desc.value, opt, target, key, desc);\n\t\t}\n\t);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** decko.js\n **/","var getPrototype = require('./_getPrototype'),\n    isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object,\n *  else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isPlainObject.js\n ** module id = 5\n ** module chunks = 0\n **/","import { h, Component } from 'preact';\n\nconst DOM = typeof document!=='undefined' && !!document.createElement;\n\nconst SVG_ATTRS = ['viewBox'];\n\nconst NS = {\n\txlink: 'http://www.w3.org/1999/xlink'\n}\n\nconst NS_ATTR = /^([a-zA-Z]+)(?:\\:|([A-Z]))/;\n\nconst PROP_TO_ATTR_MAP = {\n\t'className': 'class'\n};\n\nconst EMPTY = {};\n\n\n/** During <SVG> DOM building, this flag is set to `true`.\n *\t@private\n */\nlet updateMode = false;\n\n\nif (DOM) {\n\tlet div = document.createElement('div');\n\n\t/** Hook into document.createElement() to slap a namespace on manually namespaced nodes (yup)\n\t *\t@private\n\t */\n\tlet oldCreate = document.createElement;\n\tdocument.createElement = name => {\n\t\tif (updateMode || name==='svg') {\n\t\t\tlet el = document.createElementNS('http://www.w3.org/2000/svg', name);\n\t\t\t// shim setAttribute to automatically apply namespaces\n\t\t\tel.setAttribute = createAttributeShim('setAttribute');\n\t\t\tel.getAttribute = createAttributeShim('getAttribute');\n\t\t\tel.removeAttribute = createAttributeShim('removeAttribute');\n\t\t\tfor (let key in el) {\n\t\t\t\tif (~SVG_ATTRS.indexOf(key) || !(key in div) || PROP_TO_ATTR_MAP.hasOwnProperty(key)) {\n\t\t\t\t\toverwriteProperty(el, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn el;\n\t\t}\n\t\treturn oldCreate.call(document, name);\n\t};\n}\n\n\nconst PROPERTY_ERRORS = {};\nlet hasPropertyErrors = false;\n\nfunction overwriteProperty(el, key) {\n\tlet err = PROPERTY_ERRORS[key];\n\tif (err===false) {\n\t\tObject.defineProperty(el, key, contentPropertyDef(key));\n\t}\n\telse {\n\t\tattemptOverwriteProperty(el, key);\n\t}\n}\n\nfunction attemptOverwriteProperty(el, key) {\n\ttry {\n\t\tObject.defineProperty(el, key, contentPropertyDef(key));\n\t\tPROPERTY_ERRORS[key] = false;\n\t}\n\tcatch (e) {\n\t\tif (!PROPERTY_ERRORS[key]) {\n\t\t\tlet err = el.nodeName+': '+e;\n\t\t\tPROPERTY_ERRORS[key] = err;\n\t\t\tif (!hasPropertyErrors && 'undefined'!==typeof console && console.warn) {\n\t\t\t\thasPropertyErrors = true;\n\t\t\t\tconsole.warn('Error overwriting some SVG properties.', { errors: PROPERTY_ERRORS });\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/** Cache return values from a function using the first argument as a key.\n *\t@private\n */\nlet memoize = (fn, mem={}) => k => mem.hasOwnProperty(k) ? mem[k] : (mem[k] = fn(k));\n\n\n/** Create a getter/setter pair for a Content Property that proxies to the corresponding attribute.\n *\t@private\n */\nlet contentPropertyDef = memoize( (prop, attr=(PROP_TO_ATTR_MAP[prop] || prop)) => ({\n\tset(v) {\n\t\tif (v===null || v===undefined) this.removeAttribute(attr);\n\t\telse this.setAttribute(attr, v);\n\t},\n\tget() { return this.getAttribute(attr); }\n}) );\n\n\nlet createAttributeShim = memoize( method => function(name, value) {\n\tlet proto = this.constructor.prototype,\n\t\tp = name.match(NS_ATTR);\n\tif (p && NS.hasOwnProperty(p[1])) {\n\t\tname = name.replace(NS_ATTR, '$2').toLowerCase();\n\t\tlet ns = NS[p[1]];\n\t\treturn proto[method+'NS'].call(this, ns, name, value);\n\t}\n\telse {\n\t\treturn proto[method].call(this, name, value);\n\t}\n});\n\n\n\n/** Wrapper around <svg> that provides Preact support.\n *\t@public\n */\nexport default class SVG extends Component {\n\tcomponentWillUpdate() {\n\t\tupdateMode = true;\n\t}\n\n\t// after any update, manually apply exempted readOnly SVG properties as attributes:\n\tcomponentDidUpdate() {\n\t\tupdateMode = false;\n\n\t\tif (this.base) {\n\t\t\tfor (let i in this.props) {\n\t\t\t\tif (~SVG_ATTRS.indexOf(i) || PROPERTY_ERRORS.hasOwnProperty(i) && PROPERTY_ERRORS[i]!==false) {\n\t\t\t\t\tthis.base.setAttribute(i, this.props[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender({ children, ...props }) {\n\t\t// componentWillUpdate() is not called on first render, so we have to shim that here.\n\t\t// thankfully, first render() does synchronous DOM generation so it works fine.\n\t\tif (!this.hasRendered) {\n\t\t\tthis.hasRendered = updateMode = true;\n\t\t\t// componentDidUpdate() is not called after initial render,\n\t\t\t// so we use a setState() callback to call it manually:\n\t\t\tthis.setState(EMPTY, setStateUpdateProxy(this));\n\t\t}\n\n\t\tfor (let i in props) {\n\t\t\tif (~SVG_ATTRS.indexOf(i) || PROPERTY_ERRORS.hasOwnProperty(i) && PROPERTY_ERRORS[i]!==false) {\n\t\t\t\tdelete props[i];\n\t\t\t}\n\t\t}\n\n\t\treturn <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>{ children }</svg>;\n\t}\n}\n\n\nfunction setStateUpdateProxy(component) {\n\treturn () => {\n\t\tcomponent.componentDidUpdate();\n\t\tcomponent = null;\n\t};\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/index.js\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports.connect = exports.Provider = undefined;\n\nvar _Provider = require('./components/Provider');\n\nvar _Provider2 = _interopRequireDefault(_Provider);\n\nvar _connect = require('./components/connect');\n\nvar _connect2 = _interopRequireDefault(_connect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nexports.Provider = _Provider2[\"default\"];\nexports.connect = _connect2[\"default\"];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-redux/lib/index.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = require('./createStore');\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = require('./combineReducers');\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = require('./bindActionCreators');\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = require('./applyMiddleware');\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2[\"default\"];\nexports.combineReducers = _combineReducers2[\"default\"];\nexports.bindActionCreators = _bindActionCreators2[\"default\"];\nexports.applyMiddleware = _applyMiddleware2[\"default\"];\nexports.compose = _compose2[\"default\"];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/index.js\n ** module id = 9\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/timers-browserify/main.js\n ** module id = 10\n ** module chunks = 0\n **/","\nexport function addTodo(text) {\n\treturn {\n\t\ttype: 'ADD_TODO',\n\t\ttext\n\t};\n}\n\nexport function removeTodo(todo) {\n\treturn {\n\t\ttype: 'REMOVE_TODO',\n\t\ttodo\n\t};\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/actions.js\n **/","import { h, Component } from 'preact';\nimport { bind } from 'decko';\n\nexport default class TodoItem extends Component {\n\tshouldComponentUpdate({ todo, onRemove }) {\n\t\treturn todo!==this.props.todo || onRemove!==this.props.onRemove;\n\t}\n\n\t@bind\n\tremove() {\n\t\tlet { onRemove, todo } = this.props;\n\t\tonRemove(todo);\n\t}\n\n\trender({ todo }) {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<button onClick={this.remove}>&times;</button>\n\t\t\t\t{ ' ' + todo.text }\n\t\t\t</li>\n\t\t);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/todo-item.js\n **/","import THREE from 'three';\n\nexport default class Egg {\n    constructor(x, z, scale, scene) {\n        this.hatchtime = (Math.floor(Math.random() * 12) + 4) * 1000;\n        var geometry = new THREE.BoxGeometry(15, 24, 15);\n        var material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n        this.mesh = new THREE.Mesh(geometry, material)\n        this.mesh.position.set(x * scale, -15, z * scale);\n        this.scene = scene;\n        this.scene.add(this.mesh);\n    }\n\n    incubate() {\n        let self = this;\n        return new Promise((fulfill, reject) => {\n            setTimeout(() => {\n                fulfill(self.mesh.position);\n                self.scene.remove(self.mesh);\n            }, self.hatchtime);\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/egg.js\n **/","\nconst EMPTY = {};\n\nexport default store => {\n\treturn store || EMPTY;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/reducers.js\n **/","import { bindActionCreators } from 'redux';\n\nexport function bindActions(actions) {\n\treturn dispatch => ({\n\t\t...bindActionCreators(actions, dispatch)\n\t});\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util.js\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nexports[\"default\"] = _react.PropTypes.shape({\n  subscribe: _react.PropTypes.func.isRequired,\n  dispatch: _react.PropTypes.func.isRequired,\n  getState: _react.PropTypes.func.isRequired\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-redux/lib/utils/storeShape.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-redux/lib/utils/warning.js\n ** module id = 17\n ** module chunks = 0\n **/","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  } else {\n    var _ret = function () {\n      var last = funcs[funcs.length - 1];\n      var rest = funcs.slice(0, -1);\n      return {\n        v: function v() {\n          return rest.reduceRight(function (composed, f) {\n            return f(composed);\n          }, last.apply(undefined, arguments));\n        }\n      };\n    }();\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/compose.js\n ** module id = 18\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports[\"default\"] = createStore;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [initialState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, initialState, enhancer) {\n  var _ref2;\n\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, initialState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = initialState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2[\"default\"])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/zenparsing/es-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[_symbolObservable2[\"default\"]] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[_symbolObservable2[\"default\"]] = observable, _ref2;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/createStore.js\n ** module id = 19\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/utils/warning.js\n ** module id = 20\n ** module chunks = 0\n **/","import { h, Component } from 'preact';\nimport { bind } from 'decko';\nimport { connect } from 'react-redux';\nimport { bindActions } from '../util';\nimport reduce from '../reducers';\nimport * as actions from '../actions';\nimport TodoItem from './todo-item';\n\n@connect(reduce, bindActions(actions))\nexport default class App extends Component {\n  constructor() {\n    super();\n  }\n\n  @bind\n  addTodos() {\n    let { text } = this.state;\n    this.setState({ text: '' });\n    this.props.addTodo(text);\n    return false;\n  }\n\n  @bind\n  removeTodo(todo) {\n    this.props.removeTodo(todo);\n  }\n\n  render({ todos }, { text }) {\n    return (\n      <div id=\"app\">\n        <form onSubmit={this.addTodos} action=\"javascript:\">\n          <input value={text} onInput={this.linkState('text') } placeholder=\"New ToDo...\" />\n        </form>\n        <ul>\n          { todos.map(todo => (\n            <TodoItem key={todo.id} todo={todo} onRemove={this.removeTodo} />\n          )) }\n        </ul>\n      </div>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/app.js\n **/","import { h, Component } from 'preact';\nimport { bind, debounce } from 'decko';\nimport { connect } from 'react-redux';\nimport { bindActions } from '../util';\nimport reduce from '../reducers';\nimport * as actions from '../actions';\nimport TodoItem from './todo-item';\nimport THREE from 'three';\nimport LoadModels from '../core/loadmodel';\nimport Chicken from '../core/chicken';\nimport Egg from '../core/egg';\nimport Grid from '../core/grid';\nimport Box from '../core/box';\nimport Ground from '../core/ground';\nimport Label from '../core/label';\nimport papergirl from 'papergirl';\nimport randomColor from 'randomcolor';\nimport Forest from '../core/forest';\nimport Traffic from '../core/traffic';\nimport Config from '../config';\nimport Logo from '../core/logo';\n\nimport OBJMTLLoader from '../lib/loaders/OBJMTLLoader';\n\nconst TOUCH = 'Touch' in window && navigator.maxTouchPoints > 1;\nconst coords = e => ((e = e.touches && e.touches[0] || e), ({ x: e.pageX, y: e.pageY }));\n\n@connect(reduce, bindActions(actions))\nexport default class Game extends Component {\n  constructor() {\n    super();\n  }\n\n  render({}, { zoom = 1, rotateX = 0, rotationY = 0 }) {\n    return (\n      <div id=\"game\">\n        <main {...this.events}>\n          <Scene {...{ zoom, rotateX, rotationY }} />\n        </main>\n      </div>\n    );\n  }\n}\n\n@connect(reduce, bindActions(actions))\nclass Scene extends Component {\n  constructor() {\n    super();\n\n    this.state = 'wait';\n\n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2();\n    this.mouse_status = 'up';\n\n    this.targetRadian = 0;\n\n    /*\n        this.events = {\n          [TOUCH ? 'onTouchStart' : 'onMouseDown']: ::this.mouseDown,\n          [TOUCH ? 'onTouchMove' : 'onMouseMove']: ::this.mouseMove,\n          [TOUCH ? 'onTouchEnd' : 'onMouseUp']: ::this.mouseUp\n        };\n        */\n\n    let self = this;\n    window.oncontextmenu = function (event) {\n      console.log('oncontextmenu');\n      event.preventDefault();\n      event.stopPropagation();\n\n      return false;\n    };\n\n    var mousedown = function (e) {\n      console.log('mousedown:' + coords(e).x);\n      e.preventDefault();\n\n      self.calculateTarget(self, coords(e));\n      self.mouse_status = 'down';\n\n      // First click\n      if (self.state === 'wait') {\n        self.state = 'intro';\n      }\n    }\n\n    var mousemove = function (e) {\n      console.log('mouseMove:' + coords(e).x);\n      e.preventDefault();\n\n      if (self.mouse_status !== 'down')\n        return;\n\n      self.calculateTarget(self, coords(e));\n    }\n\n    var mouseup = function (e) {\n      console.log('mouseUp:' + coords(e));\n      e.preventDefault();\n\n      self.mouse_status = 'up';\n    }\n\n    document.addEventListener('mousedown', mousedown, false);\n    document.addEventListener('touchstart', mousedown, false);\n\n    document.addEventListener('mousemove', mousemove, false);\n    document.addEventListener('touchmove', mousemove, false);\n\n    document.addEventListener('touchend', mouseup, false);\n    document.addEventListener('mouseup', mouseup, false);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentWillReceiveProps() {\n    if (this.base) this.update();\n  }\n\n  calculateTarget(self, coords) {\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n    self.mouse.x = (coords.x / window.innerWidth) * 2 - 1;\n    self.mouse.y = - (coords.y / window.innerHeight) * 2 + 1;\n\n    let radian = Math.atan2(self.mouse.y, self.mouse.x);\n    //let theta = radian * 180 / Math.PI;\n    //this.targetTheta = Math.floor(theta / 90) * 90;\n    //this.targetRadian = this.targetTheta * Math.PI / 180;\n    self.targetRadian = radian;\n  }\n\n  //@debounce\n  update() {\n    //console.log(this.props);\n    let { events, zoom, rotateX, rotationY } = this.props;\n    this.camera.rotation.y = rotateX * Math.PI;\n    this.camera.rotation.z = - rotationY * Math.PI;\n    this.scene.scale.addScalar(zoom - this.scene.scale.x);\n    this.rerender();\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.setup(), 1);\n  }\n\n  setup() {\n    let self = this;\n    //console.log(\"setup\");\n    let { width, height } = this.base.getBoundingClientRect();\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.autoClear = false;\n    this.base.appendChild(this.renderer.domElement);\n\n    this.clock = new THREE.Clock();\n    this.scene = new THREE.Scene();\n\n    /*\n    this.camera = new THREE.PerspectiveCamera(\n            35,         // FOV\n            800 / 640,  // Aspect\n            0.1,        // Near\n            10000       // Far\n    );\n    this.camera.position.set(-15, 10, 15);\n    this.camera.lookAt(this.scene.position);\n    */\n    /*\n    var aspect = window.innerWidth / window.innerHeight;\n    var d = 20;\n    this.camera = new THREE.OrthographicCamera( - d * aspect, d * aspect, d, - d, 1, 1000 );\n    this.camera.position.set( 20, 20, 20 ); // all components equal\n    this.camera.lookAt( this.scene.position ); // or the origin\n    */\n\n    this.camera = new THREE.PerspectiveCamera(\n      10,         // FOV\n      window.innerWidth / window.innerHeight,  // Aspect\n      100,        // Near\n      10000       // Far\n    );\n\n    // HUD\n    this.setupHUD();\n\n    this.letCameraFollowTarget(new THREE.Vector3(0, 0, 0));\n\n    //this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n    //this.controls.damping = 0.2;\n    //this.controls.maxPolarAngle = Math.PI / 2;\n    //this.controls.minDistance = 500;\n\n    this.onWindowResize(self);\n    this.renderObject();\n    this.renderLighting();\n    this.rerender();\n\n    this.decorate([\n      'data/01_client.json',\n      'data/02_dev.json',\n      'data/03_server.json'\n    ]);\n\n    // Forest\n    new Forest(this.scene, 640, 640, 10);\n    this.traffic = new Traffic(this.scene);\n\n    this.animate();\n\n    // Logo\n    this.logo = new Logo(this.scene);\n\n    // TODO : move to external?\n\n    window.addEventListener('resize', function () {\n      self.onWindowResize(self);\n    }, false);\n  }\n\n  setupHUD() {\n    let self = this;\n\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n    this.cameraOrtho = new THREE.OrthographicCamera(- width / 2, width / 2, height / 2, - height / 2, 1, 10);\n    this.cameraOrtho.position.z = 10;\n\n    this.sceneOrtho = new THREE.Scene();\n\n    new THREE.TextureLoader().load(\"textures/devscape_logo.png\", function (texture) {\n      var material = new THREE.SpriteMaterial({ map: texture });\n      self.spriteC = new THREE.Sprite(material);\n      var tw = material.map.image.width;\n      var th = material.map.image.height;\n\n      // media query\n      let logo_y = 120;\n      if  (width <= 320) {\n        tw = tw / 2;\n        th = th / 2;\n      } else if (width <= 414) {\n        tw = tw / 1.75;\n        th = th / 1.75;\n        logo_y = 200;\n      }\n\n      self.spriteC.scale.set(tw, th, 1);\n      self.sceneOrtho.add(self.spriteC);\n      self.spriteC.position.set(0, logo_y, 1); // center\n    });\n  }\n\n  toRad(degree) {\n    return degree * Math.PI / 180;\n  }\n\n  letCameraFollowTarget(target) {\n    this.camera.position.set(target.x, target.y, target.z);\n    this.camera.rotation.set(this.toRad(-45), this.toRad(16), this.toRad(16));\n    this.camera.translateZ(4600);\n    this.camera.target = target;\n    this.camera.lookAt(this.camera.target);\n\n    /*\n    // for top view test\n    this.camera.position.set(-640, 0, 0);\n    this.camera.rotation.set(-Math.PI/2, 0, 0);\n    this.camera.translateZ(1600*3);\n    //this.camera.lookAt(new THREE.Vector3( 0, 0, 0 ));\n    */\n  }\n\n  animate() {\n    setInterval(() => {\n      this.chickens && this.chickens.forEach(function (chicken) {\n        chicken.update();\n      });\n    }, Math.floor(Math.random() * 7000) + 3000);\n  }\n\n  decorate(sections) {\n    let self = this;\n\n    // ground\n    let ground = new Ground(self.scene);\n\n    // sections\n    var i = 0;\n    sections.forEach(function (sectionURL) {\n      // TODO : queue load\n      papergirl.watch().onSync(function (jsonString, url, options) {\n        let json = JSON.parse(jsonString);\n        self.build(options.index, json);\n      }).request(sectionURL, { index: i++ });\n    });\n  }\n\n  build(sectionIndex, sectionData) {\n    let self = this;\n\n    // label style\n    let X0 = - sectionIndex * 800 - 100;\n    let Z0 = 180;\n    let LABEL_X = 64\n    let group_x = 0;\n    let group_h = 64;\n    let item_h = 64;\n\n    // header\n    let header_label = new Label(self.scene, sectionData.title, X0 + 64, 0, Z0 + 64, \"normal small-caps bold 64px arial\", \"black\", \"yellow\", 0);\n\n    // section\n    sectionData.group.forEach(function (group) {\n\n      var j = 0;\n      var items_h = group.items.length * item_h;\n\n      group.items.forEach(function (item) {\n\n        // chart\n        let trend = 64 * item.trend / 10;\n        let w = (trend < 128) ? trend : 128;\n        let item_x = Z0 - (group_x + group_h + j);\n        let h = 64 + 128 * item.percent / 100;\n        let color = randomColor({ luminosity: 'bright', format: 'rgb' });\n        let box = new Box(self.scene, X0 - h / 2 + 64, item_x, h, w, item_h, color);\n\n        // label\n        let item_label = new Label(self.scene, item.title, X0 + LABEL_X, 0, item_x, \"normal small-caps bold 40px arial\", \"white\", color, 24);\n\n        j += 64;\n      });\n\n      // group\n      let group_label = new Label(self.scene, group.title, X0 + LABEL_X, 0, Z0 - group_x, \"normal small-caps bold 56px arial\", \"#b0e65a\", \"#black\", 10);\n      group_x += items_h + group_h;\n    });\n  }\n\n  // render ////////////////////////////\n\n  rerender() {\n    let self = this;\n    window.requestAnimationFrame(function () { self.rerender(); });\n\n    if (this.state === 'intro') {\n      // Bye HUD\n      if (this.spriteC.position.x < window.innerWidth) {\n        this.spriteC.position.x += 16;\n        this.spriteC.position.y -= 1;\n      } else {\n        this.state = 'play'\n      }\n    }\n\n    self.traffic && self.traffic.update();\n\n    let delta = this.clock.getDelta();\n\n    this.chickens && this.chickens.forEach(function (chicken) {\n\n      //let randomness = Math.random();\n      //chicken.rotationY = Math.PI / 2 * randomness;//self.targetTheta;\n      if (self.mouse_status === 'down') {\n\n        // console.log(\"targetRadian : \" + self.targetRadian);        \n        //chicken.rotationY = self.targetRadian;\n        chicken.rotationY = 0;\n        var f = chicken.speed * delta * chicken.scale;\n        chicken.group.position.set(chicken.group.position.x + f * Math.cos(self.targetRadian), 20, chicken.group.position.z - f * Math.sin(self.targetRadian));\n        chicken.rotationY = self.targetRadian;\n        chicken.group.children.forEach(function (mesh) {\n          mesh.updateAnimation(1000 * delta);\n          //mesh.translateX(chicken.speed * delta);\n        });\n      }\n    });\n\n    // follow camera\n    if (this.chickens && this.chickens[0] && this.chickens[0].group.children[0]) {\n      //console.log(this.chickens[0].group.children[0].position);\n      //this.camera.position.set(900, 900, 900);\n      //var target = this.chickens[0].group.children[0].position.clone();\n      var target = this.chickens[0].group.position.clone();\n      this.letCameraFollowTarget(target);\n    }\n\n    // light\n    if (this.traffic_light) {\n      this.traffic_light.intensity = Math.sin(this.theta += Math.PI / 15) / 2 + 0.5;\n    }\n\n    this.renderer.clear();\n    this.renderer.setViewport(0, 0, window.innerWidth, window.innerHeight);\n\n    // render\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.state !== 'play') {\n      this.renderer.clearDepth();\n      this.renderer.render(this.sceneOrtho, this.cameraOrtho);\n    }\n  }\n\n  renderObject() {\n    let self = this;\n    self.chickens = [];\n\n    this.reference = new LoadModels();\n    this.reference.load().then(function () {\n      new Chicken(-64, 20, 1264, Config.SCALE, self.reference, self.scene, self.chickens);\n    });\n  }\n\n  renderLighting() {\n    /*\n    let light = new THREE.PointLight(0xFF0000, 1, 100);\n    light.position.set(10, 0, 10);\n    this.scene.add(light);\n\n    light = new THREE.PointLight(0xFF0000, 1, 50);\n    light.position.set(-20, 15, 10);\n    this.scene.add(light);\n    */\n\n    //this.renderer.setClearColor(0x222222, 1);\n\n    this.ambientLight = new THREE.AmbientLight(\"#FFFFFF\");\n    this.scene.add(this.ambientLight);\n\n    this.xLight = new THREE.DirectionalLight(0xffffff, 0.382);\n    this.xLight.position.set(1, 0, 0).normalize();\n    this.scene.add(this.xLight);\n\n    this.yLight = new THREE.DirectionalLight(0xffffff, 0.2);\n    this.yLight.position.set(0, 1, 0).normalize();\n    this.scene.add(this.yLight);\n\n    this.zLight = new THREE.DirectionalLight(0x111111, 0.1);\n    this.zLight.position.set(0, 0, 1).normalize();\n    this.scene.add(this.zLight);\n\n    /*\n    // for debug traffic_light\n    var geometry = new THREE.SphereGeometry( 4, 16, 16 );\n    var material = new THREE.MeshBasicMaterial( {color: 0xff0000} );\n    var sphere = new THREE.Mesh( geometry, material );\n    this.scene.add( sphere );\n    sphere.position.set(-220, 200, 930);\n    */\n\n    this.theta = 0;\n    // PointLight( color, intensity, distance, decay )\n    this.traffic_light = new THREE.PointLight(0xFF0000, Math.sin(this.theta), 500);\n    //this.traffic_light.position.set(sphere.position.x, sphere.position.y, sphere.position.z);\n    this.traffic_light.position.set(-220, 200, 930);\n    this.scene.add(this.traffic_light);\n\n    /*\n    var spotLight = new THREE.SpotLight(0x00ff00);\n    spotLight.position.set(100, 1000, 100);\n\n    spotLight.castShadow = true;\n\n    spotLight.shadowMapWidth = 1024;\n    spotLight.shadowMapHeight = 1024;\n\n    spotLight.shadowCameraNear = 500;\n    spotLight.shadowCameraFar = 4000;\n    spotLight.shadowCameraFov = 30;\n\n    this.scene.add(spotLight);\n    */\n  }\n\n  render() {\n    return (<main {...this.events } >\n      <div class=\"scene\"/>\n    </main>)\n  }\n\n  onWindowResize(self) {\n    var width = window.innerWidth;\n    var height = window.innerHeight;\n\n    self.camera.aspect = window.innerWidth / window.innerHeight;\n    self.camera.updateProjectionMatrix();\n    self.renderer.setSize(window.innerWidth, window.innerHeight);\n\n    // HUD\n    self.cameraOrtho.left = - width / 2;\n    self.cameraOrtho.right = width / 2;\n    self.cameraOrtho.top = height / 2;\n    self.cameraOrtho.bottom = - height / 2;\n    self.cameraOrtho.updateProjectionMatrix();\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/game.js\n **/","import THREE from 'three';\n\nexport default class Box {\n    constructor(scene, x, z, w, h, d, color) {\n        var geometry = new THREE.BoxGeometry(w, h, d);\n        var material = new THREE.MeshPhongMaterial({ color: color});//, emissive: 0x111111});\n        \n        this.mesh = new THREE.Mesh(geometry, material)\n        this.mesh.position.set(x, h/2, z);\n        \n        this.scene = scene;\n        this.scene.add(this.mesh);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/box.js\n **/","import THREE from 'three';\nimport Egg from '../core/egg';\n\nexport default class Chicken {\n    constructor(x, y, z, scale, reference, scene, chickens) {\n        let self = this;\n        this.scale = scale;\n        this.position = new THREE.Vector3(x, y, z);\n        this.group = new THREE.Group();\n        this.scene = scene;\n        this.speed = 12;\n        this.rotation = 0;\n        this.chickens = chickens;\n        this.body = reference.body.clone()\n        this.foot1 = reference.foot1.clone()\n        this.foot2 = reference.foot2.clone()\n        /*\n        setInterval(() => {\n            let randomness = Math.random();\n            self.group.children.forEach(function (model) {\n                //model.rotation.y += Math.PI / 2 * randomness;\n            });\n        }, Math.floor(Math.random() * 7000) + 3000);\n\n        setInterval(() => {\n            let o = self.body.position;\n            let x = self.position.x !== 0 ? self.position.x / self.scale : self.position.x;\n            let z = self.position.z !== 0 ? self.position.z / self.scale : self.position.z;\n            let egg = new Egg(o.x + x, o.z + z, self.scale, self.scene);\n            egg.incubate().then((pos) => {\n                //new Chicken(pos.x, pos.z, self.scale, reference, self.scene, self.chickens)\n            });\n        }, Math.floor(Math.random() * 7000) + 3000);\n        */\n\n        this.loadModel();\n        this.chickens.push(this);\n    }\n\n    loadModel() {\n        this.group.add(this.body);\n        this.group.add(this.foot1);\n        this.group.add(this.foot2);\n        this.group.scale.set(this.scale, this.scale, this.scale);\n        this.group.position.set(this.position.x, this.position.y, this.position.z);\n        this.scene.add(this.group);\n\n        this.rotationY = Math.PI * 3 / 2;\n    }\n\n    set rotationY(theta) {\n        let self = this;\n        self.group.children.forEach(function (model) {\n            model.rotation.y = theta;\n        });\n    }\n\n    get rotationY() {\n        let self = this;\n        return self.group.children[0].rotation.y;\n    }\n\n    update() {\n\n    }\n\n    /*\n    update() {\n        let randomness = Math.random();\n        self.group.children.forEach(function(model) {\n            console.log(\"update\");\n            model.rotation.y += Math.PI / 2 * randomness;\n        });\n    }\n    */\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/chicken.js\n **/","import THREE from 'three';\nimport Config from '../config';\n\nexport default class Forest {\n    constructor(scene, w, h, dens) {\n\n        let self = this;\n        let _W = 640;\n        let _H = 400;\n        let _Z0 = 480;\n        let _X0 = - _W * 2 - 480 - 106;\n        let _Y0 = - _H * 3 + 32;\n        let _SPAN = 128;\n\n        let maps = [\n            0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n            0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n            0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n            0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n            0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0,\n            0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n            0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,\n            0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n            0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n        ];\n\n        var loader = new THREE.OBJMTLLoader();\n        loader.load('3d/Coin.obj', '3d/Coin.mtl', function (coin) {\n            coin.scale.set(Config.SCALE * 2, Config.SCALE * 2, Config.SCALE * 2);\n\n            var object = coin;\n            object.traverse(function (child) {\n                if (child instanceof THREE.Mesh) {\n                    child.material.shininess = 100;\n                    child.material.blending = THREE.AdditiveBlending;\n                }\n            });\n            //coin.material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n\n            var loader = new THREE.OBJMTLLoader();\n            loader.load('3d/Tree01.obj', '3d/Tree01.mtl', function (tree) {\n\n                tree.scale.set(Config.SCALE, Config.SCALE, Config.SCALE);\n\n                for (var i = 0; i < maps.length; i++) {\n                    if (maps[i] == 0) {\n\n                        let positionX = _X0 + (i % 20) * _SPAN;\n                        let positionY = _Y0 + (Math.floor(i / 20)) * _SPAN;\n\n                        var mesh;\n                        if (Math.random() > 0.2) {\n                            mesh = tree.clone();\n                        } else {\n                            mesh = coin.clone();\n                        }\n\n                        mesh.position.set(positionX, 0, positionY);\n                        scene.add(mesh);\n                    }\n                }\n            });\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/forest.js\n **/","import THREE from 'three';\n\nexport default class Grid {\n    constructor(size, step, scene) {\n        var size = 640, step = 64;\n        var geometry = new THREE.Geometry();\n        for (var i = - size; i <= size; i += step) {\n            geometry.vertices.push(new THREE.Vector3(- size, 0, i));\n            geometry.vertices.push(new THREE.Vector3(size, 0, i));\n            geometry.vertices.push(new THREE.Vector3(i, 0, - size));\n            geometry.vertices.push(new THREE.Vector3(i, 0, size));\n        }\n        var material = new THREE.LineBasicMaterial({ color: 0x000000, opacity: 0.2 });\n        var line = new THREE.LineSegments(geometry, material);\n        scene.add(line);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/grid.js\n **/","import THREE from 'three';\n\nexport default class Ground {\n    /*\n    constructor(scene) {\n        var _W = 800;\n        var _H = 240;\n\n        this._buildRoad(scene, 2, -_W, _H, _W * 5, _H, 32);\n        this._buildGrass(scene, -_W, -_W + _H * .5, _W * 5, _W * 2, 32);\n        this._buildGrass(scene, -_W, _H + 128 * .5 + 128, _W * 5, 128, 32);\n\n        this._buildSoil(scene, -_W, _H + 128 * .5 + 128, _W * 5, 128, 320);\n        this._buildSoil2(scene, 1200, - _W * 5 - 128 - 30, 2000 - 20, 128, 320);\n    }\n    */\n    constructor(scene) {\n        var _W = 640;\n        var _H = 400;\n        var _Z0 = 480;\n\n        this.HGAP = 0.5;\n\n        this._buildGrass(scene, -_W, -_Z0, _W * 4, _H * 4, 32);\n        this._buildRoad(scene, 2, -_W, _Z0 - 38, _W * 4, _H, 32);       \n        \n        this._buildGrass(scene, -_W, _Z0 + 128 + 26, _W * 4, 128, 32);\n        this._buildRailRoad(scene, 1, -_W, _Z0 + 128 + 128 + 36, _W * 4, _H, 32);\n        \n        this._buildRail(scene, -_W, _Z0 + 240, _W * 4, 16, 16);\n        this._buildGrass(scene, -_W, _Z0 + 640, _W * 4, 520, 32);\n\n        this._buildSoil(scene, -_W, _Z0 + 18 + _W + 170, _W * 4, 0, _W);\n        this._buildSoil2(scene, _W, 0, _W * 4 + 60, 0, _W);\n    }\n        \n    _buildRail(scene, x, z, w, d, h) {\n        // rail1\n        var geometry = new THREE.BoxGeometry(w, h, d);\n        var material = new THREE.MeshPhongMaterial({ color: 0x726994 });//, emissive: 0x333333, specular: 0x333333 });\n\n        this.mesh = new THREE.Mesh(geometry, material);\n        this.mesh.position.set(x, -h / 2 - 0.3 + 16, z + 16);\n        scene.add(this.mesh);\n        \n        // rail2\n        var _obj3d = this.mesh.clone();\n        this.mesh.position.set(x, -h / 2 - 0.3 + 16, z + 110);\n        scene.add(_obj3d);\n        \n        // pillows\n        var geometry = new THREE.BoxGeometry(128, h, d);\n        var material = new THREE.MeshPhongMaterial({ color: 0x70343a });\n        this.mesh = new THREE.Mesh(geometry, material);\n        this.mesh.rotation.y = -Math.PI / 2;\n\n        for (var i=0; i < 26; i++) {\n            var _obj3d = this.mesh.clone();\n            _obj3d.position.set(i*100 + x -w/2, -h / 2 - 0.3, z + 128 / 2);\n            scene.add(_obj3d);\n        }\n    }\n\n    _buildGrass(scene, x, z, w, d, h) {\n        var geometry = new THREE.BoxGeometry(w, h, d);\n        var material = new THREE.MeshPhongMaterial({ color: 0xb0e65a }); //, emissive: 0x000000, specular: 0x000000, shininess: 0});\n\n        this.mesh = new THREE.Mesh(geometry, material);\n        this.mesh.position.set(x, -h / 2 - this.HGAP, z);\n\n        scene.add(this.mesh);\n    }\n\n    _buildSoil(scene, x, z, w, d, h) {\n        let self = this;\n\n        let _SECTION_W = 320;\n        var texture = new THREE.TextureLoader().load(\"textures/soil_decal.png\", function(texture) {\n            texture.wrapS = THREE.RepeatWrapping;\n            texture.wrapT = THREE.RepeatWrapping;\n            texture.repeat.set(w / _SECTION_W, 1);\n            var material = new THREE.MeshBasicMaterial({ map: texture });\n            var geometry = new THREE.PlaneGeometry(w, _SECTION_W, 1);\n            var plane = new THREE.Mesh(geometry, material);\n            plane.position.set(x, -320 * 0.5 - self.HGAP - 32, z + 128 * 0.5);\n            //plane.rotation.x = -Math.PI / 2;\n            scene.add(plane);\n        });\n    }\n\n    _buildSoil2(scene, x, z, w, d, h) {\n        let self = this;\n\n        let _SECTION_W = 320;\n        var texture = new THREE.TextureLoader().load(\"textures/soil_decal.png\", function(texture) {\n            texture.wrapS = THREE.RepeatWrapping;\n            texture.wrapT = THREE.RepeatWrapping;\n            texture.repeat.set(w / _SECTION_W, 1);\n            var material = new THREE.MeshBasicMaterial({ map: texture });\n            var geometry = new THREE.PlaneGeometry(w, _SECTION_W, 1);\n            var plane = new THREE.Mesh(geometry, material);\n            plane.position.set(x, -320 * 0.5 - self.HGAP - 32, z + 128 * 0.5);\n            plane.rotation.y = Math.PI / 2;\n            scene.add(plane);\n        });\n    }\n\n    _buildRoad(scene, lane, x, z, w, d, h) {\n        // decal : 0x7b8496\n        // road : 0x525763\n        let _SECTION_W = 128;\n        var texture = new THREE.TextureLoader().load(\"textures/road_decal.png\", function(texture) {\n            texture.wrapS = THREE.RepeatWrapping;\n            texture.wrapT = THREE.RepeatWrapping;\n            texture.repeat.set(w / _SECTION_W, 2);\n            var material = new THREE.MeshBasicMaterial({ map: texture });\n            var geometry = new THREE.PlaneGeometry(w, _SECTION_W * lane, 1);\n            var plane = new THREE.Mesh(geometry, material);\n            plane.position.set(x, -h / 2 - 0.3, z);\n            plane.rotation.x = -Math.PI / 2;\n            scene.add(plane);\n        });\n    }\n    \n    _buildRailRoad(scene, lane, x, z, w, d, h) {\n        let _SECTION_W = 160;\n        var material = new THREE.MeshPhongMaterial({ color: 0x525763 });\n        var geometry = new THREE.PlaneGeometry(w, _SECTION_W * lane, 1);\n        var plane = new THREE.Mesh(geometry, material);\n        plane.position.set(x, -h / 2 - 0.3, z);\n        plane.rotation.x = -Math.PI / 2;\n        scene.add(plane);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/ground.js\n **/","import THREE from 'three';\n\nexport default class Label {\n    \n    // context.font=\"italic small-caps bold 12px arial\";\n    constructor(scene, text, x, y, z, font, color, backGroundColor, backgroundMargin) {\n        \n        if (typeof(backgroundMargin) === 'undefined')\n            backgroundMargin = 8;\n        \n        var canvas = document.createElement(\"canvas\");\n        \n        var context = canvas.getContext(\"2d\");\n        var fonts = font.split(' ');\n        var size = parseInt(fonts[3].split('px')[0])\n        var textAlign = 'left';\n        \n        // Autosize canvas\n        context.font = fonts.join(' ');\n        var textWidth = context.measureText(text).width;\n        canvas.width = textWidth + backgroundMargin;\n        canvas.height = size + backgroundMargin;\n        \n        // Autosize text\n        context.font = fonts.join(' ');\n        if (backGroundColor) {\n            context.fillStyle = backGroundColor;\n        }\n        \n        switch (textAlign) {\n            case 'left':\n                context.fillRect(0,\n                canvas.height / 2 - size / 2 - backgroundMargin / 2,\n                textWidth + backgroundMargin,\n                size + backgroundMargin);\n                break;            \n            case 'center':\n                context.fillRect(canvas.width / 2 - textWidth / 2 - backgroundMargin / 2,\n                canvas.height / 2 - size / 2 - backgroundMargin / 2,\n                textWidth + backgroundMargin,\n                size + backgroundMargin);\n                break;\n        }\n        \n        context.textAlign = textAlign;\n        context.textBaseline = \"middle\";\n        context.fillStyle = color;\n        \n        switch (textAlign) {\n            case 'left':\n                context.fillText(text, backgroundMargin / 2, canvas.height / 2);\n                break;            \n            case 'center':\n                context.fillText(text, canvas.width / 2, canvas.height / 2);\n                break;\n        }\n        \n        // context.strokeStyle = \"black\";\n        // context.strokeRect(0, 0, canvas.width, canvas.height);     \n        var texture = new THREE.Texture(canvas);\n        texture.needsUpdate = true;\n        var material = new THREE.MeshBasicMaterial({\n            map: texture\n        });\n        var mesh = new THREE.Mesh(new THREE.PlaneGeometry(canvas.width, canvas.height), material);\n        // mesh.overdraw = true;\n        //mesh.doubleSided = true;\n        \n        \n        switch (textAlign) {\n            case 'left':\n                mesh.position.x = x + canvas.width/2;\n                break;            \n            case 'center':\n                mesh.position.x = x;// - canvas.width;\n                break;\n        }\n        \n        \n        mesh.position.y = y;// - canvas.height;\n        mesh.position.z = z;\n        mesh.rotation.x = -Math.PI / 2;\n\n        scene.add(mesh);\n        return mesh;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/label.js\n **/","import THREE from 'three';\n//import MorphAnimMesh from '../lib/MorphAnimMesh';\n\nexport default class LoadModels {\n    constructor() {\n        this.foot1 = null;\n        this.foot2 = null;\n        this.body = null;\n\n    }\n    load() {\n        let self = this;\n        return new Promise(function (fulfill, reject) {\n            let loader = new THREE.JSONLoader();\n            loader.load('3d/body.json', function (geometry, materials) {\n                materials.forEach(function (e) {\n                    e.morphTargets = true;\n                });\n                let material = new THREE.MeshFaceMaterial(materials);\n                self.body = new THREE.MorphAnimMesh(geometry, material);\n                self.body.duration = 1200;\n\n                loader.load('3d/foot1.json', function (geometry, materials) {\n                    materials.forEach(function (e) {\n                        e.morphTargets = true;\n                    });\n                    let material = new THREE.MeshFaceMaterial(materials);\n                    self.foot1 = new THREE.MorphAnimMesh(geometry, material);\n                    self.foot1.duration = 1200;\n\n                    loader.load('3d/foot2.json', function (geometry, materials) {\n                        materials.forEach(function (e) {\n                            e.morphTargets = true;\n                        });\n                        let material = new THREE.MeshFaceMaterial(materials);\n                        self.foot2 = new THREE.MorphAnimMesh(geometry, material);\n                        self.foot2.duration = 1200;\n                        fulfill();\n                    });\n                });\n            });\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/loadmodel.js\n **/","import THREE from 'three';\n\nexport default class Logo {\n    constructor(scene) {\n        var map = new THREE.TextureLoader().load(\"textures/devscape_logo.png\", function (texture) {\n            var material = new THREE.SpriteMaterial({ map: texture, color: 0xffffff });\n            var sprite = new THREE.Sprite(material);\n            sprite.position.set(-220, 200, 1);\n            sprite.position.normalize();\n            scene.add(sprite);\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/logo.js\n **/","import THREE from 'three';\nimport Config from '../config';\n\nexport default class Traffic {\n    constructor(scene) {\n        \n        let self = this;\n        self.MIN_EDGE = -3200;\n        self.MAX_EDGE = 1600;\n        self.Z0 = 200; \n\n        // vehicles\n        self.vehicles = [];        \n        var loader = new THREE.OBJMTLLoader();\n        loader.load('3d/Truck.obj', '3d/Truck.mtl', function(obj3d) {\n            obj3d.scale.set(Config.SCALE *2 , Config.SCALE*2 , Config.SCALE*2 );\n            var _obj3d;\n            \n            // truck 1 : max -> min\n            _obj3d = obj3d.clone();\n            _obj3d.position.set(self.MAX_EDGE, 0, self.Z0 + 320 - 16);\n            _obj3d.rotation.y = Math.PI/2;\n            scene.add(_obj3d);\n            self.vehicles.push(_obj3d);\n            \n            // truck 1.1 : max -> min\n            _obj3d = _obj3d.clone();\n            _obj3d.position.set(self.MAX_EDGE - 320, 0, self.Z0 + 320 - 16);\n            scene.add(_obj3d);\n            self.vehicles.push(_obj3d);\n            \n            // truck 2 : min -> max\n            _obj3d = obj3d.clone();\n            _obj3d.position.set(self.MIN_EDGE + 320 + 400, 0, self.Z0 + 200 - 16);\n            _obj3d.rotation.y = -Math.PI/2;\n            scene.add(_obj3d);\n            self.vehicles.push(_obj3d);\n            \n            // truck 2.1 : min -> max\n            _obj3d = _obj3d.clone();\n            _obj3d.position.set(self.MIN_EDGE + 320 + 400 + 400, 0, self.Z0 + 200 - 16);\n            scene.add(_obj3d);\n            self.vehicles.push(_obj3d);\n        });\n        \n        /*\n        // bus\n        var loader = new THREE.OBJMTLLoader();\n        loader.load('3d/BusNo8.obj', '3d/BusNo8.mtl', function(obj3d) {\n            obj3d.scale.set(Config.SCALE*2 , Config.SCALE*2 , Config.SCALE*2 );\n            var _obj3d;\n            \n            // bus 1 : max -> min\n            _obj3d = obj3d.clone();\n            _obj3d.position.set(self.MAX_EDGE - 640 - 320, 0, self.Z0 + 320 - 16);\n            _obj3d.rotation.y = Math.PI/2;\n            scene.add(_obj3d);\n            self.vehicles.push(_obj3d);\n            \n            _obj3d.name = 'bus';\n       });\n       */\n        \n        // cars\n        var loader = new THREE.OBJMTLLoader();\n        loader.load('3d/Car.obj', '3d/Car.mtl', function(obj3d) {\n            obj3d.scale.set(Config.SCALE*2 , Config.SCALE*2 , Config.SCALE*2 );\n            var _obj3d;\n            \n            // car 1 : max -> min\n            _obj3d = obj3d.clone();\n            _obj3d.position.set(self.MAX_EDGE - 640, 0, self.Z0 + 320 - 16);\n            _obj3d.rotation.y = Math.PI/2;\n            scene.add(_obj3d);\n            self.vehicles.push(_obj3d);\n            _obj3d.name = 'car';\n       });\n       \n        // cars yellow\n        var loader = new THREE.OBJMTLLoader();\n        loader.load('3d/Car.obj', '3d/CarYellow.mtl', function(obj3d) {\n            obj3d.scale.set(Config.SCALE*2 , Config.SCALE*2 , Config.SCALE*2 );\n            var _obj3d;\n            \n            // car yellow : min -> max\n            _obj3d = obj3d.clone();\n            _obj3d.position.set(self.MIN_EDGE, 0, self.Z0 + 200 - 16);\n            _obj3d.rotation.y = -Math.PI/2;\n            scene.add(_obj3d);\n            self.vehicles.push(_obj3d);\n            //_obj3d.name = 'car';\n       });\n       \n        // train\n        var loader = new THREE.OBJMTLLoader();\n        loader.load('3d/Train.obj', '3d/Train.mtl', function(obj3d) {\n            obj3d.scale.set(Config.SCALE*2 , Config.SCALE*2 , Config.SCALE*2 );\n            var _obj3d;\n            let train_x0 = 1500;\n            \n            // Train 1 : max -> min\n            _obj3d = obj3d.clone();\n            _obj3d.position.set(self.MAX_EDGE + train_x0, 32, self.Z0 + 480 - 16 + 96);\n            _obj3d.rotation.y = Math.PI/2;\n            scene.add(_obj3d);\n            self.vehicles.push(_obj3d);\n            _obj3d.name = 'train';\n       });\n       \n        // train light\n        var loader = new THREE.OBJMTLLoader();\n        loader.load('3d/TrafficLight.obj', '3d/TrafficLight.mtl', function(obj3d) {\n            obj3d.scale.set(Config.SCALE*2 , Config.SCALE*2 , Config.SCALE*2 );\n            var _obj3d;\n\n            _obj3d = obj3d.clone();\n            _obj3d.position.set(-240, 0, 900);\n            _obj3d.rotation.y = -Math.PI/2;\n            scene.add(_obj3d);\n       });\n \n       return this\n    }\n    \n    update() {\n        let self = this;\n        \n        self.vehicles.forEach((obj3d) => {\n            // bound\n            if(obj3d.position.x < self.MIN_EDGE)\n            {\n                obj3d.position.x = self.MAX_EDGE;\n            } else if(obj3d.position.x > self.MAX_EDGE) \n            {\n                obj3d.position.x = self.MIN_EDGE;\n            }\n            \n            // move baby move\n            if(obj3d.name == 'train') {\n                obj3d.translateZ(-16);\n            } else {\n                obj3d.translateZ(-8);\n            }\n        })\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/traffic.js\n **/","/**\n * Loads a Wavefront .mtl file specifying materials\n *\n * @author angelxuanchang\n */\nimport THREE from 'three';\n\nTHREE.MTLLoader = function( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.MTLLoader.prototype = {\n\n\tconstructor: THREE.MTLLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.XHRLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetBaseUrl: function( value ) {\n\n\t\tthis.baseUrl = value;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tsetMaterialOptions: function ( value ) {\n\n\t\tthis.materialOptions = value;\n\n\t},\n\n\t/**\n\t * Parses loaded MTL file\n\t * @param text - Content of MTL file\n\t * @return {THREE.MTLLoader.MaterialCreator}\n\t */\n\tparse: function ( text ) {\n\n\t\tvar lines = text.split( \"\\n\" );\n\t\tvar info = {};\n\t\tvar delimiter_pattern = /\\s+/;\n\t\tvar materialsInfo = {};\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tvar line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t// Blank line or comment ignore\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar pos = line.indexOf( ' ' );\n\n\t\t\tvar key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\tkey = key.toLowerCase();\n\n\t\t\tvar value = ( pos >= 0 ) ? line.substring( pos + 1 ) : \"\";\n\t\t\tvalue = value.trim();\n\n\t\t\tif ( key === \"newmtl\" ) {\n\n\t\t\t\t// New material\n\n\t\t\t\tinfo = { name: value };\n\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t} else if ( info ) {\n\n\t\t\t\tif ( key === \"ka\" || key === \"kd\" || key === \"ks\" ) {\n\n\t\t\t\t\tvar ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar materialCreator = new THREE.MTLLoader.MaterialCreator( this.baseUrl, this.materialOptions );\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\tmaterialCreator.setManager( this.manager );\n\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\treturn materialCreator;\n\n\t}\n\n};\n\n/**\n * Create a new THREE-MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n *                  invertTransparency: If transparency need to be inverted (inversion is needed if d = 0 is fully opaque)\n *                                      Default: false (d = 1 is fully opaque)\n * @constructor\n */\n\nTHREE.MTLLoader.MaterialCreator = function( baseUrl, options ) {\n\n\tthis.baseUrl = baseUrl;\n\tthis.options = options;\n\tthis.materialsInfo = {};\n\tthis.materials = {};\n\tthis.materialsArray = [];\n\tthis.nameLookup = {};\n\n\tthis.side = ( this.options && this.options.side ) ? this.options.side : THREE.FrontSide;\n\tthis.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : THREE.RepeatWrapping;\n\n};\n\nTHREE.MTLLoader.MaterialCreator.prototype = {\n\n\tconstructor: THREE.MTLLoader.MaterialCreator,\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tsetManager: function ( value ) {\n\n\t\tthis.manager = value;\n\n\t},\n\n\tsetMaterials: function( materialsInfo ) {\n\n\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t},\n\n\tconvert: function( materialsInfo ) {\n\n\t\tif ( ! this.options ) return materialsInfo;\n\n\t\tvar converted = {};\n\n\t\tfor ( var mn in materialsInfo ) {\n\n\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\tvar mat = materialsInfo[ mn ];\n\n\t\t\tvar covmat = {};\n\n\t\t\tconverted[ mn ] = covmat;\n\n\t\t\tfor ( var prop in mat ) {\n\n\t\t\t\tvar save = true;\n\t\t\t\tvar value = mat[ prop ];\n\t\t\t\tvar lprop = prop.toLowerCase();\n\n\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\tcase 'kd':\n\t\t\t\t\tcase 'ka':\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 1 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'd':\n\n\t\t\t\t\t\t// According to MTL format (http://paulbourke.net/dataformats/mtl/):\n\t\t\t\t\t\t//   d is dissolve for current material\n\t\t\t\t\t\t//   factor of 1.0 is fully opaque, a factor of 0 is fully dissolved (completely transparent)\n\n\t\t\t\t\t\tif ( this.options && this.options.invertTransparency ) {\n\n\t\t\t\t\t\t\tvalue = 1 - value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( save ) {\n\n\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn converted;\n\n\t},\n\n\tpreload: function () {\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.create( mn );\n\n\t\t}\n\n\t},\n\n\tgetIndex: function( materialName ) {\n\n\t\treturn this.nameLookup[ materialName ];\n\n\t},\n\n\tgetAsArray: function() {\n\n\t\tvar index = 0;\n\n\t\tfor ( var mn in this.materialsInfo ) {\n\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\tindex ++;\n\n\t\t}\n\n\t\treturn this.materialsArray;\n\n\t},\n\n\tcreate: function ( materialName ) {\n\n\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\tthis.createMaterial_( materialName );\n\n\t\t}\n\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\tcreateMaterial_: function ( materialName ) {\n\n\t\t// Create material\n\n\t\tvar mat = this.materialsInfo[ materialName ];\n\t\tvar params = {\n\n\t\t\tname: materialName,\n\t\t\tside: this.side\n\n\t\t};\n\n\t\tfor ( var prop in mat ) {\n\n\t\t\tvar value = mat[ prop ];\n\n\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\tcase 'kd':\n\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\tparams[ 'diffuse' ] = new THREE.Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ka':\n\n\t\t\t\t\t// Ambient color (color under shadow) using RGB values\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ks':\n\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\tparams[ 'specular' ] = new THREE.Color().fromArray( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\tparams[ 'map' ] = this.loadTexture( this.baseUrl + value );\n\t\t\t\t\tparams[ 'map' ].wrapS = this.wrap;\n\t\t\t\t\tparams[ 'map' ].wrapT = this.wrap;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ns':\n\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\tparams[ 'shininess' ] = value;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd':\n\n\t\t\t\t\t// According to MTL format (http://paulbourke.net/dataformats/mtl/):\n\t\t\t\t\t//   d is dissolve for current material\n\t\t\t\t\t//   factor of 1.0 is fully opaque, a factor of 0 is fully dissolved (completely transparent)\n\n\t\t\t\t\tif ( value < 1 ) {\n\n\t\t\t\t\t\tparams[ 'transparent' ] = true;\n\t\t\t\t\t\tparams[ 'opacity' ] = value;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_bump':\n\t\t\t\tcase 'bump':\n\n\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\tif ( params[ 'bumpMap' ] ) break; // Avoid loading twice.\n\n\t\t\t\t\tparams[ 'bumpMap' ] = this.loadTexture( this.baseUrl + value );\n\t\t\t\t\tparams[ 'bumpMap' ].wrapS = this.wrap;\n\t\t\t\t\tparams[ 'bumpMap' ].wrapT = this.wrap;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( params[ 'diffuse' ] ) {\n\n\t\t\tparams[ 'color' ] = params[ 'diffuse' ];\n\n\t\t}\n\n\t\tthis.materials[ materialName ] = new THREE.MeshPhongMaterial( params );\n\t\treturn this.materials[ materialName ];\n\n\t},\n\n\n\tloadTexture: function ( url, mapping, onLoad, onProgress, onError ) {\n\n\t\tvar texture;\n\t\tvar loader = THREE.Loader.Handlers.get( url );\n\t\tvar manager = ( this.manager !== undefined ) ? this.manager : THREE.DefaultLoadingManager;\n\n\t\tif ( loader !== null ) {\n\n\t\t\ttexture = loader.load( url, onLoad );\n\n\t\t} else {\n\n\t\t\ttexture = new THREE.Texture();\n\n\t\t\tloader = new THREE.ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\ttexture.image = THREE.MTLLoader.ensurePowerOfTwo_( image );\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t}\n\n};\n\nTHREE.MTLLoader.ensurePowerOfTwo_ = function ( image ) {\n\n\tif ( ! THREE.Math.isPowerOfTwo( image.width ) || ! THREE.Math.isPowerOfTwo( image.height ) ) {\n\n\t\tvar canvas = document.createElement( \"canvas\" );\n\t\tcanvas.width = THREE.MTLLoader.nextHighestPowerOfTwo_( image.width );\n\t\tcanvas.height = THREE.MTLLoader.nextHighestPowerOfTwo_( image.height );\n\n\t\tvar ctx = canvas.getContext( \"2d\" );\n\t\tctx.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\t\treturn canvas;\n\n\t}\n\n\treturn image;\n\n};\n\nTHREE.MTLLoader.nextHighestPowerOfTwo_ = function( x ) {\n\n\t-- x;\n\n\tfor ( var i = 1; i < 32; i <<= 1 ) {\n\n\t\tx = x | x >> i;\n\n\t}\n\n\treturn x + 1;\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.MTLLoader.prototype );\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/loaders/MTLLoader.js\n **/","/**\n * Loads a Wavefront .obj file with materials\n *\n * @author mrdoob / http://mrdoob.com/\n * @author angelxuanchang\n */\n\nimport THREE from 'three';\nimport MTLLoader from './MTLLoader';\n\nTHREE.OBJMTLLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.OBJMTLLoader.prototype = {\n\n\tconstructor: THREE.OBJMTLLoader,\n\n\tload: function ( url, mtlurl, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar mtlLoader = new THREE.MTLLoader( this.manager );\n\t\tmtlLoader.setBaseUrl( url.substr( 0, url.lastIndexOf( \"/\" ) + 1 ) );\n\t\tmtlLoader.setCrossOrigin( this.crossOrigin );\n\t\tmtlLoader.load( mtlurl, function ( materials ) {\n\n\t\t\tvar materialsCreator = materials;\n\t\t\tmaterialsCreator.preload();\n\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\n\t\t\tloader.setCrossOrigin( scope.crossOrigin );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar object = scope.parse( text );\n\n\t\t\t\tobject.traverse( function ( object ) {\n\n\t\t\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\t\t\tif ( object.material.name ) {\n\n\t\t\t\t\t\t\tvar material = materialsCreator.create( object.material.name );\n\n\t\t\t\t\t\t\tif ( material ) object.material = material;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tonLoad( object );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\t/**\n\t * Parses loaded .obj file\n\t * @param data - content of .obj file\n\t * @param mtllibCallback - callback to handle mtllib declaration (optional)\n\t * @return {THREE.Object3D} - Object3D (with default material)\n\t */\n\n\tparse: function ( data, mtllibCallback ) {\n\n\t\tfunction vector( x, y, z ) {\n\n\t\t\treturn new THREE.Vector3( x, y, z );\n\n\t\t}\n\n\t\tfunction uv( u, v ) {\n\n\t\t\treturn new THREE.Vector2( u, v );\n\n\t\t}\n\n\t\tfunction face3( a, b, c, normals ) {\n\n\t\t\treturn new THREE.Face3( a, b, c, normals );\n\n\t\t}\n\n\t\tvar face_offset = 0;\n\n\t\tfunction meshN( meshName, materialName ) {\n\n\t\t\tif ( vertices.length > 0 ) {\n\n\t\t\t\tgeometry.vertices = vertices;\n\n\t\t\t\tgeometry.mergeVertices();\n\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tobject.add( mesh );\n\n\t\t\t\tgeometry = new THREE.Geometry();\n\t\t\t\tmesh = new THREE.Mesh( geometry, material );\n\n\t\t\t}\n\n\t\t\tif ( meshName !== undefined ) mesh.name = meshName;\n\n\t\t\tif ( materialName !== undefined ) {\n\n\t\t\t\tmaterial = new THREE.MeshLambertMaterial();\n\t\t\t\tmaterial.name = materialName;\n\n\t\t\t\tmesh.material = material;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar group = new THREE.Group();\n\t\tvar object = group;\n\n\t\tvar geometry = new THREE.Geometry();\n\t\tvar material = new THREE.MeshLambertMaterial();\n\t\tvar mesh = new THREE.Mesh( geometry, material );\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tfunction add_face( a, b, c, normals_inds ) {\n\n\t\t\tif ( normals_inds === undefined ) {\n\n\t\t\t\tgeometry.faces.push( face3(\n\t\t\t\t\tparseInt( a ) - ( face_offset + 1 ),\n\t\t\t\t\tparseInt( b ) - ( face_offset + 1 ),\n\t\t\t\t\tparseInt( c ) - ( face_offset + 1 )\n\t\t\t\t) );\n\n\t\t\t} else {\n\n\t\t\t\tgeometry.faces.push( face3(\n\t\t\t\t\tparseInt( a ) - ( face_offset + 1 ),\n\t\t\t\t\tparseInt( b ) - ( face_offset + 1 ),\n\t\t\t\t\tparseInt( c ) - ( face_offset + 1 ),\n\t\t\t\t\t[\n\t\t\t\t\t\tnormals[ parseInt( normals_inds[ 0 ] ) - 1 ].clone(),\n\t\t\t\t\t\tnormals[ parseInt( normals_inds[ 1 ] ) - 1 ].clone(),\n\t\t\t\t\t\tnormals[ parseInt( normals_inds[ 2 ] ) - 1 ].clone()\n\t\t\t\t\t]\n\t\t\t\t) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction add_uvs( a, b, c ) {\n\n\t\t\tgeometry.faceVertexUvs[ 0 ].push( [\n\t\t\t\tuvs[ parseInt( a ) - 1 ].clone(),\n\t\t\t\tuvs[ parseInt( b ) - 1 ].clone(),\n\t\t\t\tuvs[ parseInt( c ) - 1 ].clone()\n\t\t\t] );\n\n\t\t}\n\n\t\tfunction handle_face_line( faces, uvs, normals_inds ) {\n\n\t\t\tif ( faces[ 3 ] === undefined ) {\n\n\t\t\t\tadd_face( faces[ 0 ], faces[ 1 ], faces[ 2 ], normals_inds );\n\n\t\t\t\tif ( ! ( uvs === undefined ) && uvs.length > 0 ) {\n\n\t\t\t\t\tadd_uvs( uvs[ 0 ], uvs[ 1 ], uvs[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( ! ( normals_inds === undefined ) && normals_inds.length > 0 ) {\n\n\t\t\t\t\tadd_face( faces[ 0 ], faces[ 1 ], faces[ 3 ], [ normals_inds[ 0 ], normals_inds[ 1 ], normals_inds[ 3 ] ] );\n\t\t\t\t\tadd_face( faces[ 1 ], faces[ 2 ], faces[ 3 ], [ normals_inds[ 1 ], normals_inds[ 2 ], normals_inds[ 3 ] ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tadd_face( faces[ 0 ], faces[ 1 ], faces[ 3 ] );\n\t\t\t\t\tadd_face( faces[ 1 ], faces[ 2 ], faces[ 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( uvs === undefined ) && uvs.length > 0 ) {\n\n\t\t\t\t\tadd_uvs( uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] );\n\t\t\t\t\tadd_uvs( uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// v float float float\n\n\t\tvar vertex_pattern = /v( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)/;\n\n\t\t// vn float float float\n\n\t\tvar normal_pattern = /vn( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)/;\n\n\t\t// vt float float\n\n\t\tvar uv_pattern = /vt( +[\\d|\\.|\\+|\\-|e]+)( +[\\d|\\.|\\+|\\-|e]+)/;\n\n\t\t// f vertex vertex vertex ...\n\n\t\tvar face_pattern1 = /f( +\\d+)( +\\d+)( +\\d+)( +\\d+)?/;\n\n\t\t// f vertex/uv vertex/uv vertex/uv ...\n\n\t\tvar face_pattern2 = /f( +(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+))?/;\n\n\t\t// f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n\n\t\tvar face_pattern3 = /f( +(\\d+)\\/(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+)\\/(\\d+))( +(\\d+)\\/(\\d+)\\/(\\d+))?/;\n\n\t\t// f vertex//normal vertex//normal vertex//normal ...\n\n\t\tvar face_pattern4 = /f( +(\\d+)\\/\\/(\\d+))( +(\\d+)\\/\\/(\\d+))( +(\\d+)\\/\\/(\\d+))( +(\\d+)\\/\\/(\\d+))?/;\n\n\t\t//\n\n\t\tvar lines = data.split( \"\\n\" );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tvar line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tvar result;\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t} else if ( ( result = vertex_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n\n\t\t\t\tvertices.push( vector(\n\t\t\t\t\tparseFloat( result[ 1 ] ),\n\t\t\t\t\tparseFloat( result[ 2 ] ),\n\t\t\t\t\tparseFloat( result[ 3 ] )\n\t\t\t\t) );\n\n\t\t\t} else if ( ( result = normal_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\n\n\t\t\t\tnormals.push( vector(\n\t\t\t\t\tparseFloat( result[ 1 ] ),\n\t\t\t\t\tparseFloat( result[ 2 ] ),\n\t\t\t\t\tparseFloat( result[ 3 ] )\n\t\t\t\t) );\n\n\t\t\t} else if ( ( result = uv_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// [\"vt 0.1 0.2\", \"0.1\", \"0.2\"]\n\n\t\t\t\tuvs.push( uv(\n\t\t\t\t\tparseFloat( result[ 1 ] ),\n\t\t\t\t\tparseFloat( result[ 2 ] )\n\t\t\t\t) );\n\n\t\t\t} else if ( ( result = face_pattern1.exec( line ) ) !== null ) {\n\n\t\t\t\t// [\"f 1 2 3\", \"1\", \"2\", \"3\", undefined]\n\n\t\t\t\thandle_face_line( [ result[ 1 ], result[ 2 ], result[ 3 ], result[ 4 ] ] );\n\n\t\t\t} else if ( ( result = face_pattern2.exec( line ) ) !== null ) {\n\n\t\t\t\t// [\"f 1/1 2/2 3/3\", \" 1/1\", \"1\", \"1\", \" 2/2\", \"2\", \"2\", \" 3/3\", \"3\", \"3\", undefined, undefined, undefined]\n\n\t\t\t\thandle_face_line(\n\t\t\t\t\t[ result[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ] ], //faces\n\t\t\t\t\t[ result[ 3 ], result[ 6 ], result[ 9 ], result[ 12 ] ] //uv\n\t\t\t\t);\n\n\t\t\t} else if ( ( result = face_pattern3.exec( line ) ) !== null ) {\n\n\t\t\t\t// [\"f 1/1/1 2/2/2 3/3/3\", \" 1/1/1\", \"1\", \"1\", \"1\", \" 2/2/2\", \"2\", \"2\", \"2\", \" 3/3/3\", \"3\", \"3\", \"3\", undefined, undefined, undefined, undefined]\n\n\t\t\t\thandle_face_line(\n\t\t\t\t\t[ result[ 2 ], result[ 6 ], result[ 10 ], result[ 14 ] ], //faces\n\t\t\t\t\t[ result[ 3 ], result[ 7 ], result[ 11 ], result[ 15 ] ], //uv\n\t\t\t\t\t[ result[ 4 ], result[ 8 ], result[ 12 ], result[ 16 ] ] //normal\n\t\t\t\t);\n\n\t\t\t} else if ( ( result = face_pattern4.exec( line ) ) !== null ) {\n\n\t\t\t\t// [\"f 1//1 2//2 3//3\", \" 1//1\", \"1\", \"1\", \" 2//2\", \"2\", \"2\", \" 3//3\", \"3\", \"3\", undefined, undefined, undefined]\n\n\t\t\t\thandle_face_line(\n\t\t\t\t\t[ result[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ] ], //faces\n\t\t\t\t\t[ ], //uv\n\t\t\t\t\t[ result[ 3 ], result[ 6 ], result[ 9 ], result[ 12 ] ] //normal\n\t\t\t\t);\n\n\t\t\t} else if ( /^o /.test( line ) ) {\n\n\t\t\t\t// object\n\n\t\t\t\tmeshN();\n\t\t\t\tface_offset = face_offset + vertices.length;\n\t\t\t\tvertices = [];\n\t\t\t\tobject = new THREE.Object3D();\n\t\t\t\tobject.name = line.substring( 2 ).trim();\n\t\t\t\tgroup.add( object );\n\n\t\t\t} else if ( /^g /.test( line ) ) {\n\n\t\t\t\t// group\n\n\t\t\t\tmeshN( line.substring( 2 ).trim(), undefined );\n\n\t\t\t} else if ( /^usemtl /.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tmeshN( undefined, line.substring( 7 ).trim() );\n\n\t\t\t} else if ( /^mtllib /.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tif ( mtllibCallback ) {\n\n\t\t\t\t\tvar mtlfile = line.substring( 7 );\n\t\t\t\t\tmtlfile = mtlfile.trim();\n\t\t\t\t\tmtllibCallback( mtlfile );\n\n\t\t\t\t}\n\n\t\t\t} else if ( /^s /.test( line ) ) {\n\n\t\t\t\t// Smooth shading\n\n\t\t\t} else {\n\n\t\t\t\tconsole.log( \"THREE.OBJMTLLoader: Unhandled line \" + line );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//Add last object\n\t\tmeshN( undefined, undefined );\n\n\t\treturn group;\n\n\t}\n\n};\n\nTHREE.EventDispatcher.prototype.apply( THREE.OBJMTLLoader.prototype );\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/loaders/OBJMTLLoader.js\n **/","import { createStore } from 'redux';\n\nlet ACTIONS = {\n\tADD_TODO: ({ todos, ...state }, { text }) => ({\n\t\ttodos: [...todos, {\n\t\t\tid: Math.random().toString(36).substring(2),\n\t\t\ttext\n\t\t}],\n\t\t...state\n\t}),\n\n\tREMOVE_TODO: ({ todos, ...state }, { todo }) => ({\n\t\ttodos: todos.filter( i => i!==todo ),\n\t\t...state\n\t})\n};\n\nconst INITIAL = {\n\ttodos: []\n};\n\nexport default createStore( (state, action) => {\n\treturn action && ACTIONS[action.type] ? ACTIONS[action.type](state, action) : state || INITIAL;\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/store.js\n **/","/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n'use strict';\n\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    arguments: true,\n    arity: true\n};\n\nmodule.exports = function hoistNonReactStatics(targetComponent, sourceComponent) {\n    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n        var keys = Object.getOwnPropertyNames(sourceComponent);\n        for (var i=0; i<keys.length; ++i) {\n            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]]) {\n                try {\n                    targetComponent[keys[i]] = sourceComponent[keys[i]];\n                } catch (error) {\n\n                }\n            }\n        }\n    }\n\n    return targetComponent;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hoist-non-react-statics/index.js\n ** module id = 36\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/invariant/browser.js\n ** module id = 37\n ** module chunks = 0\n **/","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetPrototype = Object.getPrototypeOf;\n\n/**\n * Gets the `[[Prototype]]` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {null|Object} Returns the `[[Prototype]]`.\n */\nfunction getPrototype(value) {\n  return nativeGetPrototype(Object(value));\n}\n\nmodule.exports = getPrototype;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_getPrototype.js\n ** module id = 38\n ** module chunks = 0\n **/","/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_isHostObject.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isObjectLike.js\n ** module id = 40\n ** module chunks = 0\n **/","/*!\r\n    Papergirl -- XHR+ETAG\r\n    Version 0.6.1\r\n*/\r\n(function() {\r\nvar define, requireModule, require, requirejs;\r\n\r\n(function() {\r\n  var registry = {}, seen = {};\r\n\r\n  define = function(name, deps, callback) {\r\n    registry[name] = { deps: deps, callback: callback };\r\n  };\r\n\r\n  requirejs = require = requireModule = function(name) {\r\n  requirejs._eak_seen = registry;\r\n\r\n    if (seen[name]) { return seen[name]; }\r\n    seen[name] = {};\r\n\r\n    if (!registry[name]) {\r\n      throw new Error(\"Could not find module \" + name);\r\n    }\r\n\r\n    var mod = registry[name],\r\n        deps = mod.deps,\r\n        callback = mod.callback,\r\n        reified = [],\r\n        exports;\r\n\r\n    for (var i=0, l=deps.length; i<l; i++) {\r\n      if (deps[i] === 'exports') {\r\n        reified.push(exports = {});\r\n      } else {\r\n        reified.push(requireModule(resolve(deps[i])));\r\n      }\r\n    }\r\n\r\n    var value = callback.apply(this, reified);\r\n    return seen[name] = exports || value;\r\n\r\n    function resolve(child) {\r\n      if (child.charAt(0) !== '.') { return child; }\r\n      var parts = child.split(\"/\");\r\n      var parentBase = name.split(\"/\").slice(0, -1);\r\n\r\n      for (var i=0, l=parts.length; i<l; i++) {\r\n        var part = parts[i];\r\n\r\n        if (part === '..') { parentBase.pop(); }\r\n        else if (part === '.') { continue; }\r\n        else { parentBase.push(part); }\r\n      }\r\n\r\n      return parentBase.join(\"/\");\r\n    }\r\n  };\r\n})();\r\n\r\ndefine(\"promise/all\", \r\n  [\"./utils\",\"exports\"],\r\n  function(__dependency1__, __exports__) {\r\n    \"use strict\";\r\n    /* global toString */\r\n\r\n    var isArray = __dependency1__.isArray;\r\n    var isFunction = __dependency1__.isFunction;\r\n\r\n    /**\r\n      Returns a promise that is fulfilled when all the given promises have been\r\n      fulfilled, or rejected if any of them become rejected. The return promise\r\n      is fulfilled with an array that gives all the values in the order they were\r\n      passed in the `promises` array argument.\r\n\r\n      Example:\r\n\r\n      ```javascript\r\n      var promise1 = RSVP.resolve(1);\r\n      var promise2 = RSVP.resolve(2);\r\n      var promise3 = RSVP.resolve(3);\r\n      var promises = [ promise1, promise2, promise3 ];\r\n\r\n      RSVP.all(promises).then(function(array){\r\n        // The array here would be [ 1, 2, 3 ];\r\n      });\r\n      ```\r\n\r\n      If any of the `promises` given to `RSVP.all` are rejected, the first promise\r\n      that is rejected will be given as an argument to the returned promises's\r\n      rejection handler. For example:\r\n\r\n      Example:\r\n\r\n      ```javascript\r\n      var promise1 = RSVP.resolve(1);\r\n      var promise2 = RSVP.reject(new Error(\"2\"));\r\n      var promise3 = RSVP.reject(new Error(\"3\"));\r\n      var promises = [ promise1, promise2, promise3 ];\r\n\r\n      RSVP.all(promises).then(function(array){\r\n        // Code here never runs because there are rejected promises!\r\n      }, function(error) {\r\n        // error.message === \"2\"\r\n      });\r\n      ```\r\n\r\n      @method all\r\n      @for RSVP\r\n      @param {Array} promises\r\n      @param {String} label\r\n      @return {Promise} promise that is fulfilled when all `promises` have been\r\n      fulfilled, or rejected if any of them become rejected.\r\n    */\r\n    function all(promises) {\r\n      /*jshint validthis:true */\r\n      var Promise = this;\r\n\r\n      if (!isArray(promises)) {\r\n        throw new TypeError('You must pass an array to all.');\r\n      }\r\n\r\n      return new Promise(function(resolve, reject) {\r\n        var results = [], remaining = promises.length,\r\n        promise;\r\n\r\n        if (remaining === 0) {\r\n          resolve([]);\r\n        }\r\n\r\n        function resolver(index) {\r\n          return function(value) {\r\n            resolveAll(index, value);\r\n          };\r\n        }\r\n\r\n        function resolveAll(index, value) {\r\n          results[index] = value;\r\n          if (--remaining === 0) {\r\n            resolve(results);\r\n          }\r\n        }\r\n\r\n        for (var i = 0; i < promises.length; i++) {\r\n          promise = promises[i];\r\n\r\n          if (promise && isFunction(promise.then)) {\r\n            promise.then(resolver(i), reject);\r\n          } else {\r\n            resolveAll(i, promise);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    __exports__.all = all;\r\n  });\r\ndefine(\"promise/asap\", \r\n  [\"exports\"],\r\n  function(__exports__) {\r\n    \"use strict\";\r\n    var browserGlobal = (typeof window !== 'undefined') ? window : {};\r\n    var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\r\n    var local = (typeof global !== 'undefined') ? global : (this === undefined? window:this);\r\n\r\n    // node\r\n    function useNextTick() {\r\n      return function() {\r\n        process.nextTick(flush);\r\n      };\r\n    }\r\n\r\n    function useMutationObserver() {\r\n      var iterations = 0;\r\n      var observer = new BrowserMutationObserver(flush);\r\n      var node = document.createTextNode('');\r\n      observer.observe(node, { characterData: true });\r\n\r\n      return function() {\r\n        node.data = (iterations = ++iterations % 2);\r\n      };\r\n    }\r\n\r\n    function useSetTimeout() {\r\n      return function() {\r\n        local.setTimeout(flush, 1);\r\n      };\r\n    }\r\n\r\n    var queue = [];\r\n    function flush() {\r\n      for (var i = 0; i < queue.length; i++) {\r\n        var tuple = queue[i];\r\n        var callback = tuple[0], arg = tuple[1];\r\n        callback(arg);\r\n      }\r\n      queue = [];\r\n    }\r\n\r\n    var scheduleFlush;\r\n\r\n    // Decide what async method to use to triggering processing of queued callbacks:\r\n    if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\r\n      scheduleFlush = useNextTick();\r\n    } else if (BrowserMutationObserver) {\r\n      scheduleFlush = useMutationObserver();\r\n    } else {\r\n      scheduleFlush = useSetTimeout();\r\n    }\r\n\r\n    function asap(callback, arg) {\r\n      var length = queue.push([callback, arg]);\r\n      if (length === 1) {\r\n        // If length is 1, that means that we need to schedule an async flush.\r\n        // If additional callbacks are queued before the queue is flushed, they\r\n        // will be processed by this flush that we are scheduling.\r\n        scheduleFlush();\r\n      }\r\n    }\r\n\r\n    __exports__.asap = asap;\r\n  });\r\ndefine(\"promise/config\", \r\n  [\"exports\"],\r\n  function(__exports__) {\r\n    \"use strict\";\r\n    var config = {\r\n      instrument: false\r\n    };\r\n\r\n    function configure(name, value) {\r\n      if (arguments.length === 2) {\r\n        config[name] = value;\r\n      } else {\r\n        return config[name];\r\n      }\r\n    }\r\n\r\n    __exports__.config = config;\r\n    __exports__.configure = configure;\r\n  });\r\ndefine(\"promise/polyfill\", \r\n  [\"./promise\",\"./utils\",\"exports\"],\r\n  function(__dependency1__, __dependency2__, __exports__) {\r\n    \"use strict\";\r\n    /*global self*/\r\n    var RSVPPromise = __dependency1__.Promise;\r\n    var isFunction = __dependency2__.isFunction;\r\n\r\n    function polyfill() {\r\n      var local;\r\n\r\n      if (typeof global !== 'undefined') {\r\n        local = global;\r\n      } else if (typeof window !== 'undefined' && window.document) {\r\n        local = window;\r\n      } else {\r\n        local = self;\r\n      }\r\n\r\n      var es6PromiseSupport = \r\n        \"Promise\" in local &&\r\n        // Some of these methods are missing from\r\n        // Firefox/Chrome experimental implementations\r\n        \"resolve\" in local.Promise &&\r\n        \"reject\" in local.Promise &&\r\n        \"all\" in local.Promise &&\r\n        \"race\" in local.Promise &&\r\n        // Older version of the spec had a resolver object\r\n        // as the arg rather than a function\r\n        (function() {\r\n          var resolve;\r\n          new local.Promise(function(r) { resolve = r; });\r\n          return isFunction(resolve);\r\n        }());\r\n\r\n      if (!es6PromiseSupport) {\r\n        local.Promise = RSVPPromise;\r\n      }\r\n    }\r\n\r\n    __exports__.polyfill = polyfill;\r\n  });\r\ndefine(\"promise/promise\", \r\n  [\"./config\",\"./utils\",\"./all\",\"./race\",\"./resolve\",\"./reject\",\"./asap\",\"exports\"],\r\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __dependency6__, __dependency7__, __exports__) {\r\n    \"use strict\";\r\n    var config = __dependency1__.config;\r\n    var configure = __dependency1__.configure;\r\n    var objectOrFunction = __dependency2__.objectOrFunction;\r\n    var isFunction = __dependency2__.isFunction;\r\n    var now = __dependency2__.now;\r\n    var all = __dependency3__.all;\r\n    var race = __dependency4__.race;\r\n    var staticResolve = __dependency5__.resolve;\r\n    var staticReject = __dependency6__.reject;\r\n    var asap = __dependency7__.asap;\r\n\r\n    var counter = 0;\r\n\r\n    config.async = asap; // default async is asap;\r\n\r\n    function Promise(resolver) {\r\n      if (!isFunction(resolver)) {\r\n        throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\r\n      }\r\n\r\n      if (!(this instanceof Promise)) {\r\n        throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\r\n      }\r\n\r\n      this._subscribers = [];\r\n\r\n      invokeResolver(resolver, this);\r\n    }\r\n\r\n    function invokeResolver(resolver, promise) {\r\n      function resolvePromise(value) {\r\n        resolve(promise, value);\r\n      }\r\n\r\n      function rejectPromise(reason) {\r\n        reject(promise, reason);\r\n      }\r\n\r\n      try {\r\n        resolver(resolvePromise, rejectPromise);\r\n      } catch(e) {\r\n        rejectPromise(e);\r\n      }\r\n    }\r\n\r\n    function invokeCallback(settled, promise, callback, detail) {\r\n      var hasCallback = isFunction(callback),\r\n          value, error, succeeded, failed;\r\n\r\n      if (hasCallback) {\r\n        try {\r\n          value = callback(detail);\r\n          succeeded = true;\r\n        } catch(e) {\r\n          failed = true;\r\n          error = e;\r\n        }\r\n      } else {\r\n        value = detail;\r\n        succeeded = true;\r\n      }\r\n\r\n      if (handleThenable(promise, value)) {\r\n        return;\r\n      } else if (hasCallback && succeeded) {\r\n        resolve(promise, value);\r\n      } else if (failed) {\r\n        reject(promise, error);\r\n      } else if (settled === FULFILLED) {\r\n        resolve(promise, value);\r\n      } else if (settled === REJECTED) {\r\n        reject(promise, value);\r\n      }\r\n    }\r\n\r\n    var PENDING   = void 0;\r\n    var SEALED    = 0;\r\n    var FULFILLED = 1;\r\n    var REJECTED  = 2;\r\n\r\n    function subscribe(parent, child, onFulfillment, onRejection) {\r\n      var subscribers = parent._subscribers;\r\n      var length = subscribers.length;\r\n\r\n      subscribers[length] = child;\r\n      subscribers[length + FULFILLED] = onFulfillment;\r\n      subscribers[length + REJECTED]  = onRejection;\r\n    }\r\n\r\n    function publish(promise, settled) {\r\n      var child, callback, subscribers = promise._subscribers, detail = promise._detail;\r\n\r\n      for (var i = 0; i < subscribers.length; i += 3) {\r\n        child = subscribers[i];\r\n        callback = subscribers[i + settled];\r\n\r\n        invokeCallback(settled, child, callback, detail);\r\n      }\r\n\r\n      promise._subscribers = null;\r\n    }\r\n\r\n    Promise.prototype = {\r\n      constructor: Promise,\r\n\r\n      _state: undefined,\r\n      _detail: undefined,\r\n      _subscribers: undefined,\r\n\r\n      then: function(onFulfillment, onRejection) {\r\n        var promise = this;\r\n\r\n        var thenPromise = new this.constructor(function() {});\r\n\r\n        if (this._state) {\r\n          var callbacks = arguments;\r\n          config.async(function invokePromiseCallback() {\r\n            invokeCallback(promise._state, thenPromise, callbacks[promise._state - 1], promise._detail);\r\n          });\r\n        } else {\r\n          subscribe(this, thenPromise, onFulfillment, onRejection);\r\n        }\r\n\r\n        return thenPromise;\r\n      },\r\n\r\n      'catch': function(onRejection) {\r\n        return this.then(null, onRejection);\r\n      }\r\n    };\r\n\r\n    Promise.all = all;\r\n    Promise.race = race;\r\n    Promise.resolve = staticResolve;\r\n    Promise.reject = staticReject;\r\n\r\n    function handleThenable(promise, value) {\r\n      var then = null,\r\n      resolved;\r\n\r\n      try {\r\n        if (promise === value) {\r\n          throw new TypeError(\"A promises callback cannot return that same promise.\");\r\n        }\r\n\r\n        if (objectOrFunction(value)) {\r\n          then = value.then;\r\n\r\n          if (isFunction(then)) {\r\n            then.call(value, function(val) {\r\n              if (resolved) { return true; }\r\n              resolved = true;\r\n\r\n              if (value !== val) {\r\n                resolve(promise, val);\r\n              } else {\r\n                fulfill(promise, val);\r\n              }\r\n            }, function(val) {\r\n              if (resolved) { return true; }\r\n              resolved = true;\r\n\r\n              reject(promise, val);\r\n            });\r\n\r\n            return true;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        if (resolved) { return true; }\r\n        reject(promise, error);\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    function resolve(promise, value) {\r\n      if (promise === value) {\r\n        fulfill(promise, value);\r\n      } else if (!handleThenable(promise, value)) {\r\n        fulfill(promise, value);\r\n      }\r\n    }\r\n\r\n    function fulfill(promise, value) {\r\n      if (promise._state !== PENDING) { return; }\r\n      promise._state = SEALED;\r\n      promise._detail = value;\r\n\r\n      config.async(publishFulfillment, promise);\r\n    }\r\n\r\n    function reject(promise, reason) {\r\n      if (promise._state !== PENDING) { return; }\r\n      promise._state = SEALED;\r\n      promise._detail = reason;\r\n\r\n      config.async(publishRejection, promise);\r\n    }\r\n\r\n    function publishFulfillment(promise) {\r\n      publish(promise, promise._state = FULFILLED);\r\n    }\r\n\r\n    function publishRejection(promise) {\r\n      publish(promise, promise._state = REJECTED);\r\n    }\r\n\r\n    __exports__.Promise = Promise;\r\n  });\r\ndefine(\"promise/race\", \r\n  [\"./utils\",\"exports\"],\r\n  function(__dependency1__, __exports__) {\r\n    \"use strict\";\r\n    /* global toString */\r\n    var isArray = __dependency1__.isArray;\r\n\r\n    /**\r\n      `RSVP.race` allows you to watch a series of promises and act as soon as the\r\n      first promise given to the `promises` argument fulfills or rejects.\r\n\r\n      Example:\r\n\r\n      ```javascript\r\n      var promise1 = new RSVP.Promise(function(resolve, reject){\r\n        setTimeout(function(){\r\n          resolve(\"promise 1\");\r\n        }, 200);\r\n      });\r\n\r\n      var promise2 = new RSVP.Promise(function(resolve, reject){\r\n        setTimeout(function(){\r\n          resolve(\"promise 2\");\r\n        }, 100);\r\n      });\r\n\r\n      RSVP.race([promise1, promise2]).then(function(result){\r\n        // result === \"promise 2\" because it was resolved before promise1\r\n        // was resolved.\r\n      });\r\n      ```\r\n\r\n      `RSVP.race` is deterministic in that only the state of the first completed\r\n      promise matters. For example, even if other promises given to the `promises`\r\n      array argument are resolved, but the first completed promise has become\r\n      rejected before the other promises became fulfilled, the returned promise\r\n      will become rejected:\r\n\r\n      ```javascript\r\n      var promise1 = new RSVP.Promise(function(resolve, reject){\r\n        setTimeout(function(){\r\n          resolve(\"promise 1\");\r\n        }, 200);\r\n      });\r\n\r\n      var promise2 = new RSVP.Promise(function(resolve, reject){\r\n        setTimeout(function(){\r\n          reject(new Error(\"promise 2\"));\r\n        }, 100);\r\n      });\r\n\r\n      RSVP.race([promise1, promise2]).then(function(result){\r\n        // Code here never runs because there are rejected promises!\r\n      }, function(reason){\r\n        // reason.message === \"promise2\" because promise 2 became rejected before\r\n        // promise 1 became fulfilled\r\n      });\r\n      ```\r\n\r\n      @method race\r\n      @for RSVP\r\n      @param {Array} promises array of promises to observe\r\n      @param {String} label optional string for describing the promise returned.\r\n      Useful for tooling.\r\n      @return {Promise} a promise that becomes fulfilled with the value the first\r\n      completed promises is resolved with if the first completed promise was\r\n      fulfilled, or rejected with the reason that the first completed promise\r\n      was rejected with.\r\n    */\r\n    function race(promises) {\r\n      /*jshint validthis:true */\r\n      var Promise = this;\r\n\r\n      if (!isArray(promises)) {\r\n        throw new TypeError('You must pass an array to race.');\r\n      }\r\n      return new Promise(function(resolve, reject) {\r\n        var results = [], promise;\r\n\r\n        for (var i = 0; i < promises.length; i++) {\r\n          promise = promises[i];\r\n\r\n          if (promise && typeof promise.then === 'function') {\r\n            promise.then(resolve, reject);\r\n          } else {\r\n            resolve(promise);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    __exports__.race = race;\r\n  });\r\ndefine(\"promise/reject\", \r\n  [\"exports\"],\r\n  function(__exports__) {\r\n    \"use strict\";\r\n    /**\r\n      `RSVP.reject` returns a promise that will become rejected with the passed\r\n      `reason`. `RSVP.reject` is essentially shorthand for the following:\r\n\r\n      ```javascript\r\n      var promise = new RSVP.Promise(function(resolve, reject){\r\n        reject(new Error('WHOOPS'));\r\n      });\r\n\r\n      promise.then(function(value){\r\n        // Code here doesn't run because the promise is rejected!\r\n      }, function(reason){\r\n        // reason.message === 'WHOOPS'\r\n      });\r\n      ```\r\n\r\n      Instead of writing the above, your code now simply becomes the following:\r\n\r\n      ```javascript\r\n      var promise = RSVP.reject(new Error('WHOOPS'));\r\n\r\n      promise.then(function(value){\r\n        // Code here doesn't run because the promise is rejected!\r\n      }, function(reason){\r\n        // reason.message === 'WHOOPS'\r\n      });\r\n      ```\r\n\r\n      @method reject\r\n      @for RSVP\r\n      @param {Any} reason value that the returned promise will be rejected with.\r\n      @param {String} label optional string for identifying the returned promise.\r\n      Useful for tooling.\r\n      @return {Promise} a promise that will become rejected with the given\r\n      `reason`.\r\n    */\r\n    function reject(reason) {\r\n      /*jshint validthis:true */\r\n      var Promise = this;\r\n\r\n      return new Promise(function (resolve, reject) {\r\n        reject(reason);\r\n      });\r\n    }\r\n\r\n    __exports__.reject = reject;\r\n  });\r\ndefine(\"promise/resolve\", \r\n  [\"exports\"],\r\n  function(__exports__) {\r\n    \"use strict\";\r\n    function resolve(value) {\r\n      /*jshint validthis:true */\r\n      if (value && typeof value === 'object' && value.constructor === this) {\r\n        return value;\r\n      }\r\n\r\n      var Promise = this;\r\n\r\n      return new Promise(function(resolve) {\r\n        resolve(value);\r\n      });\r\n    }\r\n\r\n    __exports__.resolve = resolve;\r\n  });\r\ndefine(\"promise/utils\", \r\n  [\"exports\"],\r\n  function(__exports__) {\r\n    \"use strict\";\r\n    function objectOrFunction(x) {\r\n      return isFunction(x) || (typeof x === \"object\" && x !== null);\r\n    }\r\n\r\n    function isFunction(x) {\r\n      return typeof x === \"function\";\r\n    }\r\n\r\n    function isArray(x) {\r\n      return Object.prototype.toString.call(x) === \"[object Array]\";\r\n    }\r\n\r\n    // Date.now is not available in browsers < IE9\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility\r\n    var now = Date.now || function() { return new Date().getTime(); };\r\n\r\n\r\n    __exports__.objectOrFunction = objectOrFunction;\r\n    __exports__.isFunction = isFunction;\r\n    __exports__.isArray = isArray;\r\n    __exports__.now = now;\r\n  });\r\nrequireModule('promise/polyfill').polyfill();\r\n}());(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"papergirl\"] = factory();\n\telse\n\t\troot[\"papergirl\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _localforage = __webpack_require__(1);\n\n\tvar _localforage2 = _interopRequireDefault(_localforage);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar papergirl = function (globalObject) {\n\t    'use strict';\n\n\t    var GLOBAL_NAMESPACE = 'papergirl';\n\t    var _S_ = '|';\n\t    var _NS_ = GLOBAL_NAMESPACE + _S_;\n\t    var version = '1.0.0';\n\n\t    var _window = function (window) {\n\t        return window;\n\t    }(globalObject);\n\n\t    function executeCallback(promise, callback, errorCallback) {\n\t        if (typeof callback === 'function') {\n\t            promise.then(callback);\n\t        }\n\n\t        if (typeof errorCallback === 'function') {\n\t            promise[\"catch\"](errorCallback);\n\t        }\n\t    }\n\n\t    var Papergirl = function () {\n\t        function Papergirl(options) {\n\t            _classCallCheck(this, Papergirl);\n\n\t            this.cacheFirst = 'cacheFirst';\n\t            this.networkFirst = 'networkFirst';\n\t            this.cacheOnly = 'cacheOnly';\n\t            this.networkOnly = 'networkOnly';\n\n\t            // Global storage.\n\t            options = options || {};\n\t            options.name = options.name || _NS_ + 'public' + _S_ + version;\n\t            this.storage = _localforage2[\"default\"].createInstance(options);\n\t        }\n\n\t        Papergirl.prototype.ready = function ready(callback) {\n\t            var promise = new Promise(function (resolve, reject) {\n\t                if (!_window) {\n\t                    reject(new Error('Something wrong.'));\n\t                } else {\n\t                    resolve(_window);\n\t                }\n\t            });\n\n\t            executeCallback(promise, callback, callback);\n\t            return promise;\n\t        };\n\n\t        Papergirl.prototype.createInstance = function createInstance(options) {\n\t            return new Papergirl(options);\n\t        };\n\n\t        // Methods -----------------------------------------------------------------------------------------------\n\n\t        Papergirl.prototype._request = function _request(url, options) {\n\t            var self = this;\n\n\t            // Options?\n\t            options = options || {};\n\n\t            // Return a new promise.\n\t            return new Promise(function (resolve, reject) {\n\t                // Do the usual XHR stuff\n\t                var xhr = options.xhr = XMLHttpRequest ? new XMLHttpRequest() : new window.ActiveXObject('Microsoft.XMLHTTP');\n\n\t                xhr.open('GET', url);\n\n\t                if (options.etag) {\n\t                    xhr.setRequestHeader('If-None-Match', options.etag);\n\t                }\n\n\t                xhr.onload = function () {\n\n\t                    // Hook onload state.\n\t                    self._hook(options, 'onload', [xhr]);\n\n\t                    // Free some ram.\n\t                    self.delloc = function (options) {\n\t                        if (options) {\n\t                            delete options.xhr;\n\t                            delete options.data;\n\t                            delete options.etag;\n\t                        }\n\t                    };\n\n\t                    switch (xhr.status) {\n\t                        case 200:\n\t                            // For faster reponse.\n\t                            var responseText = xhr.responseText || null;\n\n\t                            // Set data with etag.\n\t                            var etag;\n\t                            try {\n\t                                etag = options.etag = xhr.getResponseHeader('etag') || null;\n\t                            } catch (error) {\n\t                                console.log(error);\n\t                            }\n\n\t                            self.setData(url, responseText, etag).then(function (data) {\n\t                                // Has cached?\n\t                                if (options.data === null || typeof options.data === 'undefined') {\n\t                                    // Insert : no cached data\n\t                                    self._hook(options, 'insert', [data, url, options]);\n\n\t                                    // Will hook upsert\n\t                                    self._hook(options, 'upsert', [data, url, options]);\n\t                                } else {\n\t                                    // Cached, but equal?\n\t                                    if (options.data.length !== data.length || options.data !== data) {\n\t                                        // Update : cached size not equal new data size || cached data not equal new data\n\t                                        self._hook(options, 'update', [data, url, options]);\n\n\t                                        // Will hook upsert\n\t                                        self._hook(options, 'upsert', [data, url, options]);\n\t                                    } else {\n\t                                        // Local cached === Remote\n\t                                        self._hook(options, 'match', [data, url, options]);\n\t                                    }\n\t                                }\n\n\t                                // OK + cached\n\t                                self._hook(options, 'sync', [data, url, options]);\n\n\t                                // Done\n\t                                resolve(responseText);\n\n\t                                // Free some ram.\n\t                                self.delloc(options);\n\t                            });\n\n\t                            break;\n\t                        case 304:\n\t                            // No update, will use data in local storage.\n\t                            if (options.data) {\n\t                                // Hook not modify\n\t                                self._hook(options, 'not_mod', [options.data, url, options]);\n\n\t                                // OK, from cached\n\t                                self._hook(options, 'sync', [options.data, url, options]);\n\n\t                                // Cached data.\n\t                                resolve(options.data);\n\n\t                                // Free some ram.\n\t                                self.delloc(options);\n\t                            } else {\n\t                                // Clear invalid data.\n\t                                self.storage.removeData(url);\n\n\t                                // Free some ram.\n\t                                self.delloc(options);\n\n\t                                // Retry without etag, should get 200.\n\t                                self.request(url, options).then(resolve);\n\t                            }\n\n\t                            break;\n\t                        default:\n\t                            // Something wrong\n\t                            reject(new Error(xhr.statusText));\n\n\t                            // Free some ram.\n\t                            self.delloc(options);\n\t                            break;\n\t                    }\n\t                };\n\n\t                // Handle network errors.\n\t                xhr.onerror = function (e) {\n\t                    reject(new Error('Request Error : ' + e.target.status));\n\t                };\n\n\t                // Hook beforeSend state.\n\t                self._hook(options, 'beforeSend', [xhr]);\n\n\t                // Make a request.\n\t                xhr.send();\n\t            });\n\t        };\n\n\t        Papergirl.prototype._hook = function _hook(options, functionName, args) {\n\t            if (options && typeof options[functionName] === 'function') {\n\t                options[functionName].apply(this, args);\n\n\t                // Each events should happen only once.\n\t                options[functionName] = null;\n\t            }\n\t        };\n\n\t        // Expected : options.name as String\n\t        // Expected : upsert, insert, update, not_mod, remote, remote as function\n\t        // Expected : options.strategy as papergirl.cacheFirst, papergirl.networkFirst, papergirl.cacheOnly, papergirl.networkOnly\n\n\t        Papergirl.prototype.request = function request(url, options) {\n\t            var self = this;\n\n\t            // Options?\n\t            options = options || {};\n\n\t            // networkFirst\n\t            options.strategy = options.strategy || this.cacheFirst;\n\n\t            // Remote only\n\t            if (options.strategy === this.networkOnly) {\n\t                return self._request(url, options);\n\t            }\n\n\t            // networkFirst\n\t            if (options.strategy === this.networkFirst) {\n\t                return new Promise(function (resolve, reject) {\n\t                    return self._request(url, options).then(function (data) {\n\t                        // Success.\n\t                        resolve(data);\n\t                    })[\"catch\"](function (error) {\n\t                        // Fail, try cache.\n\t                        self.getData(url).then(function (data) {\n\t                            if (data) {\n\t                                resolve(data);\n\t                            } else {\n\t                                reject(new Error('Network Error and no cached. : ' + error));\n\t                            }\n\t                        });\n\t                    });\n\t                });\n\t            }\n\n\t            // cacheFirst\n\t            return self.storage.getItem(_NS_ + url).then(function (item) {\n\n\t                // Temporary inject : Use for speed look up overhead.\n\t                var data = item ? item[0] : null;\n\t                var etag = item ? item[1] : null;\n\t                options.data = data;\n\t                options.etag = etag;\n\n\t                // Rarely use, cache or die.\n\t                if (options.strategy === self.cacheOnly) {\n\t                    return new Promise(function (resolve, reject) {\n\t                        if (data) {\n\t                            resolve(data);\n\t                        } else {\n\t                            reject(new Error('No cached.'));\n\t                        }\n\t                    });\n\t                }\n\n\t                // Cached first.\n\t                if (data && options.strategy === self.cacheFirst) {\n\t                    self._hook(options, 'cache', [data, url, options]);\n\t                }\n\n\t                // Try fetch from remote.\n\t                return self._request(url, options);\n\t            });\n\t        };\n\n\t        // Core Methods -----------------------------------------------------------------------------------------------\n\n\t        Papergirl.prototype._getValueByIndex = function _getValueByIndex(index) {\n\t            return function (item) {\n\t                return new Promise(function (resolve) {\n\t                    resolve(item && item.length > index ? item[index] : null);\n\t                });\n\t            };\n\t        };\n\n\t        Papergirl.prototype.getData = function getData(url) {\n\t            return this.storage.getItem(_NS_ + url).then(this._getValueByIndex(0));\n\t        };\n\n\t        Papergirl.prototype.setData = function setData(url, data) {\n\t            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t                args[_key - 2] = arguments[_key];\n\t            }\n\n\t            return this.storage.setItem(_NS_ + url, [data].concat(args)).then(this._getValueByIndex(0));\n\t        };\n\n\t        Papergirl.prototype.removeData = function removeData(url) {\n\t            return this.storage.removeItem(_NS_ + url);\n\t        };\n\n\t        Papergirl.prototype.clear = function clear() {\n\t            var self = this;\n\t            return this.storage.iterate(function (value, key) {\n\t                // TODO : Chain promise here?, Devare by storeName?\n\t                if (key.indexOf(_NS_) === 0) {\n\t                    self.storage.removeItem(key);\n\t                }\n\t            });\n\t        };\n\n\t        Papergirl.prototype.getETAG = function getETAG(url) {\n\t            return this.storage.getItem(_NS_ + url).then(this._getValueByIndex(1));\n\t        };\n\n\t        // Public Methods -----------------------------------------------------------------------------------------------\n\n\t        // Expected got_catch, upsert via options\n\n\n\t        Papergirl.prototype.getCacheFirst = function getCacheFirst(url, options) {\n\t            // Cache first.\n\t            options = options || {};\n\t            options.strategy = this.cacheFirst;\n\n\t            // Then remote.\n\t            return this.request(url, options);\n\t        };\n\n\t        Papergirl.prototype.watch = function watch(me) {\n\t            // TODO : unique, timeout\n\t            var _me = me || {};\n\t            return new F(this, _me);\n\t        };\n\n\t        return Papergirl;\n\t    }();\n\n\t    var F = function () {\n\t        function F(parent, me) {\n\t            _classCallCheck(this, F);\n\n\t            this.parent = parent;\n\t            this.me = me;\n\t        }\n\n\t        F.prototype.onCache = function onCache(func) {\n\t            this._onCache = func;\n\t            return this;\n\t        };\n\n\t        F.prototype.onSend = function onSend(func) {\n\t            this._onSend = func;\n\t            return this;\n\t        };\n\n\t        F.prototype.onLoad = function onLoad(func) {\n\t            this._onLoad = func;\n\t            return this;\n\t        };\n\n\t        F.prototype.onInsert = function onInsert(func) {\n\t            this._onInsert = func;\n\t            return this;\n\t        };\n\n\t        F.prototype.onUpdate = function onUpdate(func) {\n\t            this._onUpdate = func;\n\t            return this;\n\t        };\n\n\t        F.prototype.onUpsert = function onUpsert(func) {\n\t            this._onUpsert = func;\n\t            return this;\n\t        };\n\n\t        F.prototype.onMatch = function onMatch(func) {\n\t            this._onMatch = func;\n\t            return this;\n\t        };\n\n\t        F.prototype.onSync = function onSync(func) {\n\t            this._onSync = func;\n\t            return this;\n\t        };\n\n\t        F.prototype.onError = function onError(func) {\n\t            this._onError = func;\n\t            return this;\n\t        };\n\n\t        F.prototype.request = function request(url, options) {\n\t            var self = this;\n\t            options = options || {};\n\t            options.strategy = this.cacheFirst;\n\n\t            options.cache = this._onCache;\n\t            options.beforeSend = this._onSend;\n\t            options.onload = this._onLoad;\n\t            options.insert = this._onInsert;\n\t            options.update = this._onUpdate;\n\t            options.upsert = this._onUpsert;\n\t            options.match = this._onMatch;\n\t            options.not_mod = this._onNotModified;\n\t            options.sync = this._onSync;\n\n\t            // Auto use local uri if has it in localhost origin.\n\t            if (location.hostname === 'localhost' && this._local_uri) {\n\t                url = this._local_uri;\n\t            }\n\n\t            this.parent.getCacheFirst(url, options).then(function () {\n\t                self.delloc(self);\n\t            })[\"catch\"](this._onError);\n\n\t            return this;\n\t        };\n\n\t        F.prototype.local = function local(uri) {\n\t            this._local_uri = uri;\n\t            return this;\n\t        };\n\n\t        F.prototype.delloc = function delloc(self) {\n\t            delete self.parent;\n\t            delete self.me;\n\t            delete self._onCache;\n\t            delete self._onSend;\n\t            delete self._onLoad;\n\t            delete self._onInsert;\n\t            delete self._onUpdate;\n\t            delete self._onUpsert;\n\t            delete self._onMatch;\n\t            delete self._onNotModified;\n\t            delete self._onSync;\n\t            delete self._onError;\n\t        };\n\n\t        return F;\n\t    }();\n\n\t    // The actual papergirl object that we expose as a module or via a\n\t    // global. It's extended by pulling in one of our other libraries.\n\n\n\t    return new Papergirl();\n\t}(typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {});\n\texports[\"default\"] = papergirl;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;/* WEBPACK VAR INJECTION */(function(global, process) {/*!\n\t    localForage -- Offline Storage, Improved\n\t    Version 1.4.0\n\t    https://mozilla.github.io/localForage\n\t    (c) 2013-2015 Mozilla, Apache License 2.0\n\t*/\n\t(function() {\n\tvar define, requireModule, require, requirejs;\n\n\t(function() {\n\t  var registry = {}, seen = {};\n\n\t  define = function(name, deps, callback) {\n\t    registry[name] = { deps: deps, callback: callback };\n\t  };\n\n\t  requirejs = require = requireModule = function(name) {\n\t  requirejs._eak_seen = registry;\n\n\t    if (seen[name]) { return seen[name]; }\n\t    seen[name] = {};\n\n\t    if (!registry[name]) {\n\t      throw new Error(\"Could not find module \" + name);\n\t    }\n\n\t    var mod = registry[name],\n\t        deps = mod.deps,\n\t        callback = mod.callback,\n\t        reified = [],\n\t        exports;\n\n\t    for (var i=0, l=deps.length; i<l; i++) {\n\t      if (deps[i] === 'exports') {\n\t        reified.push(exports = {});\n\t      } else {\n\t        reified.push(requireModule(resolve(deps[i])));\n\t      }\n\t    }\n\n\t    var value = callback.apply(this, reified);\n\t    return seen[name] = exports || value;\n\n\t    function resolve(child) {\n\t      if (child.charAt(0) !== '.') { return child; }\n\t      var parts = child.split(\"/\");\n\t      var parentBase = name.split(\"/\").slice(0, -1);\n\n\t      for (var i=0, l=parts.length; i<l; i++) {\n\t        var part = parts[i];\n\n\t        if (part === '..') { parentBase.pop(); }\n\t        else if (part === '.') { continue; }\n\t        else { parentBase.push(part); }\n\t      }\n\n\t      return parentBase.join(\"/\");\n\t    }\n\t  };\n\t})();\n\n\tdefine(\"promise/all\", \n\t  [\"./utils\",\"exports\"],\n\t  function(__dependency1__, __exports__) {\n\t    \"use strict\";\n\t    /* global toString */\n\n\t    var isArray = __dependency1__.isArray;\n\t    var isFunction = __dependency1__.isFunction;\n\n\t    /**\n\t      Returns a promise that is fulfilled when all the given promises have been\n\t      fulfilled, or rejected if any of them become rejected. The return promise\n\t      is fulfilled with an array that gives all the values in the order they were\n\t      passed in the `promises` array argument.\n\n\t      Example:\n\n\t      ```javascript\n\t      var promise1 = RSVP.resolve(1);\n\t      var promise2 = RSVP.resolve(2);\n\t      var promise3 = RSVP.resolve(3);\n\t      var promises = [ promise1, promise2, promise3 ];\n\n\t      RSVP.all(promises).then(function(array){\n\t        // The array here would be [ 1, 2, 3 ];\n\t      });\n\t      ```\n\n\t      If any of the `promises` given to `RSVP.all` are rejected, the first promise\n\t      that is rejected will be given as an argument to the returned promises's\n\t      rejection handler. For example:\n\n\t      Example:\n\n\t      ```javascript\n\t      var promise1 = RSVP.resolve(1);\n\t      var promise2 = RSVP.reject(new Error(\"2\"));\n\t      var promise3 = RSVP.reject(new Error(\"3\"));\n\t      var promises = [ promise1, promise2, promise3 ];\n\n\t      RSVP.all(promises).then(function(array){\n\t        // Code here never runs because there are rejected promises!\n\t      }, function(error) {\n\t        // error.message === \"2\"\n\t      });\n\t      ```\n\n\t      @method all\n\t      @for RSVP\n\t      @param {Array} promises\n\t      @param {String} label\n\t      @return {Promise} promise that is fulfilled when all `promises` have been\n\t      fulfilled, or rejected if any of them become rejected.\n\t    */\n\t    function all(promises) {\n\t      /*jshint validthis:true */\n\t      var Promise = this;\n\n\t      if (!isArray(promises)) {\n\t        throw new TypeError('You must pass an array to all.');\n\t      }\n\n\t      return new Promise(function(resolve, reject) {\n\t        var results = [], remaining = promises.length,\n\t        promise;\n\n\t        if (remaining === 0) {\n\t          resolve([]);\n\t        }\n\n\t        function resolver(index) {\n\t          return function(value) {\n\t            resolveAll(index, value);\n\t          };\n\t        }\n\n\t        function resolveAll(index, value) {\n\t          results[index] = value;\n\t          if (--remaining === 0) {\n\t            resolve(results);\n\t          }\n\t        }\n\n\t        for (var i = 0; i < promises.length; i++) {\n\t          promise = promises[i];\n\n\t          if (promise && isFunction(promise.then)) {\n\t            promise.then(resolver(i), reject);\n\t          } else {\n\t            resolveAll(i, promise);\n\t          }\n\t        }\n\t      });\n\t    }\n\n\t    __exports__.all = all;\n\t  });\n\tdefine(\"promise/asap\", \n\t  [\"exports\"],\n\t  function(__exports__) {\n\t    \"use strict\";\n\t    var browserGlobal = (typeof window !== 'undefined') ? window : {};\n\t    var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\n\t    var local = (typeof global !== 'undefined') ? global : (this === undefined? window:this);\n\n\t    // node\n\t    function useNextTick() {\n\t      return function() {\n\t        process.nextTick(flush);\n\t      };\n\t    }\n\n\t    function useMutationObserver() {\n\t      var iterations = 0;\n\t      var observer = new BrowserMutationObserver(flush);\n\t      var node = document.createTextNode('');\n\t      observer.observe(node, { characterData: true });\n\n\t      return function() {\n\t        node.data = (iterations = ++iterations % 2);\n\t      };\n\t    }\n\n\t    function useSetTimeout() {\n\t      return function() {\n\t        local.setTimeout(flush, 1);\n\t      };\n\t    }\n\n\t    var queue = [];\n\t    function flush() {\n\t      for (var i = 0; i < queue.length; i++) {\n\t        var tuple = queue[i];\n\t        var callback = tuple[0], arg = tuple[1];\n\t        callback(arg);\n\t      }\n\t      queue = [];\n\t    }\n\n\t    var scheduleFlush;\n\n\t    // Decide what async method to use to triggering processing of queued callbacks:\n\t    if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\n\t      scheduleFlush = useNextTick();\n\t    } else if (BrowserMutationObserver) {\n\t      scheduleFlush = useMutationObserver();\n\t    } else {\n\t      scheduleFlush = useSetTimeout();\n\t    }\n\n\t    function asap(callback, arg) {\n\t      var length = queue.push([callback, arg]);\n\t      if (length === 1) {\n\t        // If length is 1, that means that we need to schedule an async flush.\n\t        // If additional callbacks are queued before the queue is flushed, they\n\t        // will be processed by this flush that we are scheduling.\n\t        scheduleFlush();\n\t      }\n\t    }\n\n\t    __exports__.asap = asap;\n\t  });\n\tdefine(\"promise/config\", \n\t  [\"exports\"],\n\t  function(__exports__) {\n\t    \"use strict\";\n\t    var config = {\n\t      instrument: false\n\t    };\n\n\t    function configure(name, value) {\n\t      if (arguments.length === 2) {\n\t        config[name] = value;\n\t      } else {\n\t        return config[name];\n\t      }\n\t    }\n\n\t    __exports__.config = config;\n\t    __exports__.configure = configure;\n\t  });\n\tdefine(\"promise/polyfill\", \n\t  [\"./promise\",\"./utils\",\"exports\"],\n\t  function(__dependency1__, __dependency2__, __exports__) {\n\t    \"use strict\";\n\t    /*global self*/\n\t    var RSVPPromise = __dependency1__.Promise;\n\t    var isFunction = __dependency2__.isFunction;\n\n\t    function polyfill() {\n\t      var local;\n\n\t      if (typeof global !== 'undefined') {\n\t        local = global;\n\t      } else if (typeof window !== 'undefined' && window.document) {\n\t        local = window;\n\t      } else {\n\t        local = self;\n\t      }\n\n\t      var es6PromiseSupport = \n\t        \"Promise\" in local &&\n\t        // Some of these methods are missing from\n\t        // Firefox/Chrome experimental implementations\n\t        \"resolve\" in local.Promise &&\n\t        \"reject\" in local.Promise &&\n\t        \"all\" in local.Promise &&\n\t        \"race\" in local.Promise &&\n\t        // Older version of the spec had a resolver object\n\t        // as the arg rather than a function\n\t        (function() {\n\t          var resolve;\n\t          new local.Promise(function(r) { resolve = r; });\n\t          return isFunction(resolve);\n\t        }());\n\n\t      if (!es6PromiseSupport) {\n\t        local.Promise = RSVPPromise;\n\t      }\n\t    }\n\n\t    __exports__.polyfill = polyfill;\n\t  });\n\tdefine(\"promise/promise\", \n\t  [\"./config\",\"./utils\",\"./all\",\"./race\",\"./resolve\",\"./reject\",\"./asap\",\"exports\"],\n\t  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __dependency6__, __dependency7__, __exports__) {\n\t    \"use strict\";\n\t    var config = __dependency1__.config;\n\t    var configure = __dependency1__.configure;\n\t    var objectOrFunction = __dependency2__.objectOrFunction;\n\t    var isFunction = __dependency2__.isFunction;\n\t    var now = __dependency2__.now;\n\t    var all = __dependency3__.all;\n\t    var race = __dependency4__.race;\n\t    var staticResolve = __dependency5__.resolve;\n\t    var staticReject = __dependency6__.reject;\n\t    var asap = __dependency7__.asap;\n\n\t    var counter = 0;\n\n\t    config.async = asap; // default async is asap;\n\n\t    function Promise(resolver) {\n\t      if (!isFunction(resolver)) {\n\t        throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n\t      }\n\n\t      if (!(this instanceof Promise)) {\n\t        throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n\t      }\n\n\t      this._subscribers = [];\n\n\t      invokeResolver(resolver, this);\n\t    }\n\n\t    function invokeResolver(resolver, promise) {\n\t      function resolvePromise(value) {\n\t        resolve(promise, value);\n\t      }\n\n\t      function rejectPromise(reason) {\n\t        reject(promise, reason);\n\t      }\n\n\t      try {\n\t        resolver(resolvePromise, rejectPromise);\n\t      } catch(e) {\n\t        rejectPromise(e);\n\t      }\n\t    }\n\n\t    function invokeCallback(settled, promise, callback, detail) {\n\t      var hasCallback = isFunction(callback),\n\t          value, error, succeeded, failed;\n\n\t      if (hasCallback) {\n\t        try {\n\t          value = callback(detail);\n\t          succeeded = true;\n\t        } catch(e) {\n\t          failed = true;\n\t          error = e;\n\t        }\n\t      } else {\n\t        value = detail;\n\t        succeeded = true;\n\t      }\n\n\t      if (handleThenable(promise, value)) {\n\t        return;\n\t      } else if (hasCallback && succeeded) {\n\t        resolve(promise, value);\n\t      } else if (failed) {\n\t        reject(promise, error);\n\t      } else if (settled === FULFILLED) {\n\t        resolve(promise, value);\n\t      } else if (settled === REJECTED) {\n\t        reject(promise, value);\n\t      }\n\t    }\n\n\t    var PENDING   = void 0;\n\t    var SEALED    = 0;\n\t    var FULFILLED = 1;\n\t    var REJECTED  = 2;\n\n\t    function subscribe(parent, child, onFulfillment, onRejection) {\n\t      var subscribers = parent._subscribers;\n\t      var length = subscribers.length;\n\n\t      subscribers[length] = child;\n\t      subscribers[length + FULFILLED] = onFulfillment;\n\t      subscribers[length + REJECTED]  = onRejection;\n\t    }\n\n\t    function publish(promise, settled) {\n\t      var child, callback, subscribers = promise._subscribers, detail = promise._detail;\n\n\t      for (var i = 0; i < subscribers.length; i += 3) {\n\t        child = subscribers[i];\n\t        callback = subscribers[i + settled];\n\n\t        invokeCallback(settled, child, callback, detail);\n\t      }\n\n\t      promise._subscribers = null;\n\t    }\n\n\t    Promise.prototype = {\n\t      constructor: Promise,\n\n\t      _state: undefined,\n\t      _detail: undefined,\n\t      _subscribers: undefined,\n\n\t      then: function(onFulfillment, onRejection) {\n\t        var promise = this;\n\n\t        var thenPromise = new this.constructor(function() {});\n\n\t        if (this._state) {\n\t          var callbacks = arguments;\n\t          config.async(function invokePromiseCallback() {\n\t            invokeCallback(promise._state, thenPromise, callbacks[promise._state - 1], promise._detail);\n\t          });\n\t        } else {\n\t          subscribe(this, thenPromise, onFulfillment, onRejection);\n\t        }\n\n\t        return thenPromise;\n\t      },\n\n\t      'catch': function(onRejection) {\n\t        return this.then(null, onRejection);\n\t      }\n\t    };\n\n\t    Promise.all = all;\n\t    Promise.race = race;\n\t    Promise.resolve = staticResolve;\n\t    Promise.reject = staticReject;\n\n\t    function handleThenable(promise, value) {\n\t      var then = null,\n\t      resolved;\n\n\t      try {\n\t        if (promise === value) {\n\t          throw new TypeError(\"A promises callback cannot return that same promise.\");\n\t        }\n\n\t        if (objectOrFunction(value)) {\n\t          then = value.then;\n\n\t          if (isFunction(then)) {\n\t            then.call(value, function(val) {\n\t              if (resolved) { return true; }\n\t              resolved = true;\n\n\t              if (value !== val) {\n\t                resolve(promise, val);\n\t              } else {\n\t                fulfill(promise, val);\n\t              }\n\t            }, function(val) {\n\t              if (resolved) { return true; }\n\t              resolved = true;\n\n\t              reject(promise, val);\n\t            });\n\n\t            return true;\n\t          }\n\t        }\n\t      } catch (error) {\n\t        if (resolved) { return true; }\n\t        reject(promise, error);\n\t        return true;\n\t      }\n\n\t      return false;\n\t    }\n\n\t    function resolve(promise, value) {\n\t      if (promise === value) {\n\t        fulfill(promise, value);\n\t      } else if (!handleThenable(promise, value)) {\n\t        fulfill(promise, value);\n\t      }\n\t    }\n\n\t    function fulfill(promise, value) {\n\t      if (promise._state !== PENDING) { return; }\n\t      promise._state = SEALED;\n\t      promise._detail = value;\n\n\t      config.async(publishFulfillment, promise);\n\t    }\n\n\t    function reject(promise, reason) {\n\t      if (promise._state !== PENDING) { return; }\n\t      promise._state = SEALED;\n\t      promise._detail = reason;\n\n\t      config.async(publishRejection, promise);\n\t    }\n\n\t    function publishFulfillment(promise) {\n\t      publish(promise, promise._state = FULFILLED);\n\t    }\n\n\t    function publishRejection(promise) {\n\t      publish(promise, promise._state = REJECTED);\n\t    }\n\n\t    __exports__.Promise = Promise;\n\t  });\n\tdefine(\"promise/race\", \n\t  [\"./utils\",\"exports\"],\n\t  function(__dependency1__, __exports__) {\n\t    \"use strict\";\n\t    /* global toString */\n\t    var isArray = __dependency1__.isArray;\n\n\t    /**\n\t      `RSVP.race` allows you to watch a series of promises and act as soon as the\n\t      first promise given to the `promises` argument fulfills or rejects.\n\n\t      Example:\n\n\t      ```javascript\n\t      var promise1 = new RSVP.Promise(function(resolve, reject){\n\t        setTimeout(function(){\n\t          resolve(\"promise 1\");\n\t        }, 200);\n\t      });\n\n\t      var promise2 = new RSVP.Promise(function(resolve, reject){\n\t        setTimeout(function(){\n\t          resolve(\"promise 2\");\n\t        }, 100);\n\t      });\n\n\t      RSVP.race([promise1, promise2]).then(function(result){\n\t        // result === \"promise 2\" because it was resolved before promise1\n\t        // was resolved.\n\t      });\n\t      ```\n\n\t      `RSVP.race` is deterministic in that only the state of the first completed\n\t      promise matters. For example, even if other promises given to the `promises`\n\t      array argument are resolved, but the first completed promise has become\n\t      rejected before the other promises became fulfilled, the returned promise\n\t      will become rejected:\n\n\t      ```javascript\n\t      var promise1 = new RSVP.Promise(function(resolve, reject){\n\t        setTimeout(function(){\n\t          resolve(\"promise 1\");\n\t        }, 200);\n\t      });\n\n\t      var promise2 = new RSVP.Promise(function(resolve, reject){\n\t        setTimeout(function(){\n\t          reject(new Error(\"promise 2\"));\n\t        }, 100);\n\t      });\n\n\t      RSVP.race([promise1, promise2]).then(function(result){\n\t        // Code here never runs because there are rejected promises!\n\t      }, function(reason){\n\t        // reason.message === \"promise2\" because promise 2 became rejected before\n\t        // promise 1 became fulfilled\n\t      });\n\t      ```\n\n\t      @method race\n\t      @for RSVP\n\t      @param {Array} promises array of promises to observe\n\t      @param {String} label optional string for describing the promise returned.\n\t      Useful for tooling.\n\t      @return {Promise} a promise that becomes fulfilled with the value the first\n\t      completed promises is resolved with if the first completed promise was\n\t      fulfilled, or rejected with the reason that the first completed promise\n\t      was rejected with.\n\t    */\n\t    function race(promises) {\n\t      /*jshint validthis:true */\n\t      var Promise = this;\n\n\t      if (!isArray(promises)) {\n\t        throw new TypeError('You must pass an array to race.');\n\t      }\n\t      return new Promise(function(resolve, reject) {\n\t        var results = [], promise;\n\n\t        for (var i = 0; i < promises.length; i++) {\n\t          promise = promises[i];\n\n\t          if (promise && typeof promise.then === 'function') {\n\t            promise.then(resolve, reject);\n\t          } else {\n\t            resolve(promise);\n\t          }\n\t        }\n\t      });\n\t    }\n\n\t    __exports__.race = race;\n\t  });\n\tdefine(\"promise/reject\", \n\t  [\"exports\"],\n\t  function(__exports__) {\n\t    \"use strict\";\n\t    /**\n\t      `RSVP.reject` returns a promise that will become rejected with the passed\n\t      `reason`. `RSVP.reject` is essentially shorthand for the following:\n\n\t      ```javascript\n\t      var promise = new RSVP.Promise(function(resolve, reject){\n\t        reject(new Error('WHOOPS'));\n\t      });\n\n\t      promise.then(function(value){\n\t        // Code here doesn't run because the promise is rejected!\n\t      }, function(reason){\n\t        // reason.message === 'WHOOPS'\n\t      });\n\t      ```\n\n\t      Instead of writing the above, your code now simply becomes the following:\n\n\t      ```javascript\n\t      var promise = RSVP.reject(new Error('WHOOPS'));\n\n\t      promise.then(function(value){\n\t        // Code here doesn't run because the promise is rejected!\n\t      }, function(reason){\n\t        // reason.message === 'WHOOPS'\n\t      });\n\t      ```\n\n\t      @method reject\n\t      @for RSVP\n\t      @param {Any} reason value that the returned promise will be rejected with.\n\t      @param {String} label optional string for identifying the returned promise.\n\t      Useful for tooling.\n\t      @return {Promise} a promise that will become rejected with the given\n\t      `reason`.\n\t    */\n\t    function reject(reason) {\n\t      /*jshint validthis:true */\n\t      var Promise = this;\n\n\t      return new Promise(function (resolve, reject) {\n\t        reject(reason);\n\t      });\n\t    }\n\n\t    __exports__.reject = reject;\n\t  });\n\tdefine(\"promise/resolve\", \n\t  [\"exports\"],\n\t  function(__exports__) {\n\t    \"use strict\";\n\t    function resolve(value) {\n\t      /*jshint validthis:true */\n\t      if (value && typeof value === 'object' && value.constructor === this) {\n\t        return value;\n\t      }\n\n\t      var Promise = this;\n\n\t      return new Promise(function(resolve) {\n\t        resolve(value);\n\t      });\n\t    }\n\n\t    __exports__.resolve = resolve;\n\t  });\n\tdefine(\"promise/utils\", \n\t  [\"exports\"],\n\t  function(__exports__) {\n\t    \"use strict\";\n\t    function objectOrFunction(x) {\n\t      return isFunction(x) || (typeof x === \"object\" && x !== null);\n\t    }\n\n\t    function isFunction(x) {\n\t      return typeof x === \"function\";\n\t    }\n\n\t    function isArray(x) {\n\t      return Object.prototype.toString.call(x) === \"[object Array]\";\n\t    }\n\n\t    // Date.now is not available in browsers < IE9\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now#Compatibility\n\t    var now = Date.now || function() { return new Date().getTime(); };\n\n\n\t    __exports__.objectOrFunction = objectOrFunction;\n\t    __exports__.isFunction = isFunction;\n\t    __exports__.isArray = isArray;\n\t    __exports__.now = now;\n\t  });\n\trequireModule('promise/polyfill').polyfill();\n\t}());(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"localforage\"] = factory();\n\t\telse\n\t\t\troot[\"localforage\"] = factory();\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\n\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\n\t\t'use strict';\n\n\t\texports.__esModule = true;\n\n\t\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n\t\tvar localForage = (function (globalObject) {\n\t\t    'use strict';\n\n\t\t    // Custom drivers are stored here when `defineDriver()` is called.\n\t\t    // They are shared across all instances of localForage.\n\t\t    var CustomDrivers = {};\n\n\t\t    var DriverType = {\n\t\t        INDEXEDDB: 'asyncStorage',\n\t\t        LOCALSTORAGE: 'localStorageWrapper',\n\t\t        WEBSQL: 'webSQLStorage'\n\t\t    };\n\n\t\t    var DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\n\t\t    var LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\n\t\t    var DefaultConfig = {\n\t\t        description: '',\n\t\t        driver: DefaultDriverOrder.slice(),\n\t\t        name: 'localforage',\n\t\t        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n\t\t        // we can use without a prompt.\n\t\t        size: 4980736,\n\t\t        storeName: 'keyvaluepairs',\n\t\t        version: 1.0\n\t\t    };\n\n\t\t    var driverSupport = (function (self) {\n\t\t        var result = {};\n\n\t\t        // Check to see if IndexedDB is available and if it is the latest\n\t\t        // implementation; it's our preferred backend library. We use \"_spec_test\"\n\t\t        // as the name of the database because it's not the one we'll operate on,\n\t\t        // but it's useful to make sure its using the right spec.\n\t\t        // See: https://github.com/mozilla/localForage/issues/128\n\t\t        result[DriverType.INDEXEDDB] = !!(function () {\n\t\t            try {\n\t\t                // Initialize IndexedDB; fall back to vendor-prefixed versions\n\t\t                // if needed.\n\t\t                var indexedDB = indexedDB || self.indexedDB || self.webkitIndexedDB || self.mozIndexedDB || self.OIndexedDB || self.msIndexedDB;\n\t\t                // We mimic PouchDB here; just UA test for Safari (which, as of\n\t\t                // iOS 8/Yosemite, doesn't properly support IndexedDB).\n\t\t                // IndexedDB support is broken and different from Blink's.\n\t\t                // This is faster than the test case (and it's sync), so we just\n\t\t                // do this. *SIGH*\n\t\t                // http://bl.ocks.org/nolanlawson/raw/c83e9039edf2278047e9/\n\t\t                //\n\t\t                // We test for openDatabase because IE Mobile identifies itself\n\t\t                // as Safari. Oh the lulz...\n\t\t                if (typeof self.openDatabase !== 'undefined' && self.navigator && self.navigator.userAgent && /Safari/.test(self.navigator.userAgent) && !/Chrome/.test(self.navigator.userAgent)) {\n\t\t                    return false;\n\t\t                }\n\n\t\t                return indexedDB && typeof indexedDB.open === 'function' &&\n\t\t                // Some Samsung/HTC Android 4.0-4.3 devices\n\t\t                // have older IndexedDB specs; if this isn't available\n\t\t                // their IndexedDB is too old for us to use.\n\t\t                // (Replaces the onupgradeneeded test.)\n\t\t                typeof self.IDBKeyRange !== 'undefined';\n\t\t            } catch (e) {\n\t\t                return false;\n\t\t            }\n\t\t        })();\n\n\t\t        result[DriverType.WEBSQL] = !!(function () {\n\t\t            try {\n\t\t                return self.openDatabase;\n\t\t            } catch (e) {\n\t\t                return false;\n\t\t            }\n\t\t        })();\n\n\t\t        result[DriverType.LOCALSTORAGE] = !!(function () {\n\t\t            try {\n\t\t                return self.localStorage && 'setItem' in self.localStorage && self.localStorage.setItem;\n\t\t            } catch (e) {\n\t\t                return false;\n\t\t            }\n\t\t        })();\n\n\t\t        return result;\n\t\t    })(globalObject);\n\n\t\t    var isArray = Array.isArray || function (arg) {\n\t\t        return Object.prototype.toString.call(arg) === '[object Array]';\n\t\t    };\n\n\t\t    function callWhenReady(localForageInstance, libraryMethod) {\n\t\t        localForageInstance[libraryMethod] = function () {\n\t\t            var _args = arguments;\n\t\t            return localForageInstance.ready().then(function () {\n\t\t                return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n\t\t            });\n\t\t        };\n\t\t    }\n\n\t\t    function extend() {\n\t\t        for (var i = 1; i < arguments.length; i++) {\n\t\t            var arg = arguments[i];\n\n\t\t            if (arg) {\n\t\t                for (var key in arg) {\n\t\t                    if (arg.hasOwnProperty(key)) {\n\t\t                        if (isArray(arg[key])) {\n\t\t                            arguments[0][key] = arg[key].slice();\n\t\t                        } else {\n\t\t                            arguments[0][key] = arg[key];\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\n\t\t        return arguments[0];\n\t\t    }\n\n\t\t    function isLibraryDriver(driverName) {\n\t\t        for (var driver in DriverType) {\n\t\t            if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n\t\t                return true;\n\t\t            }\n\t\t        }\n\n\t\t        return false;\n\t\t    }\n\n\t\t    var LocalForage = (function () {\n\t\t        function LocalForage(options) {\n\t\t            _classCallCheck(this, LocalForage);\n\n\t\t            this.INDEXEDDB = DriverType.INDEXEDDB;\n\t\t            this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n\t\t            this.WEBSQL = DriverType.WEBSQL;\n\n\t\t            this._defaultConfig = extend({}, DefaultConfig);\n\t\t            this._config = extend({}, this._defaultConfig, options);\n\t\t            this._driverSet = null;\n\t\t            this._initDriver = null;\n\t\t            this._ready = false;\n\t\t            this._dbInfo = null;\n\n\t\t            this._wrapLibraryMethodsWithReady();\n\t\t            this.setDriver(this._config.driver);\n\t\t        }\n\n\t\t        // The actual localForage object that we expose as a module or via a\n\t\t        // global. It's extended by pulling in one of our other libraries.\n\n\t\t        // Set any config values for localForage; can be called anytime before\n\t\t        // the first API call (e.g. `getItem`, `setItem`).\n\t\t        // We loop through options so we don't overwrite existing config\n\t\t        // values.\n\n\t\t        LocalForage.prototype.config = function config(options) {\n\t\t            // If the options argument is an object, we use it to set values.\n\t\t            // Otherwise, we return either a specified config value or all\n\t\t            // config values.\n\t\t            if (typeof options === 'object') {\n\t\t                // If localforage is ready and fully initialized, we can't set\n\t\t                // any new configuration values. Instead, we return an error.\n\t\t                if (this._ready) {\n\t\t                    return new Error(\"Can't call config() after localforage \" + 'has been used.');\n\t\t                }\n\n\t\t                for (var i in options) {\n\t\t                    if (i === 'storeName') {\n\t\t                        options[i] = options[i].replace(/\\W/g, '_');\n\t\t                    }\n\n\t\t                    this._config[i] = options[i];\n\t\t                }\n\n\t\t                // after all config options are set and\n\t\t                // the driver option is used, try setting it\n\t\t                if ('driver' in options && options.driver) {\n\t\t                    this.setDriver(this._config.driver);\n\t\t                }\n\n\t\t                return true;\n\t\t            } else if (typeof options === 'string') {\n\t\t                return this._config[options];\n\t\t            } else {\n\t\t                return this._config;\n\t\t            }\n\t\t        };\n\n\t\t        // Used to define a custom driver, shared across all instances of\n\t\t        // localForage.\n\n\t\t        LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n\t\t            var promise = new Promise(function (resolve, reject) {\n\t\t                try {\n\t\t                    var driverName = driverObject._driver;\n\t\t                    var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\t\t                    var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n\t\t                    // A driver name should be defined and not overlap with the\n\t\t                    // library-defined, default drivers.\n\t\t                    if (!driverObject._driver) {\n\t\t                        reject(complianceError);\n\t\t                        return;\n\t\t                    }\n\t\t                    if (isLibraryDriver(driverObject._driver)) {\n\t\t                        reject(namingError);\n\t\t                        return;\n\t\t                    }\n\n\t\t                    var customDriverMethods = LibraryMethods.concat('_initStorage');\n\t\t                    for (var i = 0; i < customDriverMethods.length; i++) {\n\t\t                        var customDriverMethod = customDriverMethods[i];\n\t\t                        if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n\t\t                            reject(complianceError);\n\t\t                            return;\n\t\t                        }\n\t\t                    }\n\n\t\t                    var supportPromise = Promise.resolve(true);\n\t\t                    if ('_support' in driverObject) {\n\t\t                        if (driverObject._support && typeof driverObject._support === 'function') {\n\t\t                            supportPromise = driverObject._support();\n\t\t                        } else {\n\t\t                            supportPromise = Promise.resolve(!!driverObject._support);\n\t\t                        }\n\t\t                    }\n\n\t\t                    supportPromise.then(function (supportResult) {\n\t\t                        driverSupport[driverName] = supportResult;\n\t\t                        CustomDrivers[driverName] = driverObject;\n\t\t                        resolve();\n\t\t                    }, reject);\n\t\t                } catch (e) {\n\t\t                    reject(e);\n\t\t                }\n\t\t            });\n\n\t\t            promise.then(callback, errorCallback);\n\t\t            return promise;\n\t\t        };\n\n\t\t        LocalForage.prototype.driver = function driver() {\n\t\t            return this._driver || null;\n\t\t        };\n\n\t\t        LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n\t\t            var self = this;\n\t\t            var getDriverPromise = (function () {\n\t\t                if (isLibraryDriver(driverName)) {\n\t\t                    switch (driverName) {\n\t\t                        case self.INDEXEDDB:\n\t\t                            return new Promise(function (resolve, reject) {\n\t\t                                resolve(__webpack_require__(1));\n\t\t                            });\n\t\t                        case self.LOCALSTORAGE:\n\t\t                            return new Promise(function (resolve, reject) {\n\t\t                                resolve(__webpack_require__(2));\n\t\t                            });\n\t\t                        case self.WEBSQL:\n\t\t                            return new Promise(function (resolve, reject) {\n\t\t                                resolve(__webpack_require__(4));\n\t\t                            });\n\t\t                    }\n\t\t                } else if (CustomDrivers[driverName]) {\n\t\t                    return Promise.resolve(CustomDrivers[driverName]);\n\t\t                }\n\n\t\t                return Promise.reject(new Error('Driver not found.'));\n\t\t            })();\n\n\t\t            getDriverPromise.then(callback, errorCallback);\n\t\t            return getDriverPromise;\n\t\t        };\n\n\t\t        LocalForage.prototype.getSerializer = function getSerializer(callback) {\n\t\t            var serializerPromise = new Promise(function (resolve, reject) {\n\t\t                resolve(__webpack_require__(3));\n\t\t            });\n\t\t            if (callback && typeof callback === 'function') {\n\t\t                serializerPromise.then(function (result) {\n\t\t                    callback(result);\n\t\t                });\n\t\t            }\n\t\t            return serializerPromise;\n\t\t        };\n\n\t\t        LocalForage.prototype.ready = function ready(callback) {\n\t\t            var self = this;\n\n\t\t            var promise = self._driverSet.then(function () {\n\t\t                if (self._ready === null) {\n\t\t                    self._ready = self._initDriver();\n\t\t                }\n\n\t\t                return self._ready;\n\t\t            });\n\n\t\t            promise.then(callback, callback);\n\t\t            return promise;\n\t\t        };\n\n\t\t        LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n\t\t            var self = this;\n\n\t\t            if (!isArray(drivers)) {\n\t\t                drivers = [drivers];\n\t\t            }\n\n\t\t            var supportedDrivers = this._getSupportedDrivers(drivers);\n\n\t\t            function setDriverToConfig() {\n\t\t                self._config.driver = self.driver();\n\t\t            }\n\n\t\t            function initDriver(supportedDrivers) {\n\t\t                return function () {\n\t\t                    var currentDriverIndex = 0;\n\n\t\t                    function driverPromiseLoop() {\n\t\t                        while (currentDriverIndex < supportedDrivers.length) {\n\t\t                            var driverName = supportedDrivers[currentDriverIndex];\n\t\t                            currentDriverIndex++;\n\n\t\t                            self._dbInfo = null;\n\t\t                            self._ready = null;\n\n\t\t                            return self.getDriver(driverName).then(function (driver) {\n\t\t                                self._extend(driver);\n\t\t                                setDriverToConfig();\n\n\t\t                                self._ready = self._initStorage(self._config);\n\t\t                                return self._ready;\n\t\t                            })['catch'](driverPromiseLoop);\n\t\t                        }\n\n\t\t                        setDriverToConfig();\n\t\t                        var error = new Error('No available storage method found.');\n\t\t                        self._driverSet = Promise.reject(error);\n\t\t                        return self._driverSet;\n\t\t                    }\n\n\t\t                    return driverPromiseLoop();\n\t\t                };\n\t\t            }\n\n\t\t            // There might be a driver initialization in progress\n\t\t            // so wait for it to finish in order to avoid a possible\n\t\t            // race condition to set _dbInfo\n\t\t            var oldDriverSetDone = this._driverSet !== null ? this._driverSet['catch'](function () {\n\t\t                return Promise.resolve();\n\t\t            }) : Promise.resolve();\n\n\t\t            this._driverSet = oldDriverSetDone.then(function () {\n\t\t                var driverName = supportedDrivers[0];\n\t\t                self._dbInfo = null;\n\t\t                self._ready = null;\n\n\t\t                return self.getDriver(driverName).then(function (driver) {\n\t\t                    self._driver = driver._driver;\n\t\t                    setDriverToConfig();\n\t\t                    self._wrapLibraryMethodsWithReady();\n\t\t                    self._initDriver = initDriver(supportedDrivers);\n\t\t                });\n\t\t            })['catch'](function () {\n\t\t                setDriverToConfig();\n\t\t                var error = new Error('No available storage method found.');\n\t\t                self._driverSet = Promise.reject(error);\n\t\t                return self._driverSet;\n\t\t            });\n\n\t\t            this._driverSet.then(callback, errorCallback);\n\t\t            return this._driverSet;\n\t\t        };\n\n\t\t        LocalForage.prototype.supports = function supports(driverName) {\n\t\t            return !!driverSupport[driverName];\n\t\t        };\n\n\t\t        LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n\t\t            extend(this, libraryMethodsAndProperties);\n\t\t        };\n\n\t\t        LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n\t\t            var supportedDrivers = [];\n\t\t            for (var i = 0, len = drivers.length; i < len; i++) {\n\t\t                var driverName = drivers[i];\n\t\t                if (this.supports(driverName)) {\n\t\t                    supportedDrivers.push(driverName);\n\t\t                }\n\t\t            }\n\t\t            return supportedDrivers;\n\t\t        };\n\n\t\t        LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n\t\t            // Add a stub for each driver API method that delays the call to the\n\t\t            // corresponding driver method until localForage is ready. These stubs\n\t\t            // will be replaced by the driver methods as soon as the driver is\n\t\t            // loaded, so there is no performance impact.\n\t\t            for (var i = 0; i < LibraryMethods.length; i++) {\n\t\t                callWhenReady(this, LibraryMethods[i]);\n\t\t            }\n\t\t        };\n\n\t\t        LocalForage.prototype.createInstance = function createInstance(options) {\n\t\t            return new LocalForage(options);\n\t\t        };\n\n\t\t        return LocalForage;\n\t\t    })();\n\n\t\t    return new LocalForage();\n\t\t})(typeof window !== 'undefined' ? window : self);\n\t\texports['default'] = localForage;\n\t\tmodule.exports = exports['default'];\n\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports) {\n\n\t\t// Some code originally from async_storage.js in\n\t\t// [Gaia](https://github.com/mozilla-b2g/gaia).\n\t\t'use strict';\n\n\t\texports.__esModule = true;\n\t\tvar asyncStorage = (function (globalObject) {\n\t\t    'use strict';\n\n\t\t    // Initialize IndexedDB; fall back to vendor-prefixed versions if needed.\n\t\t    var indexedDB = indexedDB || globalObject.indexedDB || globalObject.webkitIndexedDB || globalObject.mozIndexedDB || globalObject.OIndexedDB || globalObject.msIndexedDB;\n\n\t\t    // If IndexedDB isn't available, we get outta here!\n\t\t    if (!indexedDB) {\n\t\t        return;\n\t\t    }\n\n\t\t    var DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n\t\t    var supportsBlobs;\n\t\t    var dbContexts;\n\n\t\t    // Abstracts constructing a Blob object, so it also works in older\n\t\t    // browsers that don't support the native Blob constructor. (i.e.\n\t\t    // old QtWebKit versions, at least).\n\t\t    function _createBlob(parts, properties) {\n\t\t        parts = parts || [];\n\t\t        properties = properties || {};\n\t\t        try {\n\t\t            return new Blob(parts, properties);\n\t\t        } catch (e) {\n\t\t            if (e.name !== 'TypeError') {\n\t\t                throw e;\n\t\t            }\n\t\t            var BlobBuilder = globalObject.BlobBuilder || globalObject.MSBlobBuilder || globalObject.MozBlobBuilder || globalObject.WebKitBlobBuilder;\n\t\t            var builder = new BlobBuilder();\n\t\t            for (var i = 0; i < parts.length; i += 1) {\n\t\t                builder.append(parts[i]);\n\t\t            }\n\t\t            return builder.getBlob(properties.type);\n\t\t        }\n\t\t    }\n\n\t\t    // Transform a binary string to an array buffer, because otherwise\n\t\t    // weird stuff happens when you try to work with the binary string directly.\n\t\t    // It is known.\n\t\t    // From http://stackoverflow.com/questions/14967647/ (continues on next line)\n\t\t    // encode-decode-image-with-base64-breaks-image (2013-04-21)\n\t\t    function _binStringToArrayBuffer(bin) {\n\t\t        var length = bin.length;\n\t\t        var buf = new ArrayBuffer(length);\n\t\t        var arr = new Uint8Array(buf);\n\t\t        for (var i = 0; i < length; i++) {\n\t\t            arr[i] = bin.charCodeAt(i);\n\t\t        }\n\t\t        return buf;\n\t\t    }\n\n\t\t    // Fetch a blob using ajax. This reveals bugs in Chrome < 43.\n\t\t    // For details on all this junk:\n\t\t    // https://github.com/nolanlawson/state-of-binary-data-in-the-browser#readme\n\t\t    function _blobAjax(url) {\n\t\t        return new Promise(function (resolve, reject) {\n\t\t            var xhr = new XMLHttpRequest();\n\t\t            xhr.open('GET', url);\n\t\t            xhr.withCredentials = true;\n\t\t            xhr.responseType = 'arraybuffer';\n\n\t\t            xhr.onreadystatechange = function () {\n\t\t                if (xhr.readyState !== 4) {\n\t\t                    return;\n\t\t                }\n\t\t                if (xhr.status === 200) {\n\t\t                    return resolve({\n\t\t                        response: xhr.response,\n\t\t                        type: xhr.getResponseHeader('Content-Type')\n\t\t                    });\n\t\t                }\n\t\t                reject({ status: xhr.status, response: xhr.response });\n\t\t            };\n\t\t            xhr.send();\n\t\t        });\n\t\t    }\n\n\t\t    //\n\t\t    // Detect blob support. Chrome didn't support it until version 38.\n\t\t    // In version 37 they had a broken version where PNGs (and possibly\n\t\t    // other binary types) aren't stored correctly, because when you fetch\n\t\t    // them, the content type is always null.\n\t\t    //\n\t\t    // Furthermore, they have some outstanding bugs where blobs occasionally\n\t\t    // are read by FileReader as null, or by ajax as 404s.\n\t\t    //\n\t\t    // Sadly we use the 404 bug to detect the FileReader bug, so if they\n\t\t    // get fixed independently and released in different versions of Chrome,\n\t\t    // then the bug could come back. So it's worthwhile to watch these issues:\n\t\t    // 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n\t\t    // FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n\t\t    //\n\t\t    function _checkBlobSupportWithoutCaching(idb) {\n\t\t        return new Promise(function (resolve, reject) {\n\t\t            var blob = _createBlob([''], { type: 'image/png' });\n\t\t            var txn = idb.transaction([DETECT_BLOB_SUPPORT_STORE], 'readwrite');\n\t\t            txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\t\t            txn.oncomplete = function () {\n\t\t                // have to do it in a separate transaction, else the correct\n\t\t                // content type is always returned\n\t\t                var blobTxn = idb.transaction([DETECT_BLOB_SUPPORT_STORE], 'readwrite');\n\t\t                var getBlobReq = blobTxn.objectStore(DETECT_BLOB_SUPPORT_STORE).get('key');\n\t\t                getBlobReq.onerror = reject;\n\t\t                getBlobReq.onsuccess = function (e) {\n\n\t\t                    var storedBlob = e.target.result;\n\t\t                    var url = URL.createObjectURL(storedBlob);\n\n\t\t                    _blobAjax(url).then(function (res) {\n\t\t                        resolve(!!(res && res.type === 'image/png'));\n\t\t                    }, function () {\n\t\t                        resolve(false);\n\t\t                    }).then(function () {\n\t\t                        URL.revokeObjectURL(url);\n\t\t                    });\n\t\t                };\n\t\t            };\n\t\t            txn.onerror = txn.onabort = reject;\n\t\t        })['catch'](function () {\n\t\t            return false; // error, so assume unsupported\n\t\t        });\n\t\t    }\n\n\t\t    function _checkBlobSupport(idb) {\n\t\t        if (typeof supportsBlobs === 'boolean') {\n\t\t            return Promise.resolve(supportsBlobs);\n\t\t        }\n\t\t        return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n\t\t            supportsBlobs = value;\n\t\t            return supportsBlobs;\n\t\t        });\n\t\t    }\n\n\t\t    // encode a blob for indexeddb engines that don't support blobs\n\t\t    function _encodeBlob(blob) {\n\t\t        return new Promise(function (resolve, reject) {\n\t\t            var reader = new FileReader();\n\t\t            reader.onerror = reject;\n\t\t            reader.onloadend = function (e) {\n\t\t                var base64 = btoa(e.target.result || '');\n\t\t                resolve({\n\t\t                    __local_forage_encoded_blob: true,\n\t\t                    data: base64,\n\t\t                    type: blob.type\n\t\t                });\n\t\t            };\n\t\t            reader.readAsBinaryString(blob);\n\t\t        });\n\t\t    }\n\n\t\t    // decode an encoded blob\n\t\t    function _decodeBlob(encodedBlob) {\n\t\t        var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n\t\t        return _createBlob([arrayBuff], { type: encodedBlob.type });\n\t\t    }\n\n\t\t    // is this one of our fancy encoded blobs?\n\t\t    function _isEncodedBlob(value) {\n\t\t        return value && value.__local_forage_encoded_blob;\n\t\t    }\n\n\t\t    // Specialize the default `ready()` function by making it dependent\n\t\t    // on the current database operations. Thus, the driver will be actually\n\t\t    // ready when it's been initialized (default) *and* there are no pending\n\t\t    // operations on the database (initiated by some other instances).\n\t\t    function _fullyReady(callback) {\n\t\t        var self = this;\n\n\t\t        var promise = self._initReady().then(function () {\n\t\t            var dbContext = dbContexts[self._dbInfo.name];\n\n\t\t            if (dbContext && dbContext.dbReady) {\n\t\t                return dbContext.dbReady;\n\t\t            }\n\t\t        });\n\n\t\t        promise.then(callback, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function _deferReadiness(dbInfo) {\n\t\t        var dbContext = dbContexts[dbInfo.name];\n\n\t\t        // Create a deferred object representing the current database operation.\n\t\t        var deferredOperation = {};\n\n\t\t        deferredOperation.promise = new Promise(function (resolve) {\n\t\t            deferredOperation.resolve = resolve;\n\t\t        });\n\n\t\t        // Enqueue the deferred operation.\n\t\t        dbContext.deferredOperations.push(deferredOperation);\n\n\t\t        // Chain its promise to the database readiness.\n\t\t        if (!dbContext.dbReady) {\n\t\t            dbContext.dbReady = deferredOperation.promise;\n\t\t        } else {\n\t\t            dbContext.dbReady = dbContext.dbReady.then(function () {\n\t\t                return deferredOperation.promise;\n\t\t            });\n\t\t        }\n\t\t    }\n\n\t\t    function _advanceReadiness(dbInfo) {\n\t\t        var dbContext = dbContexts[dbInfo.name];\n\n\t\t        // Dequeue a deferred operation.\n\t\t        var deferredOperation = dbContext.deferredOperations.pop();\n\n\t\t        // Resolve its promise (which is part of the database readiness\n\t\t        // chain of promises).\n\t\t        if (deferredOperation) {\n\t\t            deferredOperation.resolve();\n\t\t        }\n\t\t    }\n\n\t\t    // Open the IndexedDB database (automatically creates one if one didn't\n\t\t    // previously exist), using any options set in the config.\n\t\t    function _initStorage(options) {\n\t\t        var self = this;\n\t\t        var dbInfo = {\n\t\t            db: null\n\t\t        };\n\n\t\t        if (options) {\n\t\t            for (var i in options) {\n\t\t                dbInfo[i] = options[i];\n\t\t            }\n\t\t        }\n\n\t\t        // Initialize a singleton container for all running localForages.\n\t\t        if (!dbContexts) {\n\t\t            dbContexts = {};\n\t\t        }\n\n\t\t        // Get the current context of the database;\n\t\t        var dbContext = dbContexts[dbInfo.name];\n\n\t\t        // ...or create a new context.\n\t\t        if (!dbContext) {\n\t\t            dbContext = {\n\t\t                // Running localForages sharing a database.\n\t\t                forages: [],\n\t\t                // Shared database.\n\t\t                db: null,\n\t\t                // Database readiness (promise).\n\t\t                dbReady: null,\n\t\t                // Deferred operations on the database.\n\t\t                deferredOperations: []\n\t\t            };\n\t\t            // Register the new context in the global container.\n\t\t            dbContexts[dbInfo.name] = dbContext;\n\t\t        }\n\n\t\t        // Register itself as a running localForage in the current context.\n\t\t        dbContext.forages.push(self);\n\n\t\t        // Replace the default `ready()` function with the specialized one.\n\t\t        if (!self._initReady) {\n\t\t            self._initReady = self.ready;\n\t\t            self.ready = _fullyReady;\n\t\t        }\n\n\t\t        // Create an array of initialization states of the related localForages.\n\t\t        var initPromises = [];\n\n\t\t        function ignoreErrors() {\n\t\t            // Don't handle errors here,\n\t\t            // just makes sure related localForages aren't pending.\n\t\t            return Promise.resolve();\n\t\t        }\n\n\t\t        for (var j = 0; j < dbContext.forages.length; j++) {\n\t\t            var forage = dbContext.forages[j];\n\t\t            if (forage !== self) {\n\t\t                // Don't wait for itself...\n\t\t                initPromises.push(forage._initReady()['catch'](ignoreErrors));\n\t\t            }\n\t\t        }\n\n\t\t        // Take a snapshot of the related localForages.\n\t\t        var forages = dbContext.forages.slice(0);\n\n\t\t        // Initialize the connection process only when\n\t\t        // all the related localForages aren't pending.\n\t\t        return Promise.all(initPromises).then(function () {\n\t\t            dbInfo.db = dbContext.db;\n\t\t            // Get the connection or open a new one without upgrade.\n\t\t            return _getOriginalConnection(dbInfo);\n\t\t        }).then(function (db) {\n\t\t            dbInfo.db = db;\n\t\t            if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n\t\t                // Reopen the database for upgrading.\n\t\t                return _getUpgradedConnection(dbInfo);\n\t\t            }\n\t\t            return db;\n\t\t        }).then(function (db) {\n\t\t            dbInfo.db = dbContext.db = db;\n\t\t            self._dbInfo = dbInfo;\n\t\t            // Share the final connection amongst related localForages.\n\t\t            for (var k = 0; k < forages.length; k++) {\n\t\t                var forage = forages[k];\n\t\t                if (forage !== self) {\n\t\t                    // Self is already up-to-date.\n\t\t                    forage._dbInfo.db = dbInfo.db;\n\t\t                    forage._dbInfo.version = dbInfo.version;\n\t\t                }\n\t\t            }\n\t\t        });\n\t\t    }\n\n\t\t    function _getOriginalConnection(dbInfo) {\n\t\t        return _getConnection(dbInfo, false);\n\t\t    }\n\n\t\t    function _getUpgradedConnection(dbInfo) {\n\t\t        return _getConnection(dbInfo, true);\n\t\t    }\n\n\t\t    function _getConnection(dbInfo, upgradeNeeded) {\n\t\t        return new Promise(function (resolve, reject) {\n\n\t\t            if (dbInfo.db) {\n\t\t                if (upgradeNeeded) {\n\t\t                    _deferReadiness(dbInfo);\n\t\t                    dbInfo.db.close();\n\t\t                } else {\n\t\t                    return resolve(dbInfo.db);\n\t\t                }\n\t\t            }\n\n\t\t            var dbArgs = [dbInfo.name];\n\n\t\t            if (upgradeNeeded) {\n\t\t                dbArgs.push(dbInfo.version);\n\t\t            }\n\n\t\t            var openreq = indexedDB.open.apply(indexedDB, dbArgs);\n\n\t\t            if (upgradeNeeded) {\n\t\t                openreq.onupgradeneeded = function (e) {\n\t\t                    var db = openreq.result;\n\t\t                    try {\n\t\t                        db.createObjectStore(dbInfo.storeName);\n\t\t                        if (e.oldVersion <= 1) {\n\t\t                            // Added when support for blob shims was added\n\t\t                            db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\t\t                        }\n\t\t                    } catch (ex) {\n\t\t                        if (ex.name === 'ConstraintError') {\n\t\t                            globalObject.console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n\t\t                        } else {\n\t\t                            throw ex;\n\t\t                        }\n\t\t                    }\n\t\t                };\n\t\t            }\n\n\t\t            openreq.onerror = function () {\n\t\t                reject(openreq.error);\n\t\t            };\n\n\t\t            openreq.onsuccess = function () {\n\t\t                resolve(openreq.result);\n\t\t                _advanceReadiness(dbInfo);\n\t\t            };\n\t\t        });\n\t\t    }\n\n\t\t    function _isUpgradeNeeded(dbInfo, defaultVersion) {\n\t\t        if (!dbInfo.db) {\n\t\t            return true;\n\t\t        }\n\n\t\t        var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n\t\t        var isDowngrade = dbInfo.version < dbInfo.db.version;\n\t\t        var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n\t\t        if (isDowngrade) {\n\t\t            // If the version is not the default one\n\t\t            // then warn for impossible downgrade.\n\t\t            if (dbInfo.version !== defaultVersion) {\n\t\t                globalObject.console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n\t\t            }\n\t\t            // Align the versions to prevent errors.\n\t\t            dbInfo.version = dbInfo.db.version;\n\t\t        }\n\n\t\t        if (isUpgrade || isNewStore) {\n\t\t            // If the store is new then increment the version (if needed).\n\t\t            // This will trigger an \"upgradeneeded\" event which is required\n\t\t            // for creating a store.\n\t\t            if (isNewStore) {\n\t\t                var incVersion = dbInfo.db.version + 1;\n\t\t                if (incVersion > dbInfo.version) {\n\t\t                    dbInfo.version = incVersion;\n\t\t                }\n\t\t            }\n\n\t\t            return true;\n\t\t        }\n\n\t\t        return false;\n\t\t    }\n\n\t\t    function getItem(key, callback) {\n\t\t        var self = this;\n\n\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t        if (typeof key !== 'string') {\n\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t            key = String(key);\n\t\t        }\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\t\t                var req = store.get(key);\n\n\t\t                req.onsuccess = function () {\n\t\t                    var value = req.result;\n\t\t                    if (value === undefined) {\n\t\t                        value = null;\n\t\t                    }\n\t\t                    if (_isEncodedBlob(value)) {\n\t\t                        value = _decodeBlob(value);\n\t\t                    }\n\t\t                    resolve(value);\n\t\t                };\n\n\t\t                req.onerror = function () {\n\t\t                    reject(req.error);\n\t\t                };\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Iterate over all items stored in database.\n\t\t    function iterate(iterator, callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n\t\t                var req = store.openCursor();\n\t\t                var iterationNumber = 1;\n\n\t\t                req.onsuccess = function () {\n\t\t                    var cursor = req.result;\n\n\t\t                    if (cursor) {\n\t\t                        var value = cursor.value;\n\t\t                        if (_isEncodedBlob(value)) {\n\t\t                            value = _decodeBlob(value);\n\t\t                        }\n\t\t                        var result = iterator(value, cursor.key, iterationNumber++);\n\n\t\t                        if (result !== void 0) {\n\t\t                            resolve(result);\n\t\t                        } else {\n\t\t                            cursor['continue']();\n\t\t                        }\n\t\t                    } else {\n\t\t                        resolve();\n\t\t                    }\n\t\t                };\n\n\t\t                req.onerror = function () {\n\t\t                    reject(req.error);\n\t\t                };\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\n\t\t        return promise;\n\t\t    }\n\n\t\t    function setItem(key, value, callback) {\n\t\t        var self = this;\n\n\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t        if (typeof key !== 'string') {\n\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t            key = String(key);\n\t\t        }\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            var dbInfo;\n\t\t            self.ready().then(function () {\n\t\t                dbInfo = self._dbInfo;\n\t\t                if (value instanceof Blob) {\n\t\t                    return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n\t\t                        if (blobSupport) {\n\t\t                            return value;\n\t\t                        }\n\t\t                        return _encodeBlob(value);\n\t\t                    });\n\t\t                }\n\t\t                return value;\n\t\t            }).then(function (value) {\n\t\t                var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n\t\t                var store = transaction.objectStore(dbInfo.storeName);\n\n\t\t                // The reason we don't _save_ null is because IE 10 does\n\t\t                // not support saving the `null` type in IndexedDB. How\n\t\t                // ironic, given the bug below!\n\t\t                // See: https://github.com/mozilla/localForage/issues/161\n\t\t                if (value === null) {\n\t\t                    value = undefined;\n\t\t                }\n\n\t\t                transaction.oncomplete = function () {\n\t\t                    // Cast to undefined so the value passed to\n\t\t                    // callback/promise is the same as what one would get out\n\t\t                    // of `getItem()` later. This leads to some weirdness\n\t\t                    // (setItem('foo', undefined) will return `null`), but\n\t\t                    // it's not my fault localStorage is our baseline and that\n\t\t                    // it's weird.\n\t\t                    if (value === undefined) {\n\t\t                        value = null;\n\t\t                    }\n\n\t\t                    resolve(value);\n\t\t                };\n\t\t                transaction.onabort = transaction.onerror = function () {\n\t\t                    var err = req.error ? req.error : req.transaction.error;\n\t\t                    reject(err);\n\t\t                };\n\n\t\t                var req = store.put(value, key);\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function removeItem(key, callback) {\n\t\t        var self = this;\n\n\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t        if (typeof key !== 'string') {\n\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t            key = String(key);\n\t\t        }\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n\t\t                var store = transaction.objectStore(dbInfo.storeName);\n\n\t\t                // We use a Grunt task to make this safe for IE and some\n\t\t                // versions of Android (including those used by Cordova).\n\t\t                // Normally IE won't like `.delete()` and will insist on\n\t\t                // using `['delete']()`, but we have a build step that\n\t\t                // fixes this for us now.\n\t\t                var req = store['delete'](key);\n\t\t                transaction.oncomplete = function () {\n\t\t                    resolve();\n\t\t                };\n\n\t\t                transaction.onerror = function () {\n\t\t                    reject(req.error);\n\t\t                };\n\n\t\t                // The request will be also be aborted if we've exceeded our storage\n\t\t                // space.\n\t\t                transaction.onabort = function () {\n\t\t                    var err = req.error ? req.error : req.transaction.error;\n\t\t                    reject(err);\n\t\t                };\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function clear(callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n\t\t                var store = transaction.objectStore(dbInfo.storeName);\n\t\t                var req = store.clear();\n\n\t\t                transaction.oncomplete = function () {\n\t\t                    resolve();\n\t\t                };\n\n\t\t                transaction.onabort = transaction.onerror = function () {\n\t\t                    var err = req.error ? req.error : req.transaction.error;\n\t\t                    reject(err);\n\t\t                };\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function length(callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\t\t                var req = store.count();\n\n\t\t                req.onsuccess = function () {\n\t\t                    resolve(req.result);\n\t\t                };\n\n\t\t                req.onerror = function () {\n\t\t                    reject(req.error);\n\t\t                };\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function key(n, callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            if (n < 0) {\n\t\t                resolve(null);\n\n\t\t                return;\n\t\t            }\n\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n\t\t                var advanced = false;\n\t\t                var req = store.openCursor();\n\t\t                req.onsuccess = function () {\n\t\t                    var cursor = req.result;\n\t\t                    if (!cursor) {\n\t\t                        // this means there weren't enough keys\n\t\t                        resolve(null);\n\n\t\t                        return;\n\t\t                    }\n\n\t\t                    if (n === 0) {\n\t\t                        // We have the first key, return it if that's what they\n\t\t                        // wanted.\n\t\t                        resolve(cursor.key);\n\t\t                    } else {\n\t\t                        if (!advanced) {\n\t\t                            // Otherwise, ask the cursor to skip ahead n\n\t\t                            // records.\n\t\t                            advanced = true;\n\t\t                            cursor.advance(n);\n\t\t                        } else {\n\t\t                            // When we get here, we've got the nth key.\n\t\t                            resolve(cursor.key);\n\t\t                        }\n\t\t                    }\n\t\t                };\n\n\t\t                req.onerror = function () {\n\t\t                    reject(req.error);\n\t\t                };\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function keys(callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n\t\t                var req = store.openCursor();\n\t\t                var keys = [];\n\n\t\t                req.onsuccess = function () {\n\t\t                    var cursor = req.result;\n\n\t\t                    if (!cursor) {\n\t\t                        resolve(keys);\n\t\t                        return;\n\t\t                    }\n\n\t\t                    keys.push(cursor.key);\n\t\t                    cursor['continue']();\n\t\t                };\n\n\t\t                req.onerror = function () {\n\t\t                    reject(req.error);\n\t\t                };\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function executeCallback(promise, callback) {\n\t\t        if (callback) {\n\t\t            promise.then(function (result) {\n\t\t                callback(null, result);\n\t\t            }, function (error) {\n\t\t                callback(error);\n\t\t            });\n\t\t        }\n\t\t    }\n\n\t\t    var asyncStorage = {\n\t\t        _driver: 'asyncStorage',\n\t\t        _initStorage: _initStorage,\n\t\t        iterate: iterate,\n\t\t        getItem: getItem,\n\t\t        setItem: setItem,\n\t\t        removeItem: removeItem,\n\t\t        clear: clear,\n\t\t        length: length,\n\t\t        key: key,\n\t\t        keys: keys\n\t\t    };\n\n\t\t    return asyncStorage;\n\t\t})(typeof window !== 'undefined' ? window : self);\n\t\texports['default'] = asyncStorage;\n\t\tmodule.exports = exports['default'];\n\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports, __webpack_require__) {\n\n\t\t// If IndexedDB isn't available, we'll fall back to localStorage.\n\t\t// Note that this will have considerable performance and storage\n\t\t// side-effects (all data will be serialized on save and only data that\n\t\t// can be converted to a string via `JSON.stringify()` will be saved).\n\t\t'use strict';\n\n\t\texports.__esModule = true;\n\t\tvar localStorageWrapper = (function (globalObject) {\n\t\t    'use strict';\n\n\t\t    var localStorage = null;\n\n\t\t    // If the app is running inside a Google Chrome packaged webapp, or some\n\t\t    // other context where localStorage isn't available, we don't use\n\t\t    // localStorage. This feature detection is preferred over the old\n\t\t    // `if (window.chrome && window.chrome.runtime)` code.\n\t\t    // See: https://github.com/mozilla/localForage/issues/68\n\t\t    try {\n\t\t        // If localStorage isn't available, we get outta here!\n\t\t        // This should be inside a try catch\n\t\t        if (!globalObject.localStorage || !('setItem' in globalObject.localStorage)) {\n\t\t            return;\n\t\t        }\n\t\t        // Initialize localStorage and create a variable to use throughout\n\t\t        // the code.\n\t\t        localStorage = globalObject.localStorage;\n\t\t    } catch (e) {\n\t\t        return;\n\t\t    }\n\n\t\t    // Config the localStorage backend, using options set in the config.\n\t\t    function _initStorage(options) {\n\t\t        var self = this;\n\t\t        var dbInfo = {};\n\t\t        if (options) {\n\t\t            for (var i in options) {\n\t\t                dbInfo[i] = options[i];\n\t\t            }\n\t\t        }\n\n\t\t        dbInfo.keyPrefix = dbInfo.name + '/';\n\n\t\t        if (dbInfo.storeName !== self._defaultConfig.storeName) {\n\t\t            dbInfo.keyPrefix += dbInfo.storeName + '/';\n\t\t        }\n\n\t\t        self._dbInfo = dbInfo;\n\n\t\t        return new Promise(function (resolve, reject) {\n\t\t            resolve(__webpack_require__(3));\n\t\t        }).then(function (lib) {\n\t\t            dbInfo.serializer = lib;\n\t\t            return Promise.resolve();\n\t\t        });\n\t\t    }\n\n\t\t    // Remove all keys from the datastore, effectively destroying all data in\n\t\t    // the app's key/value store!\n\t\t    function clear(callback) {\n\t\t        var self = this;\n\t\t        var promise = self.ready().then(function () {\n\t\t            var keyPrefix = self._dbInfo.keyPrefix;\n\n\t\t            for (var i = localStorage.length - 1; i >= 0; i--) {\n\t\t                var key = localStorage.key(i);\n\n\t\t                if (key.indexOf(keyPrefix) === 0) {\n\t\t                    localStorage.removeItem(key);\n\t\t                }\n\t\t            }\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Retrieve an item from the store. Unlike the original async_storage\n\t\t    // library in Gaia, we don't modify return values at all. If a key's value\n\t\t    // is `undefined`, we pass that value to the callback function.\n\t\t    function getItem(key, callback) {\n\t\t        var self = this;\n\n\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t        if (typeof key !== 'string') {\n\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t            key = String(key);\n\t\t        }\n\n\t\t        var promise = self.ready().then(function () {\n\t\t            var dbInfo = self._dbInfo;\n\t\t            var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n\t\t            // If a result was found, parse it from the serialized\n\t\t            // string into a JS object. If result isn't truthy, the key\n\t\t            // is likely undefined and we'll pass it straight to the\n\t\t            // callback.\n\t\t            if (result) {\n\t\t                result = dbInfo.serializer.deserialize(result);\n\t\t            }\n\n\t\t            return result;\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Iterate over all items in the store.\n\t\t    function iterate(iterator, callback) {\n\t\t        var self = this;\n\n\t\t        var promise = self.ready().then(function () {\n\t\t            var dbInfo = self._dbInfo;\n\t\t            var keyPrefix = dbInfo.keyPrefix;\n\t\t            var keyPrefixLength = keyPrefix.length;\n\t\t            var length = localStorage.length;\n\n\t\t            // We use a dedicated iterator instead of the `i` variable below\n\t\t            // so other keys we fetch in localStorage aren't counted in\n\t\t            // the `iterationNumber` argument passed to the `iterate()`\n\t\t            // callback.\n\t\t            //\n\t\t            // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n\t\t            var iterationNumber = 1;\n\n\t\t            for (var i = 0; i < length; i++) {\n\t\t                var key = localStorage.key(i);\n\t\t                if (key.indexOf(keyPrefix) !== 0) {\n\t\t                    continue;\n\t\t                }\n\t\t                var value = localStorage.getItem(key);\n\n\t\t                // If a result was found, parse it from the serialized\n\t\t                // string into a JS object. If result isn't truthy, the\n\t\t                // key is likely undefined and we'll pass it straight\n\t\t                // to the iterator.\n\t\t                if (value) {\n\t\t                    value = dbInfo.serializer.deserialize(value);\n\t\t                }\n\n\t\t                value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n\t\t                if (value !== void 0) {\n\t\t                    return value;\n\t\t                }\n\t\t            }\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Same as localStorage's key() method, except takes a callback.\n\t\t    function key(n, callback) {\n\t\t        var self = this;\n\t\t        var promise = self.ready().then(function () {\n\t\t            var dbInfo = self._dbInfo;\n\t\t            var result;\n\t\t            try {\n\t\t                result = localStorage.key(n);\n\t\t            } catch (error) {\n\t\t                result = null;\n\t\t            }\n\n\t\t            // Remove the prefix from the key, if a key is found.\n\t\t            if (result) {\n\t\t                result = result.substring(dbInfo.keyPrefix.length);\n\t\t            }\n\n\t\t            return result;\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function keys(callback) {\n\t\t        var self = this;\n\t\t        var promise = self.ready().then(function () {\n\t\t            var dbInfo = self._dbInfo;\n\t\t            var length = localStorage.length;\n\t\t            var keys = [];\n\n\t\t            for (var i = 0; i < length; i++) {\n\t\t                if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n\t\t                    keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n\t\t                }\n\t\t            }\n\n\t\t            return keys;\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Supply the number of keys in the datastore to the callback function.\n\t\t    function length(callback) {\n\t\t        var self = this;\n\t\t        var promise = self.keys().then(function (keys) {\n\t\t            return keys.length;\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Remove an item from the store, nice and simple.\n\t\t    function removeItem(key, callback) {\n\t\t        var self = this;\n\n\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t        if (typeof key !== 'string') {\n\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t            key = String(key);\n\t\t        }\n\n\t\t        var promise = self.ready().then(function () {\n\t\t            var dbInfo = self._dbInfo;\n\t\t            localStorage.removeItem(dbInfo.keyPrefix + key);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Set a key's value and run an optional callback once the value is set.\n\t\t    // Unlike Gaia's implementation, the callback function is passed the value,\n\t\t    // in case you want to operate on that value only after you're sure it\n\t\t    // saved, or something like that.\n\t\t    function setItem(key, value, callback) {\n\t\t        var self = this;\n\n\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t        if (typeof key !== 'string') {\n\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t            key = String(key);\n\t\t        }\n\n\t\t        var promise = self.ready().then(function () {\n\t\t            // Convert undefined values to null.\n\t\t            // https://github.com/mozilla/localForage/pull/42\n\t\t            if (value === undefined) {\n\t\t                value = null;\n\t\t            }\n\n\t\t            // Save the original value to pass to the callback.\n\t\t            var originalValue = value;\n\n\t\t            return new Promise(function (resolve, reject) {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                dbInfo.serializer.serialize(value, function (value, error) {\n\t\t                    if (error) {\n\t\t                        reject(error);\n\t\t                    } else {\n\t\t                        try {\n\t\t                            localStorage.setItem(dbInfo.keyPrefix + key, value);\n\t\t                            resolve(originalValue);\n\t\t                        } catch (e) {\n\t\t                            // localStorage capacity exceeded.\n\t\t                            // TODO: Make this a specific error/event.\n\t\t                            if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n\t\t                                reject(e);\n\t\t                            }\n\t\t                            reject(e);\n\t\t                        }\n\t\t                    }\n\t\t                });\n\t\t            });\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function executeCallback(promise, callback) {\n\t\t        if (callback) {\n\t\t            promise.then(function (result) {\n\t\t                callback(null, result);\n\t\t            }, function (error) {\n\t\t                callback(error);\n\t\t            });\n\t\t        }\n\t\t    }\n\n\t\t    var localStorageWrapper = {\n\t\t        _driver: 'localStorageWrapper',\n\t\t        _initStorage: _initStorage,\n\t\t        // Default API, from Gaia/localStorage.\n\t\t        iterate: iterate,\n\t\t        getItem: getItem,\n\t\t        setItem: setItem,\n\t\t        removeItem: removeItem,\n\t\t        clear: clear,\n\t\t        length: length,\n\t\t        key: key,\n\t\t        keys: keys\n\t\t    };\n\n\t\t    return localStorageWrapper;\n\t\t})(typeof window !== 'undefined' ? window : self);\n\t\texports['default'] = localStorageWrapper;\n\t\tmodule.exports = exports['default'];\n\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports) {\n\n\t\t'use strict';\n\n\t\texports.__esModule = true;\n\t\tvar localforageSerializer = (function (globalObject) {\n\t\t    'use strict';\n\n\t\t    // Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n\t\t    // it to Base64, so this is how we store it to prevent very strange errors with less\n\t\t    // verbose ways of binary <-> string data storage.\n\t\t    var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t\t    var BLOB_TYPE_PREFIX = '~~local_forage_type~';\n\t\t    var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\n\t\t    var SERIALIZED_MARKER = '__lfsc__:';\n\t\t    var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n\t\t    // OMG the serializations!\n\t\t    var TYPE_ARRAYBUFFER = 'arbf';\n\t\t    var TYPE_BLOB = 'blob';\n\t\t    var TYPE_INT8ARRAY = 'si08';\n\t\t    var TYPE_UINT8ARRAY = 'ui08';\n\t\t    var TYPE_UINT8CLAMPEDARRAY = 'uic8';\n\t\t    var TYPE_INT16ARRAY = 'si16';\n\t\t    var TYPE_INT32ARRAY = 'si32';\n\t\t    var TYPE_UINT16ARRAY = 'ur16';\n\t\t    var TYPE_UINT32ARRAY = 'ui32';\n\t\t    var TYPE_FLOAT32ARRAY = 'fl32';\n\t\t    var TYPE_FLOAT64ARRAY = 'fl64';\n\t\t    var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\n\t\t    // Abstracts constructing a Blob object, so it also works in older\n\t\t    // browsers that don't support the native Blob constructor. (i.e.\n\t\t    // old QtWebKit versions, at least).\n\t\t    function _createBlob(parts, properties) {\n\t\t        parts = parts || [];\n\t\t        properties = properties || {};\n\n\t\t        try {\n\t\t            return new Blob(parts, properties);\n\t\t        } catch (err) {\n\t\t            if (err.name !== 'TypeError') {\n\t\t                throw err;\n\t\t            }\n\n\t\t            var BlobBuilder = globalObject.BlobBuilder || globalObject.MSBlobBuilder || globalObject.MozBlobBuilder || globalObject.WebKitBlobBuilder;\n\n\t\t            var builder = new BlobBuilder();\n\t\t            for (var i = 0; i < parts.length; i += 1) {\n\t\t                builder.append(parts[i]);\n\t\t            }\n\n\t\t            return builder.getBlob(properties.type);\n\t\t        }\n\t\t    }\n\n\t\t    // Serialize a value, afterwards executing a callback (which usually\n\t\t    // instructs the `setItem()` callback/promise to be executed). This is how\n\t\t    // we store binary data with localStorage.\n\t\t    function serialize(value, callback) {\n\t\t        var valueString = '';\n\t\t        if (value) {\n\t\t            valueString = value.toString();\n\t\t        }\n\n\t\t        // Cannot use `value instanceof ArrayBuffer` or such here, as these\n\t\t        // checks fail when running the tests using casper.js...\n\t\t        //\n\t\t        // TODO: See why those tests fail and use a better solution.\n\t\t        if (value && (value.toString() === '[object ArrayBuffer]' || value.buffer && value.buffer.toString() === '[object ArrayBuffer]')) {\n\t\t            // Convert binary arrays to a string and prefix the string with\n\t\t            // a special marker.\n\t\t            var buffer;\n\t\t            var marker = SERIALIZED_MARKER;\n\n\t\t            if (value instanceof ArrayBuffer) {\n\t\t                buffer = value;\n\t\t                marker += TYPE_ARRAYBUFFER;\n\t\t            } else {\n\t\t                buffer = value.buffer;\n\n\t\t                if (valueString === '[object Int8Array]') {\n\t\t                    marker += TYPE_INT8ARRAY;\n\t\t                } else if (valueString === '[object Uint8Array]') {\n\t\t                    marker += TYPE_UINT8ARRAY;\n\t\t                } else if (valueString === '[object Uint8ClampedArray]') {\n\t\t                    marker += TYPE_UINT8CLAMPEDARRAY;\n\t\t                } else if (valueString === '[object Int16Array]') {\n\t\t                    marker += TYPE_INT16ARRAY;\n\t\t                } else if (valueString === '[object Uint16Array]') {\n\t\t                    marker += TYPE_UINT16ARRAY;\n\t\t                } else if (valueString === '[object Int32Array]') {\n\t\t                    marker += TYPE_INT32ARRAY;\n\t\t                } else if (valueString === '[object Uint32Array]') {\n\t\t                    marker += TYPE_UINT32ARRAY;\n\t\t                } else if (valueString === '[object Float32Array]') {\n\t\t                    marker += TYPE_FLOAT32ARRAY;\n\t\t                } else if (valueString === '[object Float64Array]') {\n\t\t                    marker += TYPE_FLOAT64ARRAY;\n\t\t                } else {\n\t\t                    callback(new Error('Failed to get type for BinaryArray'));\n\t\t                }\n\t\t            }\n\n\t\t            callback(marker + bufferToString(buffer));\n\t\t        } else if (valueString === '[object Blob]') {\n\t\t            // Conver the blob to a binaryArray and then to a string.\n\t\t            var fileReader = new FileReader();\n\n\t\t            fileReader.onload = function () {\n\t\t                // Backwards-compatible prefix for the blob type.\n\t\t                var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n\t\t                callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n\t\t            };\n\n\t\t            fileReader.readAsArrayBuffer(value);\n\t\t        } else {\n\t\t            try {\n\t\t                callback(JSON.stringify(value));\n\t\t            } catch (e) {\n\t\t                console.error(\"Couldn't convert value into a JSON string: \", value);\n\n\t\t                callback(null, e);\n\t\t            }\n\t\t        }\n\t\t    }\n\n\t\t    // Deserialize data we've inserted into a value column/field. We place\n\t\t    // special markers into our strings to mark them as encoded; this isn't\n\t\t    // as nice as a meta field, but it's the only sane thing we can do whilst\n\t\t    // keeping localStorage support intact.\n\t\t    //\n\t\t    // Oftentimes this will just deserialize JSON content, but if we have a\n\t\t    // special marker (SERIALIZED_MARKER, defined above), we will extract\n\t\t    // some kind of arraybuffer/binary data/typed array out of the string.\n\t\t    function deserialize(value) {\n\t\t        // If we haven't marked this string as being specially serialized (i.e.\n\t\t        // something other than serialized JSON), we can just return it and be\n\t\t        // done with it.\n\t\t        if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n\t\t            return JSON.parse(value);\n\t\t        }\n\n\t\t        // The following code deals with deserializing some kind of Blob or\n\t\t        // TypedArray. First we separate out the type of data we're dealing\n\t\t        // with from the data itself.\n\t\t        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n\t\t        var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n\t\t        var blobType;\n\t\t        // Backwards-compatible blob type serialization strategy.\n\t\t        // DBs created with older versions of localForage will simply not have the blob type.\n\t\t        if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n\t\t            var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n\t\t            blobType = matcher[1];\n\t\t            serializedString = serializedString.substring(matcher[0].length);\n\t\t        }\n\t\t        var buffer = stringToBuffer(serializedString);\n\n\t\t        // Return the right type based on the code/type set during\n\t\t        // serialization.\n\t\t        switch (type) {\n\t\t            case TYPE_ARRAYBUFFER:\n\t\t                return buffer;\n\t\t            case TYPE_BLOB:\n\t\t                return _createBlob([buffer], { type: blobType });\n\t\t            case TYPE_INT8ARRAY:\n\t\t                return new Int8Array(buffer);\n\t\t            case TYPE_UINT8ARRAY:\n\t\t                return new Uint8Array(buffer);\n\t\t            case TYPE_UINT8CLAMPEDARRAY:\n\t\t                return new Uint8ClampedArray(buffer);\n\t\t            case TYPE_INT16ARRAY:\n\t\t                return new Int16Array(buffer);\n\t\t            case TYPE_UINT16ARRAY:\n\t\t                return new Uint16Array(buffer);\n\t\t            case TYPE_INT32ARRAY:\n\t\t                return new Int32Array(buffer);\n\t\t            case TYPE_UINT32ARRAY:\n\t\t                return new Uint32Array(buffer);\n\t\t            case TYPE_FLOAT32ARRAY:\n\t\t                return new Float32Array(buffer);\n\t\t            case TYPE_FLOAT64ARRAY:\n\t\t                return new Float64Array(buffer);\n\t\t            default:\n\t\t                throw new Error('Unkown type: ' + type);\n\t\t        }\n\t\t    }\n\n\t\t    function stringToBuffer(serializedString) {\n\t\t        // Fill the string into a ArrayBuffer.\n\t\t        var bufferLength = serializedString.length * 0.75;\n\t\t        var len = serializedString.length;\n\t\t        var i;\n\t\t        var p = 0;\n\t\t        var encoded1, encoded2, encoded3, encoded4;\n\n\t\t        if (serializedString[serializedString.length - 1] === '=') {\n\t\t            bufferLength--;\n\t\t            if (serializedString[serializedString.length - 2] === '=') {\n\t\t                bufferLength--;\n\t\t            }\n\t\t        }\n\n\t\t        var buffer = new ArrayBuffer(bufferLength);\n\t\t        var bytes = new Uint8Array(buffer);\n\n\t\t        for (i = 0; i < len; i += 4) {\n\t\t            encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n\t\t            encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n\t\t            encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n\t\t            encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n\t\t            /*jslint bitwise: true */\n\t\t            bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n\t\t            bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n\t\t            bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n\t\t        }\n\t\t        return buffer;\n\t\t    }\n\n\t\t    // Converts a buffer to a string to store, serialized, in the backend\n\t\t    // storage library.\n\t\t    function bufferToString(buffer) {\n\t\t        // base64-arraybuffer\n\t\t        var bytes = new Uint8Array(buffer);\n\t\t        var base64String = '';\n\t\t        var i;\n\n\t\t        for (i = 0; i < bytes.length; i += 3) {\n\t\t            /*jslint bitwise: true */\n\t\t            base64String += BASE_CHARS[bytes[i] >> 2];\n\t\t            base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n\t\t            base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n\t\t            base64String += BASE_CHARS[bytes[i + 2] & 63];\n\t\t        }\n\n\t\t        if (bytes.length % 3 === 2) {\n\t\t            base64String = base64String.substring(0, base64String.length - 1) + '=';\n\t\t        } else if (bytes.length % 3 === 1) {\n\t\t            base64String = base64String.substring(0, base64String.length - 2) + '==';\n\t\t        }\n\n\t\t        return base64String;\n\t\t    }\n\n\t\t    var localforageSerializer = {\n\t\t        serialize: serialize,\n\t\t        deserialize: deserialize,\n\t\t        stringToBuffer: stringToBuffer,\n\t\t        bufferToString: bufferToString\n\t\t    };\n\n\t\t    return localforageSerializer;\n\t\t})(typeof window !== 'undefined' ? window : self);\n\t\texports['default'] = localforageSerializer;\n\t\tmodule.exports = exports['default'];\n\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\n\t\t/*\n\t\t * Includes code from:\n\t\t *\n\t\t * base64-arraybuffer\n\t\t * https://github.com/niklasvh/base64-arraybuffer\n\t\t *\n\t\t * Copyright (c) 2012 Niklas von Hertzen\n\t\t * Licensed under the MIT license.\n\t\t */\n\t\t'use strict';\n\n\t\texports.__esModule = true;\n\t\tvar webSQLStorage = (function (globalObject) {\n\t\t    'use strict';\n\n\t\t    var openDatabase = globalObject.openDatabase;\n\n\t\t    // If WebSQL methods aren't available, we can stop now.\n\t\t    if (!openDatabase) {\n\t\t        return;\n\t\t    }\n\n\t\t    // Open the WebSQL database (automatically creates one if one didn't\n\t\t    // previously exist), using any options set in the config.\n\t\t    function _initStorage(options) {\n\t\t        var self = this;\n\t\t        var dbInfo = {\n\t\t            db: null\n\t\t        };\n\n\t\t        if (options) {\n\t\t            for (var i in options) {\n\t\t                dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n\t\t            }\n\t\t        }\n\n\t\t        var dbInfoPromise = new Promise(function (resolve, reject) {\n\t\t            // Open the database; the openDatabase API will automatically\n\t\t            // create it for us if it doesn't exist.\n\t\t            try {\n\t\t                dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n\t\t            } catch (e) {\n\t\t                return reject(e);\n\t\t            }\n\n\t\t            // Create our key/value table if it doesn't exist.\n\t\t            dbInfo.db.transaction(function (t) {\n\t\t                t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n\t\t                    self._dbInfo = dbInfo;\n\t\t                    resolve();\n\t\t                }, function (t, error) {\n\t\t                    reject(error);\n\t\t                });\n\t\t            });\n\t\t        });\n\n\t\t        return new Promise(function (resolve, reject) {\n\t\t            resolve(__webpack_require__(3));\n\t\t        }).then(function (lib) {\n\t\t            dbInfo.serializer = lib;\n\t\t            return dbInfoPromise;\n\t\t        });\n\t\t    }\n\n\t\t    function getItem(key, callback) {\n\t\t        var self = this;\n\n\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t        if (typeof key !== 'string') {\n\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t            key = String(key);\n\t\t        }\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                dbInfo.db.transaction(function (t) {\n\t\t                    t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n\t\t                        var result = results.rows.length ? results.rows.item(0).value : null;\n\n\t\t                        // Check to see if this is serialized content we need to\n\t\t                        // unpack.\n\t\t                        if (result) {\n\t\t                            result = dbInfo.serializer.deserialize(result);\n\t\t                        }\n\n\t\t                        resolve(result);\n\t\t                    }, function (t, error) {\n\n\t\t                        reject(error);\n\t\t                    });\n\t\t                });\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function iterate(iterator, callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\n\t\t                dbInfo.db.transaction(function (t) {\n\t\t                    t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n\t\t                        var rows = results.rows;\n\t\t                        var length = rows.length;\n\n\t\t                        for (var i = 0; i < length; i++) {\n\t\t                            var item = rows.item(i);\n\t\t                            var result = item.value;\n\n\t\t                            // Check to see if this is serialized content\n\t\t                            // we need to unpack.\n\t\t                            if (result) {\n\t\t                                result = dbInfo.serializer.deserialize(result);\n\t\t                            }\n\n\t\t                            result = iterator(result, item.key, i + 1);\n\n\t\t                            // void(0) prevents problems with redefinition\n\t\t                            // of `undefined`.\n\t\t                            if (result !== void 0) {\n\t\t                                resolve(result);\n\t\t                                return;\n\t\t                            }\n\t\t                        }\n\n\t\t                        resolve();\n\t\t                    }, function (t, error) {\n\t\t                        reject(error);\n\t\t                    });\n\t\t                });\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function setItem(key, value, callback) {\n\t\t        var self = this;\n\n\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t        if (typeof key !== 'string') {\n\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t            key = String(key);\n\t\t        }\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                // The localStorage API doesn't return undefined values in an\n\t\t                // \"expected\" way, so undefined is always cast to null in all\n\t\t                // drivers. See: https://github.com/mozilla/localForage/pull/42\n\t\t                if (value === undefined) {\n\t\t                    value = null;\n\t\t                }\n\n\t\t                // Save the original value to pass to the callback.\n\t\t                var originalValue = value;\n\n\t\t                var dbInfo = self._dbInfo;\n\t\t                dbInfo.serializer.serialize(value, function (value, error) {\n\t\t                    if (error) {\n\t\t                        reject(error);\n\t\t                    } else {\n\t\t                        dbInfo.db.transaction(function (t) {\n\t\t                            t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n\t\t                                resolve(originalValue);\n\t\t                            }, function (t, error) {\n\t\t                                reject(error);\n\t\t                            });\n\t\t                        }, function (sqlError) {\n\t\t                            // The transaction failed; check\n\t\t                            // to see if it's a quota error.\n\t\t                            if (sqlError.code === sqlError.QUOTA_ERR) {\n\t\t                                // We reject the callback outright for now, but\n\t\t                                // it's worth trying to re-run the transaction.\n\t\t                                // Even if the user accepts the prompt to use\n\t\t                                // more storage on Safari, this error will\n\t\t                                // be called.\n\t\t                                //\n\t\t                                // TODO: Try to re-run the transaction.\n\t\t                                reject(sqlError);\n\t\t                            }\n\t\t                        });\n\t\t                    }\n\t\t                });\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function removeItem(key, callback) {\n\t\t        var self = this;\n\n\t\t        // Cast the key to a string, as that's all we can set as a key.\n\t\t        if (typeof key !== 'string') {\n\t\t            globalObject.console.warn(key + ' used as a key, but it is not a string.');\n\t\t            key = String(key);\n\t\t        }\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                dbInfo.db.transaction(function (t) {\n\t\t                    t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n\t\t                        resolve();\n\t\t                    }, function (t, error) {\n\n\t\t                        reject(error);\n\t\t                    });\n\t\t                });\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Deletes every item in the table.\n\t\t    // TODO: Find out if this resets the AUTO_INCREMENT number.\n\t\t    function clear(callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                dbInfo.db.transaction(function (t) {\n\t\t                    t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n\t\t                        resolve();\n\t\t                    }, function (t, error) {\n\t\t                        reject(error);\n\t\t                    });\n\t\t                });\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Does a simple `COUNT(key)` to get the number of items stored in\n\t\t    // localForage.\n\t\t    function length(callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                dbInfo.db.transaction(function (t) {\n\t\t                    // Ahhh, SQL makes this one soooooo easy.\n\t\t                    t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n\t\t                        var result = results.rows.item(0).c;\n\n\t\t                        resolve(result);\n\t\t                    }, function (t, error) {\n\n\t\t                        reject(error);\n\t\t                    });\n\t\t                });\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    // Return the key located at key index X; essentially gets the key from a\n\t\t    // `WHERE id = ?`. This is the most efficient way I can think to implement\n\t\t    // this rarely-used (in my experience) part of the API, but it can seem\n\t\t    // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n\t\t    // the ID of each key will change every time it's updated. Perhaps a stored\n\t\t    // procedure for the `setItem()` SQL would solve this problem?\n\t\t    // TODO: Don't change ID on `setItem()`.\n\t\t    function key(n, callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                dbInfo.db.transaction(function (t) {\n\t\t                    t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n\t\t                        var result = results.rows.length ? results.rows.item(0).key : null;\n\t\t                        resolve(result);\n\t\t                    }, function (t, error) {\n\t\t                        reject(error);\n\t\t                    });\n\t\t                });\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function keys(callback) {\n\t\t        var self = this;\n\n\t\t        var promise = new Promise(function (resolve, reject) {\n\t\t            self.ready().then(function () {\n\t\t                var dbInfo = self._dbInfo;\n\t\t                dbInfo.db.transaction(function (t) {\n\t\t                    t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n\t\t                        var keys = [];\n\n\t\t                        for (var i = 0; i < results.rows.length; i++) {\n\t\t                            keys.push(results.rows.item(i).key);\n\t\t                        }\n\n\t\t                        resolve(keys);\n\t\t                    }, function (t, error) {\n\n\t\t                        reject(error);\n\t\t                    });\n\t\t                });\n\t\t            })['catch'](reject);\n\t\t        });\n\n\t\t        executeCallback(promise, callback);\n\t\t        return promise;\n\t\t    }\n\n\t\t    function executeCallback(promise, callback) {\n\t\t        if (callback) {\n\t\t            promise.then(function (result) {\n\t\t                callback(null, result);\n\t\t            }, function (error) {\n\t\t                callback(error);\n\t\t            });\n\t\t        }\n\t\t    }\n\n\t\t    var webSQLStorage = {\n\t\t        _driver: 'webSQLStorage',\n\t\t        _initStorage: _initStorage,\n\t\t        iterate: iterate,\n\t\t        getItem: getItem,\n\t\t        setItem: setItem,\n\t\t        removeItem: removeItem,\n\t\t        clear: clear,\n\t\t        length: length,\n\t\t        key: key,\n\t\t        keys: keys\n\t\t    };\n\n\t\t    return webSQLStorage;\n\t\t})(typeof window !== 'undefined' ? window : self);\n\t\texports['default'] = webSQLStorage;\n\t\tmodule.exports = exports['default'];\n\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(2)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\n\tfunction noop() {}\n\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/papergirl/dist/papergirl.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE =\n  (typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element')) ||\n  0xeac7;\n\nvar ReactElement = {};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  return (\n    typeof object === 'object' &&\n    object !== null &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n};\n\nvar ReactPropTypeLocationNames = {\n  prop: 'prop',\n  context: 'context',\n  childContext: 'child context',\n};\n\n\n\n\nvar emptyFunction = {\n  thatReturns: function(what) {\n    return function(){ return what; };\n  }\n};\n\n\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (\n    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL]\n  );\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\n\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: createElementTypeChecker(),\n  instanceOf: createInstanceTypeChecker,\n  node: createNodeChecker(),\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker,\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(\n    isRequired,\n    props,\n    propName,\n    componentName,\n    location,\n    propFullName\n  ) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error(\n          `Required ${locationName} \\`${propFullName}\\` was not specified in ` +\n          `\\`${componentName}\\`.`\n        );\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${preciseType}\\` supplied to \\`${componentName}\\`, expected ` +\n        `\\`${expectedType}\\`.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${propType}\\` supplied to \\`${componentName}\\`, expected an array.`\n      );\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(\n        propValue,\n        i,\n        componentName,\n        location,\n        `${propFullName}[${i}]`\n      );\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` supplied to ` +\n        `\\`${componentName}\\`, expected a single ReactElement.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      var actualClassName = getClassName(props[propName]);\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${actualClassName}\\` supplied to \\`${componentName}\\`, expected ` +\n        `instance of \\`${expectedClassName}\\`.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  if (!Array.isArray(expectedValues)) {\n    return createChainableTypeChecker(function() {\n      return new Error(\n        `Invalid argument supplied to oneOf, expected an instance of array.`\n      );\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error(\n      `Invalid ${locationName} \\`${propFullName}\\` of value \\`${propValue}\\` ` +\n      `supplied to \\`${componentName}\\`, expected one of ${valuesString}.`\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type ` +\n        `\\`${propType}\\` supplied to \\`${componentName}\\`, expected an object.`\n      );\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(\n          propValue,\n          key,\n          componentName,\n          location,\n          `${propFullName}.${key}`\n        );\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  if (!Array.isArray(arrayOfTypeCheckers)) {\n    return createChainableTypeChecker(function() {\n      return new Error(\n        `Invalid argument supplied to oneOfType, expected an instance of array.`\n      );\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (\n        checker(props, propName, componentName, location, propFullName) == null\n      ) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error(\n      `Invalid ${locationName} \\`${propFullName}\\` supplied to ` +\n      `\\`${componentName}\\`.`\n    );\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` supplied to ` +\n        `\\`${componentName}\\`, expected a ReactNode.`\n      );\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error(\n        `Invalid ${locationName} \\`${propFullName}\\` of type \\`${propType}\\` ` +\n        `supplied to \\`${componentName}\\`, expected \\`object\\`.`\n      );\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(\n        propValue,\n        key,\n        componentName,\n        location,\n        `${propFullName}.${key}`\n      );\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n\n      var iteratorFn = getIteratorFn(propValue);\n      if (iteratorFn) {\n        var iterator = iteratorFn.call(propValue);\n        var step;\n        if (iteratorFn !== propValue.entries) {\n          while (!(step = iterator.next()).done) {\n            if (!isNode(step.value)) {\n              return false;\n            }\n          }\n        } else {\n          // Iterator will provide entry [k,v] tuples rather than values.\n          while (!(step = iterator.next()).done) {\n            var entry = step.value;\n            if (entry) {\n              if (!isNode(entry[1])) {\n                return false;\n              }\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\n// Returns class name of the object, if any.\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return ANONYMOUS;\n  }\n  return propValue.constructor.name;\n}\n\nexport default ReactPropTypes;\n\n\n\n/** WEBPACK FOOTER **\n ** index.js\n **/","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support AMD\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support CommonJS\n  } else if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + Math.random() + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        return 'rgba(' + rgbColor.join(', ') + ', ' + Math.random() + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/randomcolor/randomColor.js\n ** module id = 44\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = undefined;\n\nvar _react = require('react');\n\nvar _storeShape = require('../utils/storeShape');\n\nvar _storeShape2 = _interopRequireDefault(_storeShape);\n\nvar _warning = require('../utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar didWarnAboutReceivingStore = false;\nfunction warnAboutReceivingStore() {\n  if (didWarnAboutReceivingStore) {\n    return;\n  }\n  didWarnAboutReceivingStore = true;\n\n  (0, _warning2[\"default\"])('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');\n}\n\nvar Provider = function (_Component) {\n  _inherits(Provider, _Component);\n\n  Provider.prototype.getChildContext = function getChildContext() {\n    return { store: this.store };\n  };\n\n  function Provider(props, context) {\n    _classCallCheck(this, Provider);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n    _this.store = props.store;\n    return _this;\n  }\n\n  Provider.prototype.render = function render() {\n    var children = this.props.children;\n\n    return _react.Children.only(children);\n  };\n\n  return Provider;\n}(_react.Component);\n\nexports[\"default\"] = Provider;\n\nif (process.env.NODE_ENV !== 'production') {\n  Provider.prototype.componentWillReceiveProps = function (nextProps) {\n    var store = this.store;\n    var nextStore = nextProps.store;\n\n    if (store !== nextStore) {\n      warnAboutReceivingStore();\n    }\n  };\n}\n\nProvider.propTypes = {\n  store: _storeShape2[\"default\"].isRequired,\n  children: _react.PropTypes.element.isRequired\n};\nProvider.childContextTypes = {\n  store: _storeShape2[\"default\"].isRequired\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-redux/lib/components/Provider.js\n ** module id = 45\n ** module chunks = 0\n **/","'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__esModule = true;\nexports[\"default\"] = connect;\n\nvar _react = require('react');\n\nvar _storeShape = require('../utils/storeShape');\n\nvar _storeShape2 = _interopRequireDefault(_storeShape);\n\nvar _shallowEqual = require('../utils/shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nvar _wrapActionCreators = require('../utils/wrapActionCreators');\n\nvar _wrapActionCreators2 = _interopRequireDefault(_wrapActionCreators);\n\nvar _warning = require('../utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _hoistNonReactStatics = require('hoist-non-react-statics');\n\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultMapStateToProps = function defaultMapStateToProps(state) {\n  return {};\n}; // eslint-disable-line no-unused-vars\nvar defaultMapDispatchToProps = function defaultMapDispatchToProps(dispatch) {\n  return { dispatch: dispatch };\n};\nvar defaultMergeProps = function defaultMergeProps(stateProps, dispatchProps, parentProps) {\n  return _extends({}, parentProps, stateProps, dispatchProps);\n};\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nvar errorObject = { value: null };\nfunction tryCatch(fn, ctx) {\n  try {\n    return fn.apply(ctx);\n  } catch (e) {\n    errorObject.value = e;\n    return errorObject;\n  }\n}\n\n// Helps track hot reloading.\nvar nextVersion = 0;\n\nfunction connect(mapStateToProps, mapDispatchToProps, mergeProps) {\n  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n  var shouldSubscribe = Boolean(mapStateToProps);\n  var mapState = mapStateToProps || defaultMapStateToProps;\n\n  var mapDispatch = undefined;\n  if (typeof mapDispatchToProps === 'function') {\n    mapDispatch = mapDispatchToProps;\n  } else if (!mapDispatchToProps) {\n    mapDispatch = defaultMapDispatchToProps;\n  } else {\n    mapDispatch = (0, _wrapActionCreators2[\"default\"])(mapDispatchToProps);\n  }\n\n  var finalMergeProps = mergeProps || defaultMergeProps;\n  var _options$pure = options.pure;\n  var pure = _options$pure === undefined ? true : _options$pure;\n  var _options$withRef = options.withRef;\n  var withRef = _options$withRef === undefined ? false : _options$withRef;\n\n  var checkMergedEquals = pure && finalMergeProps !== defaultMergeProps;\n\n  // Helps track hot reloading.\n  var version = nextVersion++;\n\n  return function wrapWithConnect(WrappedComponent) {\n    var connectDisplayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';\n\n    function checkStateShape(props, methodName) {\n      if (!(0, _isPlainObject2[\"default\"])(props)) {\n        (0, _warning2[\"default\"])(methodName + '() in ' + connectDisplayName + ' must return a plain object. ' + ('Instead received ' + props + '.'));\n      }\n    }\n\n    function computeMergedProps(stateProps, dispatchProps, parentProps) {\n      var mergedProps = finalMergeProps(stateProps, dispatchProps, parentProps);\n      if (process.env.NODE_ENV !== 'production') {\n        checkStateShape(mergedProps, 'mergeProps');\n      }\n      return mergedProps;\n    }\n\n    var Connect = function (_Component) {\n      _inherits(Connect, _Component);\n\n      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {\n        return !pure || this.haveOwnPropsChanged || this.hasStoreStateChanged;\n      };\n\n      function Connect(props, context) {\n        _classCallCheck(this, Connect);\n\n        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));\n\n        _this.version = version;\n        _this.store = props.store || context.store;\n\n        (0, _invariant2[\"default\"])(_this.store, 'Could not find \"store\" in either the context or ' + ('props of \"' + connectDisplayName + '\". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass \"store\" as a prop to \"' + connectDisplayName + '\".'));\n\n        var storeState = _this.store.getState();\n        _this.state = { storeState: storeState };\n        _this.clearCache();\n        return _this;\n      }\n\n      Connect.prototype.computeStateProps = function computeStateProps(store, props) {\n        if (!this.finalMapStateToProps) {\n          return this.configureFinalMapState(store, props);\n        }\n\n        var state = store.getState();\n        var stateProps = this.doStatePropsDependOnOwnProps ? this.finalMapStateToProps(state, props) : this.finalMapStateToProps(state);\n\n        if (process.env.NODE_ENV !== 'production') {\n          checkStateShape(stateProps, 'mapStateToProps');\n        }\n        return stateProps;\n      };\n\n      Connect.prototype.configureFinalMapState = function configureFinalMapState(store, props) {\n        var mappedState = mapState(store.getState(), props);\n        var isFactory = typeof mappedState === 'function';\n\n        this.finalMapStateToProps = isFactory ? mappedState : mapState;\n        this.doStatePropsDependOnOwnProps = this.finalMapStateToProps.length !== 1;\n\n        if (isFactory) {\n          return this.computeStateProps(store, props);\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          checkStateShape(mappedState, 'mapStateToProps');\n        }\n        return mappedState;\n      };\n\n      Connect.prototype.computeDispatchProps = function computeDispatchProps(store, props) {\n        if (!this.finalMapDispatchToProps) {\n          return this.configureFinalMapDispatch(store, props);\n        }\n\n        var dispatch = store.dispatch;\n\n        var dispatchProps = this.doDispatchPropsDependOnOwnProps ? this.finalMapDispatchToProps(dispatch, props) : this.finalMapDispatchToProps(dispatch);\n\n        if (process.env.NODE_ENV !== 'production') {\n          checkStateShape(dispatchProps, 'mapDispatchToProps');\n        }\n        return dispatchProps;\n      };\n\n      Connect.prototype.configureFinalMapDispatch = function configureFinalMapDispatch(store, props) {\n        var mappedDispatch = mapDispatch(store.dispatch, props);\n        var isFactory = typeof mappedDispatch === 'function';\n\n        this.finalMapDispatchToProps = isFactory ? mappedDispatch : mapDispatch;\n        this.doDispatchPropsDependOnOwnProps = this.finalMapDispatchToProps.length !== 1;\n\n        if (isFactory) {\n          return this.computeDispatchProps(store, props);\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          checkStateShape(mappedDispatch, 'mapDispatchToProps');\n        }\n        return mappedDispatch;\n      };\n\n      Connect.prototype.updateStatePropsIfNeeded = function updateStatePropsIfNeeded() {\n        var nextStateProps = this.computeStateProps(this.store, this.props);\n        if (this.stateProps && (0, _shallowEqual2[\"default\"])(nextStateProps, this.stateProps)) {\n          return false;\n        }\n\n        this.stateProps = nextStateProps;\n        return true;\n      };\n\n      Connect.prototype.updateDispatchPropsIfNeeded = function updateDispatchPropsIfNeeded() {\n        var nextDispatchProps = this.computeDispatchProps(this.store, this.props);\n        if (this.dispatchProps && (0, _shallowEqual2[\"default\"])(nextDispatchProps, this.dispatchProps)) {\n          return false;\n        }\n\n        this.dispatchProps = nextDispatchProps;\n        return true;\n      };\n\n      Connect.prototype.updateMergedPropsIfNeeded = function updateMergedPropsIfNeeded() {\n        var nextMergedProps = computeMergedProps(this.stateProps, this.dispatchProps, this.props);\n        if (this.mergedProps && checkMergedEquals && (0, _shallowEqual2[\"default\"])(nextMergedProps, this.mergedProps)) {\n          return false;\n        }\n\n        this.mergedProps = nextMergedProps;\n        return true;\n      };\n\n      Connect.prototype.isSubscribed = function isSubscribed() {\n        return typeof this.unsubscribe === 'function';\n      };\n\n      Connect.prototype.trySubscribe = function trySubscribe() {\n        if (shouldSubscribe && !this.unsubscribe) {\n          this.unsubscribe = this.store.subscribe(this.handleChange.bind(this));\n          this.handleChange();\n        }\n      };\n\n      Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {\n        if (this.unsubscribe) {\n          this.unsubscribe();\n          this.unsubscribe = null;\n        }\n      };\n\n      Connect.prototype.componentDidMount = function componentDidMount() {\n        this.trySubscribe();\n      };\n\n      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        if (!pure || !(0, _shallowEqual2[\"default\"])(nextProps, this.props)) {\n          this.haveOwnPropsChanged = true;\n        }\n      };\n\n      Connect.prototype.componentWillUnmount = function componentWillUnmount() {\n        this.tryUnsubscribe();\n        this.clearCache();\n      };\n\n      Connect.prototype.clearCache = function clearCache() {\n        this.dispatchProps = null;\n        this.stateProps = null;\n        this.mergedProps = null;\n        this.haveOwnPropsChanged = true;\n        this.hasStoreStateChanged = true;\n        this.haveStatePropsBeenPrecalculated = false;\n        this.statePropsPrecalculationError = null;\n        this.renderedElement = null;\n        this.finalMapDispatchToProps = null;\n        this.finalMapStateToProps = null;\n      };\n\n      Connect.prototype.handleChange = function handleChange() {\n        if (!this.unsubscribe) {\n          return;\n        }\n\n        var storeState = this.store.getState();\n        var prevStoreState = this.state.storeState;\n        if (pure && prevStoreState === storeState) {\n          return;\n        }\n\n        if (pure && !this.doStatePropsDependOnOwnProps) {\n          var haveStatePropsChanged = tryCatch(this.updateStatePropsIfNeeded, this);\n          if (!haveStatePropsChanged) {\n            return;\n          }\n          if (haveStatePropsChanged === errorObject) {\n            this.statePropsPrecalculationError = errorObject.value;\n          }\n          this.haveStatePropsBeenPrecalculated = true;\n        }\n\n        this.hasStoreStateChanged = true;\n        this.setState({ storeState: storeState });\n      };\n\n      Connect.prototype.getWrappedInstance = function getWrappedInstance() {\n        (0, _invariant2[\"default\"])(withRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the fourth argument of the connect() call.');\n\n        return this.refs.wrappedInstance;\n      };\n\n      Connect.prototype.render = function render() {\n        var haveOwnPropsChanged = this.haveOwnPropsChanged;\n        var hasStoreStateChanged = this.hasStoreStateChanged;\n        var haveStatePropsBeenPrecalculated = this.haveStatePropsBeenPrecalculated;\n        var statePropsPrecalculationError = this.statePropsPrecalculationError;\n        var renderedElement = this.renderedElement;\n\n        this.haveOwnPropsChanged = false;\n        this.hasStoreStateChanged = false;\n        this.haveStatePropsBeenPrecalculated = false;\n        this.statePropsPrecalculationError = null;\n\n        if (statePropsPrecalculationError) {\n          throw statePropsPrecalculationError;\n        }\n\n        var shouldUpdateStateProps = true;\n        var shouldUpdateDispatchProps = true;\n        if (pure && renderedElement) {\n          shouldUpdateStateProps = hasStoreStateChanged || haveOwnPropsChanged && this.doStatePropsDependOnOwnProps;\n          shouldUpdateDispatchProps = haveOwnPropsChanged && this.doDispatchPropsDependOnOwnProps;\n        }\n\n        var haveStatePropsChanged = false;\n        var haveDispatchPropsChanged = false;\n        if (haveStatePropsBeenPrecalculated) {\n          haveStatePropsChanged = true;\n        } else if (shouldUpdateStateProps) {\n          haveStatePropsChanged = this.updateStatePropsIfNeeded();\n        }\n        if (shouldUpdateDispatchProps) {\n          haveDispatchPropsChanged = this.updateDispatchPropsIfNeeded();\n        }\n\n        var haveMergedPropsChanged = true;\n        if (haveStatePropsChanged || haveDispatchPropsChanged || haveOwnPropsChanged) {\n          haveMergedPropsChanged = this.updateMergedPropsIfNeeded();\n        } else {\n          haveMergedPropsChanged = false;\n        }\n\n        if (!haveMergedPropsChanged && renderedElement) {\n          return renderedElement;\n        }\n\n        if (withRef) {\n          this.renderedElement = (0, _react.createElement)(WrappedComponent, _extends({}, this.mergedProps, {\n            ref: 'wrappedInstance'\n          }));\n        } else {\n          this.renderedElement = (0, _react.createElement)(WrappedComponent, this.mergedProps);\n        }\n\n        return this.renderedElement;\n      };\n\n      return Connect;\n    }(_react.Component);\n\n    Connect.displayName = connectDisplayName;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.contextTypes = {\n      store: _storeShape2[\"default\"]\n    };\n    Connect.propTypes = {\n      store: _storeShape2[\"default\"]\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      Connect.prototype.componentWillUpdate = function componentWillUpdate() {\n        if (this.version === version) {\n          return;\n        }\n\n        // We are hot reloading!\n        this.version = version;\n        this.trySubscribe();\n        this.clearCache();\n      };\n    }\n\n    return (0, _hoistNonReactStatics2[\"default\"])(Connect, WrappedComponent);\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-redux/lib/components/connect.js\n ** module id = 46\n ** module chunks = 0\n **/","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = shallowEqual;\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  var hasOwn = Object.prototype.hasOwnProperty;\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-redux/lib/utils/shallowEqual.js\n ** module id = 47\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = wrapActionCreators;\n\nvar _redux = require('redux');\n\nfunction wrapActionCreators(actionCreators) {\n  return function (dispatch) {\n    return (0, _redux.bindActionCreators)(actionCreators, dispatch);\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-redux/lib/utils/wrapActionCreators.js\n ** module id = 48\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports[\"default\"] = applyMiddleware;\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, initialState, enhancer) {\n      var store = createStore(reducer, initialState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2[\"default\"].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/applyMiddleware.js\n ** module id = 49\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/bindActionCreators.js\n ** module id = 50\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = combineReducers;\n\nvar _createStore = require('./createStore');\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key);\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var sanityError;\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n      if (warningMessage) {\n        (0, _warning2[\"default\"])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/combineReducers.js\n ** module id = 51\n ** module chunks = 0\n **/","/* global window */\n'use strict';\n\nmodule.exports = require('./ponyfill')(global || window || this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/symbol-observable/index.js\n ** module id = 52\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/symbol-observable/ponyfill.js\n ** module id = 53\n ** module chunks = 0\n **/"],"sourceRoot":""}